// Generated .IDL file (by the OLE/COM Object Viewer)
// 
// typelib filename: msppt9.olb

[
  uuid(91493440-5A91-11CF-8700-00AA0060263B),
  version(2.6),
  helpstring("Microsoft PowerPoint 9.0 Object Library"),
  helpfile("VBAPPT9.CHM"),
  helpcontext(0x0007a120)
]
library PowerPoint
{
    // TLib :     // TLib : Microsoft Visual Basic for Applications Extensibility 5.3 : {0002E157-0000-0000-C000-000000000046}
    importlib("VBE6EXT.OLB");
    // TLib : Microsoft Office 9.0 Object Library : {2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}
    importlib("MSO9.DLL");
    // TLib : OLE Automation : {00020430-0000-0000-C000-000000000046}
    importlib("stdole2.tlb");

    // Forward declare all types defined in this typelib
    interface Collection;
    interface _Application;
    interface _Global;
    interface ColorFormat;
    interface SlideShowWindow;
    interface Selection;
    interface DocumentWindows;
    interface SlideShowWindows;
    interface DocumentWindow;
    interface View;
    interface SlideShowView;
    interface SlideShowSettings;
    interface NamedSlideShows;
    interface NamedSlideShow;
    interface PrintOptions;
    interface PrintRanges;
    interface PrintRange;
    interface AddIns;
    interface AddIn;
    interface Presentations;
    interface PresEvents;
    interface Hyperlinks;
    interface Hyperlink;
    interface PageSetup;
    interface Fonts;
    interface ExtraColors;
    interface Slides;
    interface _Slide;
    interface SlideRange;
    interface _Master;
    interface SldEvents;
    interface ColorSchemes;
    interface ColorScheme;
    interface RGBColor;
    interface SlideShowTransition;
    interface SoundEffect;
    interface SoundFormat;
    interface HeadersFooters;
    interface Shapes;
    interface Placeholders;
    interface PlaceholderFormat;
    interface FreeformBuilder;
    interface Shape;
    interface ShapeRange;
    interface GroupShapes;
    interface Adjustments;
    interface PictureFormat;
    interface FillFormat;
    interface LineFormat;
    interface ShadowFormat;
    interface ConnectorFormat;
    interface TextEffectFormat;
    interface ThreeDFormat;
    interface TextFrame;
    interface CalloutFormat;
    interface ShapeNodes;
    interface ShapeNode;
    interface OLEFormat;
    interface LinkFormat;
    interface ObjectVerbs;
    interface AnimationSettings;
    interface ActionSettings;
    interface ActionSetting;
    interface PlaySettings;
    interface TextRange;
    interface Ruler;
    interface RulerLevels;
    interface RulerLevel;
    interface TabStops;
    interface TabStop;
    interface Font;
    interface ParagraphFormat;
    interface BulletFormat;
    interface TextStyles;
    interface TextStyle;
    interface TextStyleLevels;
    interface TextStyleLevel;
    interface HeaderFooter;
    interface _Presentation;
    interface PPDialogs;
    interface PPAlert;
    interface PPDialog;
    interface PPTabSheet;
    interface PPControls;
    interface PPTabSheets;
    interface PPControl;
    interface PPPushButton;
    interface PPToggleButton;
    interface PPBitmapButton;
    interface PPListBox;
    interface PPStrings;
    interface PPCheckBox;
    interface PPRadioCluster;
    interface PPStaticText;
    interface PPEditText;
    interface PPIcon;
    interface PPBitmap;
    interface PPSpinner;
    interface PPScrollBar;
    interface PPGroupBox;
    interface PPFrame;
    interface PPTabControl;
    interface PPDropDown;
    interface PPDropDownEdit;
    interface PPSlideMiniature;
    interface PPRadioButton;
    interface Tags;
    interface FileDialogFileList;
    interface FileDialogExtension;
    interface FileDialogExtensionList;
    interface FileDialog;
    interface MouseTracker;
    interface MouseDownHandler;
    interface OCXExtender;
    interface OCXExtenderEvents;
    interface EApplication;
    interface Table;
    interface Columns;
    interface Column;
    interface Rows;
    interface Row;
    interface CellRange;
    interface Cell;
    interface Borders;
    interface Panes;
    interface Pane;
    interface DefaultWebOptions;
    interface WebOptions;
    interface PublishObjects;
    interface PublishObject;
    interface Marker;
    interface MasterEvents;

    typedef enum {
        ppWindowNormal = 1,
        ppWindowMinimized = 2,
        ppWindowMaximized = 3
    } PpWindowState;

    typedef enum {
        ppArrangeTiled = 1,
        ppArrangeCascade = 2
    } PpArrangeStyle;

    typedef enum {
        ppViewSlide = 1,
        ppViewSlideMaster = 2,
        ppViewNotesPage = 3,
        ppViewHandoutMaster = 4,
        ppViewNotesMaster = 5,
        ppViewOutline = 6,
        ppViewSlideSorter = 7,
        ppViewTitleMaster = 8,
        ppViewNormal = 9
    } PpViewType;

    typedef enum {
        ppSchemeColorMixed = -2,
        ppNotSchemeColor = 0,
        ppBackground = 1,
        ppForeground = 2,
        ppShadow = 3,
        ppTitle = 4,
        ppFill = 5,
        ppAccent1 = 6,
        ppAccent2 = 7,
        ppAccent3 = 8
    } PpColorSchemeIndex;

    typedef enum {
        ppSlideSizeOnScreen = 1,
        ppSlideSizeLetterPaper = 2,
        ppSlideSizeA4Paper = 3,
        ppSlideSize35MM = 4,
        ppSlideSizeOverhead = 5,
        ppSlideSizeBanner = 6,
        ppSlideSizeCustom = 7
    } PpSlideSizeType;

    typedef enum {
        ppSaveAsPresentation = 1,
        ppSaveAsPowerPoint7 = 2,
        ppSaveAsPowerPoint4 = 3,
        ppSaveAsPowerPoint3 = 4,
        ppSaveAsTemplate = 5,
        ppSaveAsRTF = 6,
        ppSaveAsShow = 7,
        ppSaveAsAddIn = 8,
        ppSaveAsPowerPoint4FarEast = 10,
        ppSaveAsDefault = 11,
        ppSaveAsHTML = 12,
        ppSaveAsHTMLv3 = 13,
        ppSaveAsHTMLDual = 14,
        ppSaveAsMetaFile = 15,
        ppSaveAsGIF = 16,
        ppSaveAsJPG = 17,
        ppSaveAsPNG = 18,
        ppSaveAsBMP = 19
    } PpSaveAsFileType;

    typedef enum {
        ppDefaultStyle = 1,
        ppTitleStyle = 2,
        ppBodyStyle = 3
    } PpTextStyleType;

    typedef enum {
        ppLayoutMixed = -2,
        ppLayoutTitle = 1,
        ppLayoutText = 2,
        ppLayoutTwoColumnText = 3,
        ppLayoutTable = 4,
        ppLayoutTextAndChart = 5,
        ppLayoutChartAndText = 6,
        ppLayoutOrgchart = 7,
        ppLayoutChart = 8,
        ppLayoutTextAndClipart = 9,
        ppLayoutClipartAndText = 10,
        ppLayoutTitleOnly = 11,
        ppLayoutBlank = 12,
        ppLayoutTextAndObject = 13,
        ppLayoutObjectAndText = 14,
        ppLayoutLargeObject = 15,
        ppLayoutObject = 16,
        ppLayoutTextAndMediaClip = 17,
        ppLayoutMediaClipAndText = 18,
        ppLayoutObjectOverText = 19,
        ppLayoutTextOverObject = 20,
        ppLayoutTextAndTwoObjects = 21,
        ppLayoutTwoObjectsAndText = 22,
        ppLayoutTwoObjectsOverText = 23,
        ppLayoutFourObjects = 24,
        ppLayoutVerticalText = 25,
        ppLayoutClipArtAndVerticalText = 26,
        ppLayoutVerticalTitleAndText = 27,
        ppLayoutVerticalTitleAndTextOverChart = 28
    } PpSlideLayout;

    typedef enum {
        ppEffectMixed = -2,
        ppEffectNone = 0,
        ppEffectCut = 257,
        ppEffectCutThroughBlack = 258,
        ppEffectRandom = 513,
        ppEffectBlindsHorizontal = 769,
        ppEffectBlindsVertical = 770,
        ppEffectCheckerboardAcross = 1025,
        ppEffectCheckerboardDown = 1026,
        ppEffectCoverLeft = 1281,
        ppEffectCoverUp = 1282,
        ppEffectCoverRight = 1283,
        ppEffectCoverDown = 1284,
        ppEffectCoverLeftUp = 1285,
        ppEffectCoverRightUp = 1286,
        ppEffectCoverLeftDown = 1287,
        ppEffectCoverRightDown = 1288,
        ppEffectDissolve = 1537,
        ppEffectFade = 1793,
        ppEffectUncoverLeft = 2049,
        ppEffectUncoverUp = 2050,
        ppEffectUncoverRight = 2051,
        ppEffectUncoverDown = 2052,
        ppEffectUncoverLeftUp = 2053,
        ppEffectUncoverRightUp = 2054,
        ppEffectUncoverLeftDown = 2055,
        ppEffectUncoverRightDown = 2056,
        ppEffectRandomBarsHorizontal = 2305,
        ppEffectRandomBarsVertical = 2306,
        ppEffectStripsUpLeft = 2561,
        ppEffectStripsUpRight = 2562,
        ppEffectStripsDownLeft = 2563,
        ppEffectStripsDownRight = 2564,
        ppEffectStripsLeftUp = 2565,
        ppEffectStripsRightUp = 2566,
        ppEffectStripsLeftDown = 2567,
        ppEffectStripsRightDown = 2568,
        ppEffectWipeLeft = 2817,
        ppEffectWipeUp = 2818,
        ppEffectWipeRight = 2819,
        ppEffectWipeDown = 2820,
        ppEffectBoxOut = 3073,
        ppEffectBoxIn = 3074,
        ppEffectFlyFromLeft = 3329,
        ppEffectFlyFromTop = 3330,
        ppEffectFlyFromRight = 3331,
        ppEffectFlyFromBottom = 3332,
        ppEffectFlyFromTopLeft = 3333,
        ppEffectFlyFromTopRight = 3334,
        ppEffectFlyFromBottomLeft = 3335,
        ppEffectFlyFromBottomRight = 3336,
        ppEffectPeekFromLeft = 3337,
        ppEffectPeekFromDown = 3338,
        ppEffectPeekFromRight = 3339,
        ppEffectPeekFromUp = 3340,
        ppEffectCrawlFromLeft = 3341,
        ppEffectCrawlFromUp = 3342,
        ppEffectCrawlFromRight = 3343,
        ppEffectCrawlFromDown = 3344,
        ppEffectZoomIn = 3345,
        ppEffectZoomInSlightly = 3346,
        ppEffectZoomOut = 3347,
        ppEffectZoomOutSlightly = 3348,
        ppEffectZoomCenter = 3349,
        ppEffectZoomBottom = 3350,
        ppEffectStretchAcross = 3351,
        ppEffectStretchLeft = 3352,
        ppEffectStretchUp = 3353,
        ppEffectStretchRight = 3354,
        ppEffectStretchDown = 3355,
        ppEffectSwivel = 3356,
        ppEffectSpiral = 3357,
        ppEffectSplitHorizontalOut = 3585,
        ppEffectSplitHorizontalIn = 3586,
        ppEffectSplitVerticalOut = 3587,
        ppEffectSplitVerticalIn = 3588,
        ppEffectFlashOnceFast = 3841,
        ppEffectFlashOnceMedium = 3842,
        ppEffectFlashOnceSlow = 3843,
        ppEffectAppear = 3844
    } PpEntryEffect;

    typedef enum {
        ppAnimateLevelMixed = -2,
        ppAnimateLevelNone = 0,
        ppAnimateByFirstLevel = 1,
        ppAnimateBySecondLevel = 2,
        ppAnimateByThirdLevel = 3,
        ppAnimateByFourthLevel = 4,
        ppAnimateByFifthLevel = 5,
        ppAnimateByAllLevels = 16
    } PpTextLevelEffect;

    typedef enum {
        ppAnimateUnitMixed = -2,
        ppAnimateByParagraph = 0,
        ppAnimateByWord = 1,
        ppAnimateByCharacter = 2
    } PpTextUnitEffect;

    typedef enum {
        ppAnimateChartMixed = -2,
        ppAnimateBySeries = 1,
        ppAnimateByCategory = 2,
        ppAnimateBySeriesElements = 3,
        ppAnimateByCategoryElements = 4
    } PpChartUnitEffect;

    typedef enum {
        ppAfterEffectMixed = -2,
        ppAfterEffectNothing = 0,
        ppAfterEffectHide = 1,
        ppAfterEffectDim = 2,
        ppAfterEffectHideOnClick = 3
    } PpAfterEffect;

    typedef enum {
        ppAdvanceModeMixed = -2,
        ppAdvanceOnClick = 1,
        ppAdvanceOnTime = 2
    } PpAdvanceMode;

    typedef enum {
        ppSoundEffectsMixed = -2,
        ppSoundNone = 0,
        ppSoundStopPrevious = 1,
        ppSoundFile = 2
    } PpSoundEffectType;

    typedef enum {
        ppFollowColorsMixed = -2,
        ppFollowColorsNone = 0,
        ppFollowColorsScheme = 1,
        ppFollowColorsTextAndBackground = 2
    } PpFollowColors;

    typedef enum {
        ppUpdateOptionMixed = -2,
        ppUpdateOptionManual = 1,
        ppUpdateOptionAutomatic = 2
    } PpUpdateOption;

    typedef enum {
        ppAlignmentMixed = -2,
        ppAlignLeft = 1,
        ppAlignCenter = 2,
        ppAlignRight = 3,
        ppAlignJustify = 4,
        ppAlignDistribute = 5
    } PpParagraphAlignment;

    typedef enum {
        ppBaselineAlignMixed = -2,
        ppBaselineAlignBaseline = 1,
        ppBaselineAlignTop = 2,
        ppBaselineAlignCenter = 3,
        ppBaselineAlignFarEast50 = 4
    } PpBaselineAlignment;

    typedef enum {
        ppTabStopMixed = -2,
        ppTabStopLeft = 1,
        ppTabStopCenter = 2,
        ppTabStopRight = 3,
        ppTabStopDecimal = 4
    } PpTabStopType;

    typedef enum {
        ppIndentControlMixed = -2,
        ppIndentReplaceAttr = 1,
        ppIndentKeepAttr = 2
    } PpIndentControl;

    typedef enum {
        ppCaseSentence = 1,
        ppCaseLower = 2,
        ppCaseUpper = 3,
        ppCaseTitle = 4,
        ppCaseToggle = 5
    } PpChangeCase;

    typedef enum {
        ppDialogModeMixed = -2,
        ppDialogModeless = 0,
        ppDialogModal = 1
    } PpDialogMode;

    typedef enum {
        ppDialogStyleMixed = -2,
        ppDialogStandard = 1,
        ppDialogTabbed = 2
    } PpDialogStyle;

    typedef enum {
        ppDialogPositionNormal = 1,
        ppDialogPositionCenterParent = 2,
        ppDialogPositionCenterScreen = 3,
        ppDialogPositionRememberLast = 4
    } PpDialogPositioning;

    typedef enum {
        ppDialogFontStyleMixed = -2,
        ppDialogSmall = -1,
        ppDialogItalic = 0
    } PpDialogFontStyle;

    typedef enum {
        ppScrollBarVertical = 0,
        ppScrollBarHorizontal = 1
    } PpScrollBarStyle;

    typedef enum {
        ppListBoxSingle = 0,
        ppListBoxMulti = 1
    } PpListBoxSelectionStyle;

    typedef enum {
        ppListBoxAbbreviationNone = 0,
        ppListBoxAbbreviationTruncation = 1,
        ppListBoxAbbreviationTruncationWithEllipsis = 2,
        ppListBoxAbbreviationFileNames = 3
    } PpListBoxAbbreviationStyle;

    typedef enum {
        ppAlertTypeOK = 0,
        ppAlertTypeOKCANCEL = 1,
        ppAlertTypeYESNO = 2,
        ppAlertTypeYESNOCANCEL = 3,
        ppAlertTypeBACKNEXTCLOSE = 4,
        ppAlertTypeRETRYCANCEL = 5,
        ppAlertTypeABORTRETRYIGNORE = 6
    } PpAlertType;

    typedef enum {
        ppAlertButtonCLOSE = 0,
        ppAlertButtonSNOOZE = 1,
        ppAlertButtonSEARCH = 2,
        ppAlertButtonIGNORE = 3,
        ppAlertButtonABORT = 4,
        ppAlertButtonRETRY = 5,
        ppAlertButtonNEXT = 6,
        ppAlertButtonBACK = 7,
        ppAlertButtonNO = 8,
        ppAlertButtonYES = 9,
        ppAlertButtonCANCEL = 10,
        ppAlertButtonOK = 11,
        ppAlertButtonNULL = 12
    } PpAlertButton;

    typedef enum {
        ppAlertIconQuestionMark = 0,
        ppAlertIconNote = 1,
        ppAlertIconCaution = 2,
        ppAlertIconStop = 3
    } PpAlertIcon;

    typedef enum {
        ppSlideShowPointerNone = 0,
        ppSlideShowPointerArrow = 1,
        ppSlideShowPointerPen = 2,
        ppSlideShowPointerAlwaysHidden = 3,
        ppSlideShowPointerAutoArrow = 4
    } PpSlideShowPointerType;

    typedef enum {
        ppSlideShowRunning = 1,
        ppSlideShowPaused = 2,
        ppSlideShowBlackScreen = 3,
        ppSlideShowWhiteScreen = 4,
        ppSlideShowDone = 5
    } PpSlideShowState;

    typedef enum {
        ppSlideShowManualAdvance = 1,
        ppSlideShowUseSlideTimings = 2,
        ppSlideShowRehearseNewTimings = 3
    } PpSlideShowAdvanceMode;

    typedef enum {
        ppFileDialogOpen = 1,
        ppFileDialogSave = 2
    } PpFileDialogType;

    typedef enum {
        ppFileDialogViewDetails = 1,
        ppFileDialogViewPreview = 2,
        ppFileDialogViewProperties = 3,
        ppFileDialogViewList = 4
    } PpFileDialogView;

    typedef enum {
        ppPrintOutputSlides = 1,
        ppPrintOutputTwoSlideHandouts = 2,
        ppPrintOutputThreeSlideHandouts = 3,
        ppPrintOutputSixSlideHandouts = 4,
        ppPrintOutputNotesPages = 5,
        ppPrintOutputOutline = 6,
        ppPrintOutputBuildSlides = 7,
        ppPrintOutputFourSlideHandouts = 8,
        ppPrintOutputNineSlideHandouts = 9
    } PpPrintOutputType;

    typedef enum {
        ppPrintHandoutVerticalFirst = 1,
        ppPrintHandoutHorizontalFirst = 2
    } PpPrintHandoutOrder;

    typedef enum {
        ppPrintColor = 1,
        ppPrintBlackAndWhite = 2,
        ppPrintPureBlackAndWhite = 3
    } PpPrintColorType;

    typedef enum {
        ppSelectionNone = 0,
        ppSelectionSlides = 1,
        ppSelectionShapes = 2,
        ppSelectionText = 3
    } PpSelectionType;

    typedef enum {
        ppDirectionMixed = -2,
        ppDirectionLeftToRight = 1,
        ppDirectionRightToLeft = 2
    } PpDirection;

    typedef enum {
        ppDateTimeFormatMixed = -2,
        ppDateTimeMdyy = 1,
        ppDateTimeddddMMMMddyyyy = 2,
        ppDateTimedMMMMyyyy = 3,
        ppDateTimeMMMMdyyyy = 4,
        ppDateTimedMMMyy = 5,
        ppDateTimeMMMMyy = 6,
        ppDateTimeMMyy = 7,
        ppDateTimeMMddyyHmm = 8,
        ppDateTimeMMddyyhmmAMPM = 9,
        ppDateTimeHmm = 10,
        ppDateTimeHmmss = 11,
        ppDateTimehmmAMPM = 12,
        ppDateTimehmmssAMPM = 13
    } PpDateTimeFormat;

    typedef enum {
        ppTransitionSpeedMixed = -2,
        ppTransitionSpeedSlow = 1,
        ppTransitionSpeedMedium = 2,
        ppTransitionSpeedFast = 3
    } PpTransitionSpeed;

    typedef enum {
        ppMouseClick = 1,
        ppMouseOver = 2
    } PpMouseActivation;

    typedef enum {
        ppActionMixed = -2,
        ppActionNone = 0,
        ppActionNextSlide = 1,
        ppActionPreviousSlide = 2,
        ppActionFirstSlide = 3,
        ppActionLastSlide = 4,
        ppActionLastSlideViewed = 5,
        ppActionEndShow = 6,
        ppActionHyperlink = 7,
        ppActionRunMacro = 8,
        ppActionRunProgram = 9,
        ppActionNamedSlideShow = 10,
        ppActionOLEVerb = 11,
        ppActionPlay = 12
    } PpActionType;

    typedef enum {
        ppPlaceholderMixed = -2,
        ppPlaceholderTitle = 1,
        ppPlaceholderBody = 2,
        ppPlaceholderCenterTitle = 3,
        ppPlaceholderSubtitle = 4,
        ppPlaceholderVerticalTitle = 5,
        ppPlaceholderVerticalBody = 6,
        ppPlaceholderObject = 7,
        ppPlaceholderChart = 8,
        ppPlaceholderBitmap = 9,
        ppPlaceholderMediaClip = 10,
        ppPlaceholderOrgChart = 11,
        ppPlaceholderTable = 12,
        ppPlaceholderSlideNumber = 13,
        ppPlaceholderHeader = 14,
        ppPlaceholderFooter = 15,
        ppPlaceholderDate = 16
    } PpPlaceholderType;

    typedef enum {
        ppShowTypeSpeaker = 1,
        ppShowTypeWindow = 2,
        ppShowTypeKiosk = 3
    } PpSlideShowType;

    typedef enum {
        ppPrintAll = 1,
        ppPrintSelection = 2,
        ppPrintCurrent = 3,
        ppPrintSlideRange = 4,
        ppPrintNamedSlideShow = 5
    } PpPrintRangeType;

    typedef enum {
        ppAutoSizeMixed = -2,
        ppAutoSizeNone = 0,
        ppAutoSizeShapeToFitText = 1
    } PpAutoSize;

    typedef enum {
        ppMediaTypeMixed = -2,
        ppMediaTypeOther = 1,
        ppMediaTypeSound = 2,
        ppMediaTypeMovie = 3
    } PpMediaType;

    typedef enum {
        ppSoundFormatMixed = -2,
        ppSoundFormatNone = 0,
        ppSoundFormatWAV = 1,
        ppSoundFormatMIDI = 2,
        ppSoundFormatCDAudio = 3
    } PpSoundFormatType;

    typedef enum {
        ppFarEastLineBreakLevelNormal = 1,
        ppFarEastLineBreakLevelStrict = 2,
        ppFarEastLineBreakLevelCustom = 3
    } PpFarEastLineBreakLevel;

    typedef enum {
        ppShowAll = 1,
        ppShowSlideRange = 2,
        ppShowNamedSlideShow = 3
    } PpSlideShowRangeType;

    typedef enum {
        ppFrameColorsBrowserColors = 1,
        ppFrameColorsPresentationSchemeTextColor = 2,
        ppFrameColorsPresentationSchemeAccentColor = 3,
        ppFrameColorsWhiteTextOnBlack = 4,
        ppFrameColorsBlackTextOnWhite = 5
    } PpFrameColors;

    [
      odl,
      uuid(91493450-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007a508),
      hidden,
      dual,
      oleautomation
    ]
    interface Collection : IDispatch {
        [id(0xfffffffc), propget, restricted, helpcontext(0x0007a509)]
        HRESULT _NewEnum([out, retval] IUnknown** _NewEnum);
        [id(0x0000000a), restricted, helpcontext(0x0007a50a)]
        HRESULT _Index(
                        [in] int index, 
                        [out, retval] VARIANT* _Index);
        [id(0x0000000b), propget, helpcontext(0x0007a50b)]
        HRESULT Count([out, retval] long* Count);
    };

    [
      odl,
      uuid(91493442-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007a8f0),
      dual,
      nonextensible,
      oleautomation
    ]
    interface _Application : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0007a8f1)]
        HRESULT Presentations([out, retval] Presentations** Presentations);
        [id(0x000007d2), propget, helpcontext(0x0007a8f2)]
        HRESULT Windows([out, retval] DocumentWindows** Windows);
        [id(0x000007d3), propget, hidden, helpcontext(0x0007a8f3)]
        HRESULT Dialogs([out, retval] PPDialogs** Dialogs);
        [id(0x000007d4), propget, helpcontext(0x0007a8f4)]
        HRESULT ActiveWindow([out, retval] DocumentWindow** ActiveWindow);
        [id(0x000007d5), propget, helpcontext(0x0007a8f5)]
        HRESULT ActivePresentation([out, retval] Presentation** ActivePresentation);
        [id(0x000007d6), propget, helpcontext(0x0007a8f6)]
        HRESULT SlideShowWindows([out, retval] SlideShowWindows** SlideShowWindows);
        [id(0x000007d7), propget, helpcontext(0x0007a8f7)]
        HRESULT CommandBars([out, retval] CommandBars** CommandBars);
        [id(0x000007d8), propget, helpcontext(0x0007a8f8)]
        HRESULT Path([out, retval] BSTR* Path);
        [id(00000000), propget, helpcontext(0x0007a8f9)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x000007d9), propget, helpcontext(0x0007a8fa)]
        HRESULT Caption([out, retval] BSTR* Caption);
        [id(0x000007d9), propput, helpcontext(0x0007a8fa)]
        HRESULT Caption([in] BSTR Caption);
        [id(0x000007da), propget, helpcontext(0x0007a8fb)]
        HRESULT Assistant([out, retval] Assistant** Assistant);
        [id(0x000007db), propget, helpcontext(0x0007a8fc)]
        HRESULT FileSearch([out, retval] FileSearch** FileSearch);
        [id(0x000007dc), propget, helpcontext(0x0007a8fd)]
        HRESULT FileFind([out, retval] IFind** FileFind);
        [id(0x000007dd), propget, helpcontext(0x0007a8fe)]
        HRESULT Build([out, retval] BSTR* Build);
        [id(0x000007de), propget, helpcontext(0x0007a8ff)]
        HRESULT Version([out, retval] BSTR* Version);
        [id(0x000007df), propget, helpcontext(0x0007a900)]
        HRESULT OperatingSystem([out, retval] BSTR* OperatingSystem);
        [id(0x000007e0), propget, helpcontext(0x0007a901)]
        HRESULT ActivePrinter([out, retval] BSTR* ActivePrinter);
        [id(0x000007e1), propget, helpcontext(0x0007a902)]
        HRESULT Creator([out, retval] long* Creator);
        [id(0x000007e2), propget, helpcontext(0x0007a903)]
        HRESULT AddIns([out, retval] AddIns** AddIns);
        [id(0x000007e3), propget, helpcontext(0x0007a904)]
        HRESULT VBE([out, retval] VBE** VBE);
        [id(0x000007e4), helpcontext(0x0007a905)]
        HRESULT Help(
                        [in, optional, defaultvalue("vbappt9.chm")] BSTR HelpFile, 
                        [in, optional, defaultvalue(0)] int ContextID);
        [id(0x000007e5), helpcontext(0x0007a906)]
        HRESULT Quit();
        [id(0x000007e6), vararg, helpcontext(0x0007a907)]
        HRESULT Run(
                        [in] BSTR MacroName, 
                        [in] SAFEARRAY(VARIANT)* safeArrayOfParams, 
                        [out, retval] VARIANT* Run);
        [id(0x000007e7), hidden, helpcontext(0x0007a908)]
        HRESULT FileDialog(
                        [in] PpFileDialogType Type, 
                        [out, retval] FileDialog** FileDialog);
        [id(0x000007e8), restricted, helpcontext(0x0007a909)]
        HRESULT LaunchSpelling([in] DocumentWindow* pWindow);
        [id(0x000007e9), propget, helpcontext(0x0007a90a)]
        HRESULT Left([out, retval] single* Left);
        [id(0x000007e9), propput, helpcontext(0x0007a90a)]
        HRESULT Left([in] single Left);
        [id(0x000007ea), propget, helpcontext(0x0007a90b)]
        HRESULT Top([out, retval] single* Top);
        [id(0x000007ea), propput, helpcontext(0x0007a90b)]
        HRESULT Top([in] single Top);
        [id(0x000007eb), propget, helpcontext(0x0007a90c)]
        HRESULT Width([out, retval] single* Width);
        [id(0x000007eb), propput, helpcontext(0x0007a90c)]
        HRESULT Width([in] single Width);
        [id(0x000007ec), propget, helpcontext(0x0007a90d)]
        HRESULT Height([out, retval] single* Height);
        [id(0x000007ec), propput, helpcontext(0x0007a90d)]
        HRESULT Height([in] single Height);
        [id(0x000007ed), propget, helpcontext(0x0007a90e)]
        HRESULT WindowState([out, retval] PpWindowState* WindowState);
        [id(0x000007ed), propput, helpcontext(0x0007a90e)]
        HRESULT WindowState([in] PpWindowState WindowState);
        [id(0x000007ee), propget, helpcontext(0x0007a90f)]
        HRESULT Visible([out, retval] MsoTriState* Visible);
        [id(0x000007ee), propput, helpcontext(0x0007a90f)]
        HRESULT Visible([in] MsoTriState Visible);
        [id(0x000007ef), propget, restricted, helpcontext(0x0007a910)]
        HRESULT HWND([out, retval] long* HWND);
        [id(0x000007f0), propget, helpcontext(0x0007a911)]
        HRESULT Active([out, retval] MsoTriState* Active);
        [id(0x000007f1), helpcontext(0x0007a912)]
        HRESULT Activate();
        [id(0x000007f2), propget, helpcontext(0x0007a913)]
        HRESULT AnswerWizard([out, retval] AnswerWizard** AnswerWizard);
        [id(0x000007f3), propget, helpcontext(0x0007a914)]
        HRESULT COMAddIns([out, retval] COMAddIns** COMAddIns);
        [id(0x000007f4), propget, helpcontext(0x0007a915)]
        HRESULT ProductCode([out, retval] BSTR* ProductCode);
        [id(0x000007f5), propget, helpcontext(0x0007a916)]
        HRESULT DefaultWebOptions([out, retval] DefaultWebOptions** DefaultWebOptions);
        [id(0x000007f6), propget, helpcontext(0x0007a917)]
        HRESULT LanguageSettings([out, retval] LanguageSettings** LanguageSettings);
        [id(0x000007f7), propget, hidden, helpcontext(0x0007a918)]
        HRESULT MsoDebugOptions([out, retval] MsoDebugOptions** MsoDebugOptions);
        [id(0x000007f8), propget, helpcontext(0x0007a919)]
        HRESULT ShowWindowsInTaskbar([out, retval] MsoTriState* ShowWindowsInTaskbar);
        [id(0x000007f8), propput, helpcontext(0x0007a919)]
        HRESULT ShowWindowsInTaskbar([in] MsoTriState ShowWindowsInTaskbar);
        [id(0x000007f9), propget, hidden, helpcontext(0x0007a91a)]
        HRESULT Marker([out, retval] Marker** Marker);
        [id(0x000007fa), propget, helpcontext(0x0007a91b)]
        HRESULT FeatureInstall([out, retval] MsoFeatureInstall* FeatureInstall);
        [id(0x000007fa), propput, helpcontext(0x0007a91b)]
        HRESULT FeatureInstall([in] MsoFeatureInstall FeatureInstall);
        [id(0x000007fb), hidden, helpcontext(0x0007a91c)]
        HRESULT GetOptionFlag(
                        [in] long Option, 
                        [in, optional, defaultvalue(0)] VARIANT_BOOL Persist, 
                        [out, retval] VARIANT_BOOL* GetOptionFlag);
        [id(0x000007fc), hidden, helpcontext(0x0007a91d)]
        HRESULT SetOptionFlag(
                        [in] long Option, 
                        [in] VARIANT_BOOL State, 
                        [in, optional, defaultvalue(0)] VARIANT_BOOL Persist);
    };

    [
      odl,
      uuid(91493451-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007acd8),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface _Global : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0007acd9)]
        HRESULT ActivePresentation([out, retval] Presentation** ActivePresentation);
        [id(0x000007d2), propget, helpcontext(0x0007acda)]
        HRESULT ActiveWindow([out, retval] DocumentWindow** ActiveWindow);
        [id(0x000007d3), propget, helpcontext(0x0007acdb)]
        HRESULT AddIns([out, retval] AddIns** AddIns);
        [id(0x000007d4), propget, helpcontext(0x0007acdc)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d5), propget, helpcontext(0x0007acdd)]
        HRESULT Assistant([out, retval] Assistant** Assistant);
        [id(0x000007d6), propget, hidden, helpcontext(0x0007acde)]
        HRESULT Dialogs([out, retval] PPDialogs** Dialogs);
        [id(0x000007d7), propget, helpcontext(0x0007acdf)]
        HRESULT Presentations([out, retval] Presentations** Presentations);
        [id(0x000007d8), propget, helpcontext(0x0007ace0)]
        HRESULT SlideShowWindows([out, retval] SlideShowWindows** SlideShowWindows);
        [id(0x000007d9), propget, helpcontext(0x0007ace1)]
        HRESULT Windows([out, retval] DocumentWindows** Windows);
        [id(0x000007da), propget, helpcontext(0x0007ace2)]
        HRESULT CommandBars([out, retval] CommandBars** CommandBars);
        [id(0x000007db), propget, helpcontext(0x0007ace3)]
        HRESULT AnswerWizard([out, retval] AnswerWizard** AnswerWizard);
    };

    [
      uuid(91493441-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007b0c0)
    ]
    coclass Application {
        [default] interface _Application;
        [default, source] interface EApplication;
    };

    [
      uuid(91493443-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007b4a8),
      appobject,
      hidden
    ]
    coclass Global {
        [default] interface _Global;
    };

    [
      odl,
      uuid(91493452-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007b890),
      dual,
      nonextensible,
      oleautomation
    ]
    interface ColorFormat : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x0007b891)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), propget, helpcontext(0x0007b892)]
        HRESULT RGB([out, retval] MsoRGBType* RGB);
        [id(00000000), propput, helpcontext(0x0007b892)]
        HRESULT RGB([in] MsoRGBType RGB);
        [id(0x00000065), propget, helpcontext(0x0007b893)]
        HRESULT Type([out, retval] MsoColorType* Type);
        [id(0x000007d3), propget, helpcontext(0x0007b894)]
        HRESULT SchemeColor([out, retval] PpColorSchemeIndex* SchemeColor);
        [id(0x000007d3), propput, helpcontext(0x0007b894)]
        HRESULT SchemeColor([in] PpColorSchemeIndex SchemeColor);
    };

    [
      odl,
      uuid(91493453-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007bc78),
      dual,
      nonextensible,
      oleautomation
    ]
    interface SlideShowWindow : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0007bc79)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0007bc7a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0007bc7b)]
        HRESULT View([out, retval] SlideShowView** View);
        [id(0x000007d4), propget, helpcontext(0x0007bc7c)]
        HRESULT Presentation([out, retval] Presentation** Presentation);
        [id(0x000007d5), propget, helpcontext(0x0007bc7d)]
        HRESULT IsFullScreen([out, retval] MsoTriState* IsFullScreen);
        [id(0x000007d6), propget, helpcontext(0x0007bc7e)]
        HRESULT Left([out, retval] single* Left);
        [id(0x000007d6), propput, helpcontext(0x0007bc7e)]
        HRESULT Left([in] single Left);
        [id(0x000007d7), propget, helpcontext(0x0007bc7f)]
        HRESULT Top([out, retval] single* Top);
        [id(0x000007d7), propput, helpcontext(0x0007bc7f)]
        HRESULT Top([in] single Top);
        [id(0x000007d8), propget, helpcontext(0x0007bc80)]
        HRESULT Width([out, retval] single* Width);
        [id(0x000007d8), propput, helpcontext(0x0007bc80)]
        HRESULT Width([in] single Width);
        [id(0x000007d9), propget, helpcontext(0x0007bc81)]
        HRESULT Height([out, retval] single* Height);
        [id(0x000007d9), propput, helpcontext(0x0007bc81)]
        HRESULT Height([in] single Height);
        [id(0x000007da), propget, restricted, helpcontext(0x0007bc82)]
        HRESULT HWND([out, retval] long* HWND);
        [id(0x000007db), propget, helpcontext(0x0007bc83)]
        HRESULT Active([out, retval] MsoTriState* Active);
        [id(0x000007dc), helpcontext(0x0007bc84)]
        HRESULT Activate();
    };

    [
      odl,
      uuid(91493454-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007c060),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Selection : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0007c061)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0007c062)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), helpcontext(0x0007c063)]
        HRESULT Cut();
        [id(0x000007d4), helpcontext(0x0007c064)]
        HRESULT Copy();
        [id(0x000007d5), helpcontext(0x0007c065)]
        HRESULT Delete();
        [id(0x000007d6), helpcontext(0x0007c066)]
        HRESULT Unselect();
        [id(0x000007d7), propget, helpcontext(0x0007c067)]
        HRESULT Type([out, retval] PpSelectionType* Type);
        [id(0x000007d8), propget, helpcontext(0x0007c068)]
        HRESULT SlideRange([out, retval] SlideRange** SlideRange);
        [id(0x000007d9), propget, helpcontext(0x0007c069)]
        HRESULT ShapeRange([out, retval] ShapeRange** ShapeRange);
        [id(0x000007da), propget, helpcontext(0x0007c06a)]
        HRESULT TextRange([out, retval] TextRange** TextRange);
    };

    [
      odl,
      uuid(91493455-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007c448),
      dual,
      nonextensible,
      oleautomation
    ]
    interface DocumentWindows : Collection {
        [id(0x000007d1), propget, helpcontext(0x0007c449)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0007c44a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x0007c44b)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] DocumentWindow** Item);
        [id(0x000007d3), helpcontext(0x0007c44c)]
        HRESULT Arrange([in, optional, defaultvalue(1)] PpArrangeStyle arrangeStyle);
    };

    [
      odl,
      uuid(91493456-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007c830),
      dual,
      nonextensible,
      oleautomation
    ]
    interface SlideShowWindows : Collection {
        [id(0x000007d1), propget, helpcontext(0x0007c831)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0007c832)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x0007c833)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] SlideShowWindow** Item);
    };

    [
      odl,
      uuid(91493457-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007cc18),
      dual,
      nonextensible,
      oleautomation
    ]
    interface DocumentWindow : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0007cc19)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0007cc1a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0007cc1b)]
        HRESULT Selection([out, retval] Selection** Selection);
        [id(0x000007d4), propget, helpcontext(0x0007cc1c)]
        HRESULT View([out, retval] View** View);
        [id(0x000007d5), propget, helpcontext(0x0007cc1d)]
        HRESULT Presentation([out, retval] Presentation** Presentation);
        [id(0x000007d6), propget, helpcontext(0x0007cc1e)]
        HRESULT ViewType([out, retval] PpViewType* ViewType);
        [id(0x000007d6), propput, helpcontext(0x0007cc1e)]
        HRESULT ViewType([in] PpViewType ViewType);
        [id(0x000007d7), propget, helpcontext(0x0007cc1f)]
        HRESULT BlackAndWhite([out, retval] MsoTriState* BlackAndWhite);
        [id(0x000007d7), propput, helpcontext(0x0007cc1f)]
        HRESULT BlackAndWhite([in] MsoTriState BlackAndWhite);
        [id(0x000007d8), propget, helpcontext(0x0007cc20)]
        HRESULT Active([out, retval] MsoTriState* Active);
        [id(0x000007d9), propget, helpcontext(0x0007cc21)]
        HRESULT WindowState([out, retval] PpWindowState* WindowState);
        [id(0x000007d9), propput, helpcontext(0x0007cc21)]
        HRESULT WindowState([in] PpWindowState WindowState);
        [id(00000000), propget, helpcontext(0x0007cc22)]
        HRESULT Caption([out, retval] BSTR* Caption);
        [id(0x000007da), propget, helpcontext(0x0007cc23)]
        HRESULT Left([out, retval] single* Left);
        [id(0x000007da), propput, helpcontext(0x0007cc23)]
        HRESULT Left([in] single Left);
        [id(0x000007db), propget, helpcontext(0x0007cc24)]
        HRESULT Top([out, retval] single* Top);
        [id(0x000007db), propput, helpcontext(0x0007cc24)]
        HRESULT Top([in] single Top);
        [id(0x000007dc), propget, helpcontext(0x0007cc25)]
        HRESULT Width([out, retval] single* Width);
        [id(0x000007dc), propput, helpcontext(0x0007cc25)]
        HRESULT Width([in] single Width);
        [id(0x000007dd), propget, helpcontext(0x0007cc26)]
        HRESULT Height([out, retval] single* Height);
        [id(0x000007dd), propput, helpcontext(0x0007cc26)]
        HRESULT Height([in] single Height);
        [id(0x000007de), helpcontext(0x0007cc27)]
        HRESULT FitToPage();
        [id(0x000007df), helpcontext(0x0007cc28)]
        HRESULT Activate();
        [id(0x000007e0), helpcontext(0x0007cc29)]
        HRESULT LargeScroll(
                        [in, optional, defaultvalue(1)] int Down, 
                        [in, optional, defaultvalue(0)] int Up, 
                        [in, optional, defaultvalue(0)] int ToRight, 
                        [in, optional, defaultvalue(0)] int ToLeft);
        [id(0x000007e1), helpcontext(0x0007cc2a)]
        HRESULT SmallScroll(
                        [in, optional, defaultvalue(1)] int Down, 
                        [in, optional, defaultvalue(0)] int Up, 
                        [in, optional, defaultvalue(0)] int ToRight, 
                        [in, optional, defaultvalue(0)] int ToLeft);
        [id(0x000007e2), helpcontext(0x0007cc2b)]
        HRESULT NewWindow([out, retval] DocumentWindow** NewWindow);
        [id(0x000007e3), helpcontext(0x0007cc2c)]
        HRESULT Close();
        [id(0x000007e4), propget, restricted, helpcontext(0x0007cc2d)]
        HRESULT HWND([out, retval] long* HWND);
        [id(0x000007e5), propget, helpcontext(0x0007cc2e)]
        HRESULT ActivePane([out, retval] Pane** ActivePane);
        [id(0x000007e6), propget, helpcontext(0x0007cc2f)]
        HRESULT Panes([out, retval] Panes** Panes);
        [id(0x000007e7), propget, helpcontext(0x0007cc30)]
        HRESULT SplitVertical([out, retval] long* SplitVertical);
        [id(0x000007e7), propput, helpcontext(0x0007cc30)]
        HRESULT SplitVertical([in] long SplitVertical);
        [id(0x000007e8), propget, helpcontext(0x0007cc31)]
        HRESULT SplitHorizontal([out, retval] long* SplitHorizontal);
        [id(0x000007e8), propput, helpcontext(0x0007cc31)]
        HRESULT SplitHorizontal([in] long SplitHorizontal);
        [id(0x000007e9), helpcontext(0x0007cc32)]
        HRESULT RangeFromPoint(
                        [in] int X, 
                        [in] int Y, 
                        [out, retval] IDispatch** RangeFromPoint);
        [id(0x000007ea), helpcontext(0x0007cc33)]
        HRESULT PointsToScreenPixelsX(
                        [in] single Points, 
                        [out, retval] int* PointsToScreenPixelsX);
        [id(0x000007eb), helpcontext(0x0007cc34)]
        HRESULT PointsToScreenPixelsY(
                        [in] single Points, 
                        [out, retval] int* PointsToScreenPixelsY);
        [id(0x000007ec), helpcontext(0x0007cc35)]
        HRESULT ScrollIntoView(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [in, optional, defaultvalue(-1)] MsoTriState Start);
    };

    [
      odl,
      uuid(91493458-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007d000),
      dual,
      nonextensible,
      oleautomation
    ]
    interface View : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0007d001)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0007d002)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0007d003)]
        HRESULT Type([out, retval] PpViewType* Type);
        [id(0x000007d4), propget, helpcontext(0x0007d004)]
        HRESULT Zoom([out, retval] int* Zoom);
        [id(0x000007d4), propput, helpcontext(0x0007d004)]
        HRESULT Zoom([in] int Zoom);
        [id(0x000007d5), helpcontext(0x0007d005)]
        HRESULT Paste();
        [id(0x000007d6), propget, helpcontext(0x0007d006)]
        HRESULT Slide([out, retval] IDispatch** Slide);
        [id(0x000007d6), propput, helpcontext(0x0007d006)]
        HRESULT Slide([in] IDispatch* Slide);
        [id(0x000007d7), helpcontext(0x0007d007)]
        HRESULT GotoSlide([in] int index);
        [id(0x000007d8), propget, helpcontext(0x0007d008)]
        HRESULT DisplaySlideMiniature([out, retval] MsoTriState* DisplaySlideMiniature);
        [id(0x000007d8), propput, helpcontext(0x0007d008)]
        HRESULT DisplaySlideMiniature([in] MsoTriState DisplaySlideMiniature);
        [id(0x000007d9), propget, helpcontext(0x0007d009)]
        HRESULT ZoomToFit([out, retval] MsoTriState* ZoomToFit);
        [id(0x000007d9), propput, helpcontext(0x0007d009)]
        HRESULT ZoomToFit([in] MsoTriState ZoomToFit);
    };

    [
      odl,
      uuid(91493459-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007d3e8),
      dual,
      nonextensible,
      oleautomation
    ]
    interface SlideShowView : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0007d3e9)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0007d3ea)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0007d3eb)]
        HRESULT Zoom([out, retval] int* Zoom);
        [id(0x000007d4), propget, helpcontext(0x0007d3ec)]
        HRESULT Slide([out, retval] Slide** Slide);
        [id(0x000007d5), propget, helpcontext(0x0007d3ed)]
        HRESULT PointerType([out, retval] PpSlideShowPointerType* PointerType);
        [id(0x000007d5), propput, helpcontext(0x0007d3ed)]
        HRESULT PointerType([in] PpSlideShowPointerType PointerType);
        [id(0x000007d6), propget, helpcontext(0x0007d3ee)]
        HRESULT State([out, retval] PpSlideShowState* State);
        [id(0x000007d6), propput, helpcontext(0x0007d3ee)]
        HRESULT State([in] PpSlideShowState State);
        [id(0x000007d7), propget, helpcontext(0x0007d3ef)]
        HRESULT AcceleratorsEnabled([out, retval] MsoTriState* AcceleratorsEnabled);
        [id(0x000007d7), propput, helpcontext(0x0007d3ef)]
        HRESULT AcceleratorsEnabled([in] MsoTriState AcceleratorsEnabled);
        [id(0x000007d8), propget, helpcontext(0x0007d3f0)]
        HRESULT PresentationElapsedTime([out, retval] single* PresentationElapsedTime);
        [id(0x000007d9), propget, helpcontext(0x0007d3f1)]
        HRESULT SlideElapsedTime([out, retval] single* SlideElapsedTime);
        [id(0x000007d9), propput, helpcontext(0x0007d3f1)]
        HRESULT SlideElapsedTime([in] single SlideElapsedTime);
        [id(0x000007da), propget, helpcontext(0x0007d3f2)]
        HRESULT LastSlideViewed([out, retval] Slide** LastSlideViewed);
        [id(0x000007db), propget, helpcontext(0x0007d3f3)]
        HRESULT AdvanceMode([out, retval] PpSlideShowAdvanceMode* AdvanceMode);
        [id(0x000007dc), propget, helpcontext(0x0007d3f4)]
        HRESULT PointerColor([out, retval] ColorFormat** PointerColor);
        [id(0x000007dd), propget, helpcontext(0x0007d3f5)]
        HRESULT IsNamedShow([out, retval] MsoTriState* IsNamedShow);
        [id(0x000007de), propget, helpcontext(0x0007d3f6)]
        HRESULT SlideShowName([out, retval] BSTR* SlideShowName);
        [id(0x000007df), helpcontext(0x0007d3f7)]
        HRESULT DrawLine(
                        [in] single BeginX, 
                        [in] single BeginY, 
                        [in] single EndX, 
                        [in] single EndY);
        [id(0x000007e0), helpcontext(0x0007d3f8)]
        HRESULT EraseDrawing();
        [id(0x000007e1), helpcontext(0x0007d3f9)]
        HRESULT First();
        [id(0x000007e2), helpcontext(0x0007d3fa)]
        HRESULT Last();
        [id(0x000007e3), helpcontext(0x0007d3fb)]
        HRESULT Next();
        [id(0x000007e4), helpcontext(0x0007d3fc)]
        HRESULT Previous();
        [id(0x000007e5), helpcontext(0x0007d3fd)]
        HRESULT GotoSlide(
                        [in] int index, 
                        [in, optional, defaultvalue(-1)] MsoTriState ResetSlide);
        [id(0x000007e6), helpcontext(0x0007d3fe)]
        HRESULT GotoNamedShow([in] BSTR SlideShowName);
        [id(0x000007e7), helpcontext(0x0007d3ff)]
        HRESULT EndNamedShow();
        [id(0x000007e8), helpcontext(0x0007d400)]
        HRESULT ResetSlideTime();
        [id(0x000007e9), helpcontext(0x0007d401)]
        HRESULT Exit();
        [id(0x000007ea), hidden, helpcontext(0x0007d402)]
        HRESULT InstallTracker(
                        [in] MouseTracker* pTracker, 
                        [in] MsoTriState Presenter);
        [id(0x000007eb), propget, helpcontext(0x0007d403)]
        HRESULT CurrentShowPosition([out, retval] int* CurrentShowPosition);
    };

    [
      odl,
      uuid(9149345A-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007d7d0),
      dual,
      nonextensible,
      oleautomation
    ]
    interface SlideShowSettings : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0007d7d1)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0007d7d2)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0007d7d3)]
        HRESULT PointerColor([out, retval] ColorFormat** PointerColor);
        [id(0x000007d4), propget, helpcontext(0x0007d7d4)]
        HRESULT NamedSlideShows([out, retval] NamedSlideShows** NamedSlideShows);
        [id(0x000007d5), propget, helpcontext(0x0007d7d5)]
        HRESULT StartingSlide([out, retval] int* StartingSlide);
        [id(0x000007d5), propput, helpcontext(0x0007d7d5)]
        HRESULT StartingSlide([in] int StartingSlide);
        [id(0x000007d6), propget, helpcontext(0x0007d7d6)]
        HRESULT EndingSlide([out, retval] int* EndingSlide);
        [id(0x000007d6), propput, helpcontext(0x0007d7d6)]
        HRESULT EndingSlide([in] int EndingSlide);
        [id(0x000007d7), propget, helpcontext(0x0007d7d7)]
        HRESULT AdvanceMode([out, retval] PpSlideShowAdvanceMode* AdvanceMode);
        [id(0x000007d7), propput, helpcontext(0x0007d7d7)]
        HRESULT AdvanceMode([in] PpSlideShowAdvanceMode AdvanceMode);
        [id(0x000007d8), helpcontext(0x0007d7d8)]
        HRESULT Run([out, retval] SlideShowWindow** Run);
        [id(0x000007d9), propget, helpcontext(0x0007d7d9)]
        HRESULT LoopUntilStopped([out, retval] MsoTriState* LoopUntilStopped);
        [id(0x000007d9), propput, helpcontext(0x0007d7d9)]
        HRESULT LoopUntilStopped([in] MsoTriState LoopUntilStopped);
        [id(0x000007da), propget, helpcontext(0x0007d7da)]
        HRESULT ShowType([out, retval] PpSlideShowType* ShowType);
        [id(0x000007da), propput, helpcontext(0x0007d7da)]
        HRESULT ShowType([in] PpSlideShowType ShowType);
        [id(0x000007db), propget, helpcontext(0x0007d7db)]
        HRESULT ShowWithNarration([out, retval] MsoTriState* ShowWithNarration);
        [id(0x000007db), propput, helpcontext(0x0007d7db)]
        HRESULT ShowWithNarration([in] MsoTriState ShowWithNarration);
        [id(0x000007dc), propget, helpcontext(0x0007d7dc)]
        HRESULT ShowWithAnimation([out, retval] MsoTriState* ShowWithAnimation);
        [id(0x000007dc), propput, helpcontext(0x0007d7dc)]
        HRESULT ShowWithAnimation([in] MsoTriState ShowWithAnimation);
        [id(0x000007dd), propget, helpcontext(0x0007d7dd)]
        HRESULT SlideShowName([out, retval] BSTR* SlideShowName);
        [id(0x000007dd), propput, helpcontext(0x0007d7dd)]
        HRESULT SlideShowName([in] BSTR SlideShowName);
        [id(0x000007de), propget, helpcontext(0x0007d7de)]
        HRESULT RangeType([out, retval] PpSlideShowRangeType* RangeType);
        [id(0x000007de), propput, helpcontext(0x0007d7de)]
        HRESULT RangeType([in] PpSlideShowRangeType RangeType);
    };

    [
      odl,
      uuid(9149345B-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007dbb8),
      dual,
      nonextensible,
      oleautomation
    ]
    interface NamedSlideShows : Collection {
        [id(0x000007d1), propget, helpcontext(0x0007dbb9)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0007dbba)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x0007dbbb)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] NamedSlideShow** Item);
        [id(0x000007d3), helpcontext(0x0007dbbc)]
        HRESULT Add(
                        [in] BSTR Name, 
                        [in] VARIANT safeArrayOfSlideIDs, 
                        [out, retval] NamedSlideShow** Add);
    };

    [
      odl,
      uuid(9149345C-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007dfa0),
      dual,
      nonextensible,
      oleautomation
    ]
    interface NamedSlideShow : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0007dfa1)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0007dfa2)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0007dfa3)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x000007d4), helpcontext(0x0007dfa4)]
        HRESULT Delete();
        [id(0x000007d5), propget, helpcontext(0x0007dfa5)]
        HRESULT SlideIDs([out, retval] VARIANT* SlideIDs);
        [id(0x000007d6), propget, helpcontext(0x0007dfa6)]
        HRESULT Count([out, retval] long* Count);
    };

    [
      odl,
      uuid(9149345D-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007e388),
      dual,
      nonextensible,
      oleautomation
    ]
    interface PrintOptions : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0007e389)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0007e38a)]
        HRESULT PrintColorType([out, retval] PpPrintColorType* PrintColorType);
        [id(0x000007d2), propput, helpcontext(0x0007e38a)]
        HRESULT PrintColorType([in] PpPrintColorType PrintColorType);
        [id(0x000007d3), propget, helpcontext(0x0007e38b)]
        HRESULT Collate([out, retval] MsoTriState* Collate);
        [id(0x000007d3), propput, helpcontext(0x0007e38b)]
        HRESULT Collate([in] MsoTriState Collate);
        [id(0x000007d4), propget, helpcontext(0x0007e38c)]
        HRESULT FitToPage([out, retval] MsoTriState* FitToPage);
        [id(0x000007d4), propput, helpcontext(0x0007e38c)]
        HRESULT FitToPage([in] MsoTriState FitToPage);
        [id(0x000007d5), propget, helpcontext(0x0007e38d)]
        HRESULT FrameSlides([out, retval] MsoTriState* FrameSlides);
        [id(0x000007d5), propput, helpcontext(0x0007e38d)]
        HRESULT FrameSlides([in] MsoTriState FrameSlides);
        [id(0x000007d6), propget, helpcontext(0x0007e38e)]
        HRESULT NumberOfCopies([out, retval] int* NumberOfCopies);
        [id(0x000007d6), propput, helpcontext(0x0007e38e)]
        HRESULT NumberOfCopies([in] int NumberOfCopies);
        [id(0x000007d7), propget, helpcontext(0x0007e38f)]
        HRESULT OutputType([out, retval] PpPrintOutputType* OutputType);
        [id(0x000007d7), propput, helpcontext(0x0007e38f)]
        HRESULT OutputType([in] PpPrintOutputType OutputType);
        [id(0x000007d8), propget, helpcontext(0x0007e390)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d9), propget, helpcontext(0x0007e391)]
        HRESULT PrintHiddenSlides([out, retval] MsoTriState* PrintHiddenSlides);
        [id(0x000007d9), propput, helpcontext(0x0007e391)]
        HRESULT PrintHiddenSlides([in] MsoTriState PrintHiddenSlides);
        [id(0x000007da), propget, helpcontext(0x0007e392)]
        HRESULT PrintInBackground([out, retval] MsoTriState* PrintInBackground);
        [id(0x000007da), propput, helpcontext(0x0007e392)]
        HRESULT PrintInBackground([in] MsoTriState PrintInBackground);
        [id(0x000007db), propget, helpcontext(0x0007e393)]
        HRESULT RangeType([out, retval] PpPrintRangeType* RangeType);
        [id(0x000007db), propput, helpcontext(0x0007e393)]
        HRESULT RangeType([in] PpPrintRangeType RangeType);
        [id(0x000007dc), propget, helpcontext(0x0007e394)]
        HRESULT Ranges([out, retval] PrintRanges** Ranges);
        [id(0x000007dd), propget, helpcontext(0x0007e395)]
        HRESULT PrintFontsAsGraphics([out, retval] MsoTriState* PrintFontsAsGraphics);
        [id(0x000007dd), propput, helpcontext(0x0007e395)]
        HRESULT PrintFontsAsGraphics([in] MsoTriState PrintFontsAsGraphics);
        [id(0x000007de), propget, helpcontext(0x0007e396)]
        HRESULT SlideShowName([out, retval] BSTR* SlideShowName);
        [id(0x000007de), propput, helpcontext(0x0007e396)]
        HRESULT SlideShowName([in] BSTR SlideShowName);
        [id(0x000007df), propget, helpcontext(0x0007e397)]
        HRESULT ActivePrinter([out, retval] BSTR* ActivePrinter);
        [id(0x000007df), propput, helpcontext(0x0007e397)]
        HRESULT ActivePrinter([in] BSTR ActivePrinter);
        [id(0x000007e0), propget, helpcontext(0x0007e398)]
        HRESULT HandoutOrder([out, retval] PpPrintHandoutOrder* HandoutOrder);
        [id(0x000007e0), propput, helpcontext(0x0007e398)]
        HRESULT HandoutOrder([in] PpPrintHandoutOrder HandoutOrder);
    };

    [
      odl,
      uuid(9149345E-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007e770),
      dual,
      nonextensible,
      oleautomation
    ]
    interface PrintRanges : Collection {
        [id(0x000007d1), helpcontext(0x0007e771)]
        HRESULT Add(
                        [in] int Start, 
                        [in] int End, 
                        [out, retval] PrintRange** Add);
        [id(0x000007d2), propget, helpcontext(0x0007e772)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d3), helpcontext(0x0007e773)]
        HRESULT ClearAll();
        [id(00000000), helpcontext(0x0007e774)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] PrintRange** Item);
        [id(0x000007d4), propget, helpcontext(0x0007e775)]
        HRESULT Parent([out, retval] IDispatch** Parent);
    };

    [
      odl,
      uuid(9149345F-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007eb58),
      dual,
      nonextensible,
      oleautomation
    ]
    interface PrintRange : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0007eb59)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0007eb5a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0007eb5b)]
        HRESULT Start([out, retval] int* Start);
        [id(0x000007d4), propget, helpcontext(0x0007eb5c)]
        HRESULT End([out, retval] int* End);
        [id(0x000007d5), helpcontext(0x0007eb5d)]
        HRESULT Delete();
    };

    [
      odl,
      uuid(91493460-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007ef40),
      dual,
      nonextensible,
      oleautomation
    ]
    interface AddIns : Collection {
        [id(0x000007d1), propget, helpcontext(0x0007ef41)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0007ef42)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x0007ef43)]
        HRESULT Item(
                        [in] VARIANT* index, 
                        [out, retval] AddIn** Item);
        [id(0x000007d3), helpcontext(0x0007ef44)]
        HRESULT Add(
                        [in] BSTR FileName, 
                        [out, retval] AddIn** Add);
        [id(0x000007d4), helpcontext(0x0007ef45)]
        HRESULT Remove([in] VARIANT* index);
    };

    [
      odl,
      uuid(91493461-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007f328),
      dual,
      nonextensible,
      oleautomation
    ]
    interface AddIn : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0007f329)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0007f32a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0007f32b)]
        HRESULT FullName([out, retval] BSTR* FullName);
        [id(0x000007d4), propget, helpcontext(0x0007f32c)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x000007d5), propget, helpcontext(0x0007f32d)]
        HRESULT Path([out, retval] BSTR* Path);
        [id(0x000007d6), propget, helpcontext(0x0007f32e)]
        HRESULT Registered([out, retval] MsoTriState* Registered);
        [id(0x000007d6), propput, helpcontext(0x0007f32e)]
        HRESULT Registered([in] MsoTriState Registered);
        [id(0x000007d7), propget, helpcontext(0x0007f32f)]
        HRESULT AutoLoad([out, retval] MsoTriState* AutoLoad);
        [id(0x000007d7), propput, helpcontext(0x0007f32f)]
        HRESULT AutoLoad([in] MsoTriState AutoLoad);
        [id(0x000007d8), propget, helpcontext(0x0007f330)]
        HRESULT Loaded([out, retval] MsoTriState* Loaded);
        [id(0x000007d8), propput, helpcontext(0x0007f330)]
        HRESULT Loaded([in] MsoTriState Loaded);
        [id(0x000007d9), propget, hidden, helpcontext(0x0007f331)]
        HRESULT DisplayAlerts([out, retval] MsoTriState* DisplayAlerts);
        [id(0x000007d9), propput, hidden, helpcontext(0x0007f331)]
        HRESULT DisplayAlerts([in] MsoTriState DisplayAlerts);
        [id(0x000007da), propget, hidden, helpcontext(0x0007f332)]
        HRESULT RegisteredInHKLM([out, retval] MsoTriState* RegisteredInHKLM);
    };

    [
      odl,
      uuid(91493462-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007f710),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Presentations : Collection {
        [id(0x000007d1), propget, helpcontext(0x0007f711)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0007f712)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x0007f713)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] Presentation** Item);
        [id(0x000007d3), helpcontext(0x0007f714)]
        HRESULT Add(
                        [in, optional, defaultvalue(-1)] MsoTriState WithWindow, 
                        [out, retval] Presentation** Add);
        [id(0x000007d4), helpcontext(0x0007f715)]
        HRESULT Open(
                        [in] BSTR FileName, 
                        [in, optional, defaultvalue(0)] MsoTriState ReadOnly, 
                        [in, optional, defaultvalue(0)] MsoTriState Untitled, 
                        [in, optional, defaultvalue(-1)] MsoTriState WithWindow, 
                        [out, retval] Presentation** Open);
    };

    [
      odl,
      uuid(91493463-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007faf8),
      hidden
    ]
    interface PresEvents : IUnknown {
    };

    [
      uuid(91493444-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0007fee0)
    ]
    coclass Presentation {
        [default] interface _Presentation;
        [default, source] interface PresEvents;
    };

    [
      odl,
      uuid(91493464-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000802c8),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Hyperlinks : Collection {
        [id(0x000007d1), propget, helpcontext(0x000802c9)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x000802ca)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x000802cb)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] Hyperlink** Item);
    };

    [
      odl,
      uuid(91493465-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000806b0),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Hyperlink : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000806b1)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x000806b2)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x000806b3)]
        HRESULT Type([out, retval] MsoHyperlinkType* Type);
        [id(0x000007d4), propget, helpcontext(0x000806b4)]
        HRESULT Address([out, retval] BSTR* Address);
        [id(0x000007d4), propput, helpcontext(0x000806b4)]
        HRESULT Address([in] BSTR Address);
        [id(0x000007d5), propget, helpcontext(0x000806b5)]
        HRESULT SubAddress([out, retval] BSTR* SubAddress);
        [id(0x000007d5), propput, helpcontext(0x000806b5)]
        HRESULT SubAddress([in] BSTR SubAddress);
        [id(0x000007d6), helpcontext(0x000806b6)]
        HRESULT AddToFavorites();
        [id(0x000007d7), propget, helpcontext(0x000806b7)]
        HRESULT EmailSubject([out, retval] BSTR* EmailSubject);
        [id(0x000007d7), propput, helpcontext(0x000806b7)]
        HRESULT EmailSubject([in] BSTR EmailSubject);
        [id(0x000007d8), propget, helpcontext(0x000806b8)]
        HRESULT ScreenTip([out, retval] BSTR* ScreenTip);
        [id(0x000007d8), propput, helpcontext(0x000806b8)]
        HRESULT ScreenTip([in] BSTR ScreenTip);
        [id(0x000007d9), propget, helpcontext(0x000806b9)]
        HRESULT TextToDisplay([out, retval] BSTR* TextToDisplay);
        [id(0x000007d9), propput, helpcontext(0x000806b9)]
        HRESULT TextToDisplay([in] BSTR TextToDisplay);
        [id(0x000007da), propget, helpcontext(0x000806ba)]
        HRESULT ShowandReturn([out, retval] MsoTriState* ShowandReturn);
        [id(0x000007da), propput, helpcontext(0x000806ba)]
        HRESULT ShowandReturn([in] MsoTriState ShowandReturn);
        [id(0x000007db), helpcontext(0x000806bb)]
        HRESULT Follow();
        [id(0x000007dc), helpcontext(0x000806bc)]
        HRESULT CreateNewDocument(
                        [in] BSTR FileName, 
                        [in] MsoTriState EditNow, 
                        [in] MsoTriState Overwrite);
        [id(0x000007dd), helpcontext(0x000806bd)]
        HRESULT Delete();
    };

    [
      odl,
      uuid(91493466-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00080a98),
      dual,
      nonextensible,
      oleautomation
    ]
    interface PageSetup : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x00080a99)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00080a9a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x00080a9b)]
        HRESULT FirstSlideNumber([out, retval] int* FirstSlideNumber);
        [id(0x000007d3), propput, helpcontext(0x00080a9b)]
        HRESULT FirstSlideNumber([in] int FirstSlideNumber);
        [id(0x000007d4), propget, helpcontext(0x00080a9c)]
        HRESULT SlideHeight([out, retval] single* SlideHeight);
        [id(0x000007d4), propput, helpcontext(0x00080a9c)]
        HRESULT SlideHeight([in] single SlideHeight);
        [id(0x000007d5), propget, helpcontext(0x00080a9d)]
        HRESULT SlideWidth([out, retval] single* SlideWidth);
        [id(0x000007d5), propput, helpcontext(0x00080a9d)]
        HRESULT SlideWidth([in] single SlideWidth);
        [id(0x000007d6), propget, helpcontext(0x00080a9e)]
        HRESULT SlideSize([out, retval] PpSlideSizeType* SlideSize);
        [id(0x000007d6), propput, helpcontext(0x00080a9e)]
        HRESULT SlideSize([in] PpSlideSizeType SlideSize);
        [id(0x000007d7), propget, helpcontext(0x00080a9f)]
        HRESULT NotesOrientation([out, retval] MsoOrientation* NotesOrientation);
        [id(0x000007d7), propput, helpcontext(0x00080a9f)]
        HRESULT NotesOrientation([in] MsoOrientation NotesOrientation);
        [id(0x000007d8), propget, helpcontext(0x00080aa0)]
        HRESULT SlideOrientation([out, retval] MsoOrientation* SlideOrientation);
        [id(0x000007d8), propput, helpcontext(0x00080aa0)]
        HRESULT SlideOrientation([in] MsoOrientation SlideOrientation);
    };

    [
      odl,
      uuid(91493467-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00080e80),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Fonts : Collection {
        [id(0x000007d1), propget, helpcontext(0x00080e81)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00080e82)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x00080e83)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] Font** Item);
        [id(0x000007d3), helpcontext(0x00080e84)]
        HRESULT Replace(
                        [in] BSTR Original, 
                        [in] BSTR Replacement);
    };

    [
      odl,
      uuid(91493468-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00081268),
      dual,
      nonextensible,
      oleautomation
    ]
    interface ExtraColors : Collection {
        [id(0x000007d1), propget, helpcontext(0x00081269)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008126a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x0008126b)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] MsoRGBType* Item);
        [id(0x000007d3), helpcontext(0x0008126c)]
        HRESULT Add([in] MsoRGBType Type);
    };

    [
      odl,
      uuid(91493469-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00081650),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Slides : Collection {
        [id(0x000007d1), propget, helpcontext(0x00081651)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00081652)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x00081653)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] Slide** Item);
        [id(0x000007d3), helpcontext(0x00081654)]
        HRESULT FindBySlideID(
                        [in] long SlideID, 
                        [out, retval] Slide** FindBySlideID);
        [id(0x000007d4), helpcontext(0x00081655)]
        HRESULT Add(
                        [in] int index, 
                        [in] PpSlideLayout Layout, 
                        [out, retval] Slide** Add);
        [id(0x000007d5), helpcontext(0x00081656)]
        HRESULT InsertFromFile(
                        [in] BSTR FileName, 
                        [in] int index, 
                        [in, optional, defaultvalue(1)] int SlideStart, 
                        [in, optional, defaultvalue(-1)] int SlideEnd, 
                        [out, retval] int* FromFile);
        [id(0x000007d6), helpcontext(0x00081657)]
        HRESULT Range(
                        [in, optional] VARIANT index, 
                        [out, retval] SlideRange** Range);
        [id(0x000007d7), helpcontext(0x00081658)]
        HRESULT Paste(
                        [in, optional, defaultvalue(-1)] int index, 
                        [out, retval] SlideRange** Paste);
    };

    [
      odl,
      uuid(9149346A-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00081a38),
      dual,
      nonextensible,
      oleautomation
    ]
    interface _Slide : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x00081a39)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00081a3a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x00081a3b)]
        HRESULT Shapes([out, retval] Shapes** Shapes);
        [id(0x000007d4), propget, helpcontext(0x00081a3c)]
        HRESULT HeadersFooters([out, retval] HeadersFooters** HeadersFooters);
        [id(0x000007d5), propget, helpcontext(0x00081a3d)]
        HRESULT SlideShowTransition([out, retval] SlideShowTransition** SlideShowTransition);
        [id(0x000007d6), propget, helpcontext(0x00081a3e)]
        HRESULT ColorScheme([out, retval] ColorScheme** ColorScheme);
        [id(0x000007d6), propput, helpcontext(0x00081a3e)]
        HRESULT ColorScheme([in] ColorScheme* ColorScheme);
        [id(0x000007d7), propget, helpcontext(0x00081a3f)]
        HRESULT Background([out, retval] ShapeRange** Background);
        [id(0x000007d8), propget, helpcontext(0x00081a40)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x000007d8), propput, helpcontext(0x00081a40)]
        HRESULT Name([in] BSTR Name);
        [id(0x000007d9), propget, helpcontext(0x00081a41)]
        HRESULT SlideID([out, retval] long* SlideID);
        [id(0x000007da), propget, helpcontext(0x00081a42)]
        HRESULT PrintSteps([out, retval] int* PrintSteps);
        [id(0x000007db), helpcontext(0x00081a43)]
        HRESULT Select();
        [id(0x000007dc), helpcontext(0x00081a44)]
        HRESULT Cut();
        [id(0x000007dd), helpcontext(0x00081a45)]
        HRESULT Copy();
        [id(0x000007de), propget, helpcontext(0x00081a46)]
        HRESULT Layout([out, retval] PpSlideLayout* Layout);
        [id(0x000007de), propput, helpcontext(0x00081a46)]
        HRESULT Layout([in] PpSlideLayout Layout);
        [id(0x000007df), helpcontext(0x00081a47)]
        HRESULT Duplicate([out, retval] SlideRange** Duplicate);
        [id(0x000007e0), helpcontext(0x00081a48)]
        HRESULT Delete();
        [id(0x000007e1), propget, helpcontext(0x00081a49)]
        HRESULT Tags([out, retval] Tags** Tags);
        [id(0x000007e2), propget, helpcontext(0x00081a4a)]
        HRESULT SlideIndex([out, retval] int* SlideIndex);
        [id(0x000007e3), propget, helpcontext(0x00081a4b)]
        HRESULT SlideNumber([out, retval] int* SlideNumber);
        [id(0x000007e4), propget, helpcontext(0x00081a4c)]
        HRESULT DisplayMasterShapes([out, retval] MsoTriState* DisplayMasterShapes);
        [id(0x000007e4), propput, helpcontext(0x00081a4c)]
        HRESULT DisplayMasterShapes([in] MsoTriState DisplayMasterShapes);
        [id(0x000007e5), propget, helpcontext(0x00081a4d)]
        HRESULT FollowMasterBackground([out, retval] MsoTriState* FollowMasterBackground);
        [id(0x000007e5), propput, helpcontext(0x00081a4d)]
        HRESULT FollowMasterBackground([in] MsoTriState FollowMasterBackground);
        [id(0x000007e6), propget, helpcontext(0x00081a4e)]
        HRESULT NotesPage([out, retval] SlideRange** NotesPage);
        [id(0x000007e7), propget, helpcontext(0x00081a4f)]
        HRESULT Master([out, retval] _Master** Master);
        [id(0x000007e8), propget, helpcontext(0x00081a50)]
        HRESULT Hyperlinks([out, retval] Hyperlinks** Hyperlinks);
        [id(0x000007e9), helpcontext(0x00081a51)]
        HRESULT Export(
                        [in] BSTR FileName, 
                        [in] BSTR FilterName, 
                        [in, optional, defaultvalue(0)] int ScaleWidth, 
                        [in, optional, defaultvalue(0)] int ScaleHeight);
        [id(0x000007ea), propget, helpcontext(0x00081a52)]
        HRESULT Scripts([out, retval] Scripts** Scripts);
    };

    [
      odl,
      uuid(9149346B-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00081e20),
      dual,
      nonextensible,
      oleautomation
    ]
    interface SlideRange : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x00081e21)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00081e22)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x00081e23)]
        HRESULT Shapes([out, retval] Shapes** Shapes);
        [id(0x000007d4), propget, helpcontext(0x00081e24)]
        HRESULT HeadersFooters([out, retval] HeadersFooters** HeadersFooters);
        [id(0x000007d5), propget, helpcontext(0x00081e25)]
        HRESULT SlideShowTransition([out, retval] SlideShowTransition** SlideShowTransition);
        [id(0x000007d6), propget, helpcontext(0x00081e26)]
        HRESULT ColorScheme([out, retval] ColorScheme** ColorScheme);
        [id(0x000007d6), propput, helpcontext(0x00081e26)]
        HRESULT ColorScheme([in] ColorScheme* ColorScheme);
        [id(0x000007d7), propget, helpcontext(0x00081e27)]
        HRESULT Background([out, retval] ShapeRange** Background);
        [id(0x000007d8), propget, helpcontext(0x00081e28)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x000007d8), propput, helpcontext(0x00081e28)]
        HRESULT Name([in] BSTR Name);
        [id(0x000007d9), propget, helpcontext(0x00081e29)]
        HRESULT SlideID([out, retval] long* SlideID);
        [id(0x000007da), propget, helpcontext(0x00081e2a)]
        HRESULT PrintSteps([out, retval] int* PrintSteps);
        [id(0x000007db), helpcontext(0x00081e2b)]
        HRESULT Select();
        [id(0x000007dc), helpcontext(0x00081e2c)]
        HRESULT Cut();
        [id(0x000007dd), helpcontext(0x00081e2d)]
        HRESULT Copy();
        [id(0x000007de), propget, helpcontext(0x00081e2e)]
        HRESULT Layout([out, retval] PpSlideLayout* Layout);
        [id(0x000007de), propput, helpcontext(0x00081e2e)]
        HRESULT Layout([in] PpSlideLayout Layout);
        [id(0x000007df), helpcontext(0x00081e2f)]
        HRESULT Duplicate([out, retval] SlideRange** Duplicate);
        [id(0x000007e0), helpcontext(0x00081e30)]
        HRESULT Delete();
        [id(0x000007e1), propget, helpcontext(0x00081e31)]
        HRESULT Tags([out, retval] Tags** Tags);
        [id(0x000007e2), propget, helpcontext(0x00081e32)]
        HRESULT SlideIndex([out, retval] int* SlideIndex);
        [id(0x000007e3), propget, helpcontext(0x00081e33)]
        HRESULT SlideNumber([out, retval] int* SlideNumber);
        [id(0x000007e4), propget, helpcontext(0x00081e34)]
        HRESULT DisplayMasterShapes([out, retval] MsoTriState* DisplayMasterShapes);
        [id(0x000007e4), propput, helpcontext(0x00081e34)]
        HRESULT DisplayMasterShapes([in] MsoTriState DisplayMasterShapes);
        [id(0x000007e5), propget, helpcontext(0x00081e35)]
        HRESULT FollowMasterBackground([out, retval] MsoTriState* FollowMasterBackground);
        [id(0x000007e5), propput, helpcontext(0x00081e35)]
        HRESULT FollowMasterBackground([in] MsoTriState FollowMasterBackground);
        [id(0x000007e6), propget, helpcontext(0x00081e36)]
        HRESULT NotesPage([out, retval] SlideRange** NotesPage);
        [id(0x000007e7), propget, helpcontext(0x00081e37)]
        HRESULT Master([out, retval] _Master** Master);
        [id(0x000007e8), propget, helpcontext(0x00081e38)]
        HRESULT Hyperlinks([out, retval] Hyperlinks** Hyperlinks);
        [id(0x000007e9), helpcontext(0x00081e39)]
        HRESULT Export(
                        [in] BSTR FileName, 
                        [in] BSTR FilterName, 
                        [in, optional, defaultvalue(0)] int ScaleWidth, 
                        [in, optional, defaultvalue(0)] int ScaleHeight);
        [id(00000000), helpcontext(0x00081e3a)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] Slide** Item);
        [id(0xfffffffc), propget, restricted, helpcontext(0x00081e3b)]
        HRESULT _NewEnum([out, retval] IUnknown** _NewEnum);
        [id(0x0000000a), restricted, helpcontext(0x00081e3c)]
        HRESULT _Index(
                        [in] int index, 
                        [out, retval] VARIANT* _Index);
        [id(0x0000000b), propget, helpcontext(0x00081e3d)]
        HRESULT Count([out, retval] long* Count);
        [id(0x000007ea), propget, helpcontext(0x00081e3e)]
        HRESULT Scripts([out, retval] Scripts** Scripts);
    };

    [
      odl,
      uuid(9149346C-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00082208),
      dual,
      nonextensible,
      oleautomation
    ]
    interface _Master : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x00082209)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008220a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0008220b)]
        HRESULT Shapes([out, retval] Shapes** Shapes);
        [id(0x000007d4), propget, helpcontext(0x0008220c)]
        HRESULT HeadersFooters([out, retval] HeadersFooters** HeadersFooters);
        [id(0x000007d5), propget, helpcontext(0x0008220d)]
        HRESULT ColorScheme([out, retval] ColorScheme** ColorScheme);
        [id(0x000007d5), propput, helpcontext(0x0008220d)]
        HRESULT ColorScheme([in] ColorScheme* ColorScheme);
        [id(0x000007d6), propget, helpcontext(0x0008220e)]
        HRESULT Background([out, retval] ShapeRange** Background);
        [id(0x000007d7), propget, helpcontext(0x0008220f)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x000007d7), propput, helpcontext(0x0008220f)]
        HRESULT Name([in] BSTR Name);
        [id(0x000007d8), helpcontext(0x00082210)]
        HRESULT Delete();
        [id(0x000007d9), propget, helpcontext(0x00082211)]
        HRESULT Height([out, retval] single* Height);
        [id(0x000007da), propget, helpcontext(0x00082212)]
        HRESULT Width([out, retval] single* Width);
        [id(0x000007db), propget, helpcontext(0x00082213)]
        HRESULT TextStyles([out, retval] TextStyles** TextStyles);
        [id(0x000007dc), propget, helpcontext(0x00082214)]
        HRESULT Hyperlinks([out, retval] Hyperlinks** Hyperlinks);
        [id(0x000007dd), propget, helpcontext(0x00082215)]
        HRESULT Scripts([out, retval] Scripts** Scripts);
    };

    [
      odl,
      uuid(9149346D-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000825f0),
      hidden
    ]
    interface SldEvents : IUnknown {
    };

    [
      uuid(91493445-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000829d8)
    ]
    coclass Slide {
        [default] interface _Slide;
        [default, source] interface SldEvents;
    };

    [
      odl,
      uuid(9149346E-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00082dc0),
      dual,
      nonextensible,
      oleautomation
    ]
    interface ColorSchemes : Collection {
        [id(0x000007d1), propget, helpcontext(0x00082dc1)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00082dc2)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x00082dc3)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] ColorScheme** Item);
        [id(0x000007d3), helpcontext(0x00082dc4)]
        HRESULT Add(
                        [in, optional, defaultvalue(0)] ColorScheme* Scheme, 
                        [out, retval] ColorScheme** Add);
    };

    [
      odl,
      uuid(9149346F-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000831a8),
      dual,
      nonextensible,
      oleautomation
    ]
    interface ColorScheme : Collection {
        [id(0x000007d1), propget, helpcontext(0x000831a9)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x000831aa)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x000831ab)]
        HRESULT Colors(
                        [in] PpColorSchemeIndex SchemeColor, 
                        [out, retval] RGBColor** Colors);
        [id(0x000007d3), helpcontext(0x000831ac)]
        HRESULT Delete();
    };

    [
      odl,
      uuid(91493470-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00083590),
      dual,
      nonextensible,
      oleautomation
    ]
    interface RGBColor : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x00083591)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00083592)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), propget, helpcontext(0x00083593)]
        HRESULT RGB([out, retval] MsoRGBType* RGB);
        [id(00000000), propput, helpcontext(0x00083593)]
        HRESULT RGB([in] MsoRGBType RGB);
    };

    [
      odl,
      uuid(91493471-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00083978),
      dual,
      nonextensible,
      oleautomation
    ]
    interface SlideShowTransition : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x00083979)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008397a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0008397b)]
        HRESULT AdvanceOnClick([out, retval] MsoTriState* AdvanceOnClick);
        [id(0x000007d3), propput, helpcontext(0x0008397b)]
        HRESULT AdvanceOnClick([in] MsoTriState AdvanceOnClick);
        [id(0x000007d4), propget, helpcontext(0x0008397c)]
        HRESULT AdvanceOnTime([out, retval] MsoTriState* AdvanceOnTime);
        [id(0x000007d4), propput, helpcontext(0x0008397c)]
        HRESULT AdvanceOnTime([in] MsoTriState AdvanceOnTime);
        [id(0x000007d5), propget, helpcontext(0x0008397d)]
        HRESULT AdvanceTime([out, retval] single* AdvanceTime);
        [id(0x000007d5), propput, helpcontext(0x0008397d)]
        HRESULT AdvanceTime([in] single AdvanceTime);
        [id(0x000007d6), propget, helpcontext(0x0008397e)]
        HRESULT EntryEffect([out, retval] PpEntryEffect* EntryEffect);
        [id(0x000007d6), propput, helpcontext(0x0008397e)]
        HRESULT EntryEffect([in] PpEntryEffect EntryEffect);
        [id(0x000007d7), propget, helpcontext(0x0008397f)]
        HRESULT Hidden([out, retval] MsoTriState* Hidden);
        [id(0x000007d7), propput, helpcontext(0x0008397f)]
        HRESULT Hidden([in] MsoTriState Hidden);
        [id(0x000007d8), propget, helpcontext(0x00083980)]
        HRESULT LoopSoundUntilNext([out, retval] MsoTriState* LoopSoundUntilNext);
        [id(0x000007d8), propput, helpcontext(0x00083980)]
        HRESULT LoopSoundUntilNext([in] MsoTriState LoopSoundUntilNext);
        [id(0x000007d9), propget, helpcontext(0x00083981)]
        HRESULT SoundEffect([out, retval] SoundEffect** SoundEffect);
        [id(0x000007da), propget, helpcontext(0x00083982)]
        HRESULT Speed([out, retval] PpTransitionSpeed* Speed);
        [id(0x000007da), propput, helpcontext(0x00083982)]
        HRESULT Speed([in] PpTransitionSpeed Speed);
    };

    [
      odl,
      uuid(91493472-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00083d60),
      dual,
      nonextensible,
      oleautomation
    ]
    interface SoundEffect : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x00083d61)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00083d62)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x00083d63)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x000007d3), propput, helpcontext(0x00083d63)]
        HRESULT Name([in] BSTR Name);
        [id(0x000007d4), propget, helpcontext(0x00083d64)]
        HRESULT Type([out, retval] PpSoundEffectType* Type);
        [id(0x000007d4), propput, helpcontext(0x00083d64)]
        HRESULT Type([in] PpSoundEffectType Type);
        [id(0x000007d5), helpcontext(0x00083d65)]
        HRESULT ImportFromFile([in] BSTR FileName);
        [id(0x000007d6), helpcontext(0x00083d66)]
        HRESULT Play();
    };

    [
      odl,
      uuid(91493473-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00084148),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface SoundFormat : IDispatch {
        [id(0x000007d0), helpcontext(0x00084148)]
        HRESULT Play();
        [id(0x000007d1), helpcontext(0x00084149)]
        HRESULT Import([in] BSTR FileName);
        [id(0x000007d2), helpcontext(0x0008414a)]
        HRESULT Export(
                        [in] BSTR FileName, 
                        [out, retval] PpSoundFormatType* Export);
        [id(0x000007d3), propget, helpcontext(0x0008414b)]
        HRESULT Type([out, retval] PpSoundFormatType* Type);
        [id(0x000007d4), propget, helpcontext(0x0008414c)]
        HRESULT SourceFullName([out, retval] BSTR* SourceFullName);
    };

    [
      odl,
      uuid(91493474-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00084530),
      dual,
      nonextensible,
      oleautomation
    ]
    interface HeadersFooters : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x00084531)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00084532)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x00084533)]
        HRESULT DateAndTime([out, retval] HeaderFooter** DateAndTime);
        [id(0x000007d4), propget, helpcontext(0x00084534)]
        HRESULT SlideNumber([out, retval] HeaderFooter** SlideNumber);
        [id(0x000007d5), propget, helpcontext(0x00084535)]
        HRESULT Header([out, retval] HeaderFooter** Header);
        [id(0x000007d6), propget, helpcontext(0x00084536)]
        HRESULT Footer([out, retval] HeaderFooter** Footer);
        [id(0x000007d7), propget, helpcontext(0x00084537)]
        HRESULT DisplayOnTitleSlide([out, retval] MsoTriState* DisplayOnTitleSlide);
        [id(0x000007d7), propput, helpcontext(0x00084537)]
        HRESULT DisplayOnTitleSlide([in] MsoTriState DisplayOnTitleSlide);
        [id(0x000007d8), helpcontext(0x00084538)]
        HRESULT Clear();
    };

    [
      odl,
      uuid(91493475-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00084918),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Shapes : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x00084919)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000002), propget, helpcontext(0x0008491a)]
        HRESULT Count([out, retval] int* Count);
        [id(00000000), helpcontext(0x0008491b)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] Shape** Item);
        [id(0xfffffffc), propget, helpcontext(0x0008491c)]
        HRESULT _NewEnum([out, retval] IUnknown** _NewEnum);
        [id(0x0000000a), helpcontext(0x0008491d)]
        HRESULT AddCallout(
                        [in] MsoCalloutType Type, 
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] Shape** Callout);
        [id(0x0000000b), helpcontext(0x0008491e)]
        HRESULT AddConnector(
                        [in] MsoConnectorType Type, 
                        [in] single BeginX, 
                        [in] single BeginY, 
                        [in] single EndX, 
                        [in] single EndY, 
                        [out, retval] Shape** Connector);
        [id(0x0000000c), helpcontext(0x0008491f)]
        HRESULT AddCurve(
                        [in] VARIANT SafeArrayOfPoints, 
                        [out, retval] Shape** Curve);
        [id(0x0000000d), helpcontext(0x00084920)]
        HRESULT AddLabel(
                        [in] MsoTextOrientation Orientation, 
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] Shape** Label);
        [id(0x0000000e), helpcontext(0x00084921)]
        HRESULT AddLine(
                        [in] single BeginX, 
                        [in] single BeginY, 
                        [in] single EndX, 
                        [in] single EndY, 
                        [out, retval] Shape** Line);
        [id(0x0000000f), helpcontext(0x00084922)]
        HRESULT AddPicture(
                        [in] BSTR FileName, 
                        [in] MsoTriState LinkToFile, 
                        [in] MsoTriState SaveWithDocument, 
                        [in] single Left, 
                        [in] single Top, 
                        [in, optional, defaultvalue(-1)] single Width, 
                        [in, optional, defaultvalue(-1)] single Height, 
                        [out, retval] Shape** Picture);
        [id(0x00000010), helpcontext(0x00084923)]
        HRESULT AddPolyline(
                        [in] VARIANT SafeArrayOfPoints, 
                        [out, retval] Shape** Polyline);
        [id(0x00000011), helpcontext(0x00084924)]
        HRESULT AddShape(
                        [in] MsoAutoShapeType Type, 
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] Shape** Shape);
        [id(0x00000012), helpcontext(0x00084925)]
        HRESULT AddTextEffect(
                        [in] MsoPresetTextEffect PresetTextEffect, 
                        [in] BSTR Text, 
                        [in] BSTR FontName, 
                        [in] single FontSize, 
                        [in] MsoTriState FontBold, 
                        [in] MsoTriState FontItalic, 
                        [in] single Left, 
                        [in] single Top, 
                        [out, retval] Shape** TextEffect);
        [id(0x00000013), helpcontext(0x00084926)]
        HRESULT AddTextbox(
                        [in] MsoTextOrientation Orientation, 
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] Shape** Textbox);
        [id(0x00000014), helpcontext(0x00084927)]
        HRESULT BuildFreeform(
                        [in] MsoEditingType EditingType, 
                        [in] single X1, 
                        [in] single Y1, 
                        [out, retval] FreeformBuilder** FreeformBuilder);
        [id(0x00000016), helpcontext(0x00084928)]
        HRESULT SelectAll();
        [id(0x000007d3), helpcontext(0x00084929)]
        HRESULT Range(
                        [in, optional] VARIANT index, 
                        [out, retval] ShapeRange** Range);
        [id(0x000007d4), propget, helpcontext(0x0008492a)]
        HRESULT HasTitle([out, retval] MsoTriState* HasTitle);
        [id(0x000007d5), helpcontext(0x0008492b)]
        HRESULT AddTitle([out, retval] Shape** Title);
        [id(0x000007d6), propget, helpcontext(0x0008492c)]
        HRESULT Title([out, retval] Shape** Title);
        [id(0x000007d7), propget, helpcontext(0x0008492d)]
        HRESULT Placeholders([out, retval] Placeholders** Placeholders);
        [id(0x000007d8), helpcontext(0x0008492e)]
        HRESULT AddOLEObject(
                        [in, optional, defaultvalue(0)] single Left, 
                        [in, optional, defaultvalue(0)] single Top, 
                        [in, optional, defaultvalue(-1)] single Width, 
                        [in, optional, defaultvalue(-1)] single Height, 
                        [in, optional, defaultvalue("")] BSTR ClassName, 
                        [in, optional, defaultvalue("")] BSTR FileName, 
                        [in, optional, defaultvalue(0)] MsoTriState DisplayAsIcon, 
                        [in, optional, defaultvalue("")] BSTR IconFileName, 
                        [in, optional, defaultvalue(0)] int IconIndex, 
                        [in, optional, defaultvalue("")] BSTR IconLabel, 
                        [in, optional, defaultvalue(0)] MsoTriState Link, 
                        [out, retval] Shape** OLEObject);
        [id(0x000007d9), helpcontext(0x0008492f)]
        HRESULT AddComment(
                        [in, optional, defaultvalue(1.25)] single Left, 
                        [in, optional, defaultvalue(1.25)] single Top, 
                        [in, optional, defaultvalue(145.25)] single Width, 
                        [in, optional, defaultvalue(145.25)] single Height, 
                        [out, retval] Shape** Comment);
        [id(0x000007da), helpcontext(0x00084930)]
        HRESULT AddPlaceholder(
                        [in] PpPlaceholderType Type, 
                        [in, optional, defaultvalue(-1)] single Left, 
                        [in, optional, defaultvalue(-1)] single Top, 
                        [in, optional, defaultvalue(-1)] single Width, 
                        [in, optional, defaultvalue(-1)] single Height, 
                        [out, retval] Shape** Placeholder);
        [id(0x000007db), helpcontext(0x00084931)]
        HRESULT AddMediaObject(
                        [in] BSTR FileName, 
                        [in, optional, defaultvalue(0)] single Left, 
                        [in, optional, defaultvalue(0)] single Top, 
                        [in, optional, defaultvalue(-1)] single Width, 
                        [in, optional, defaultvalue(-1)] single Height, 
                        [out, retval] Shape** MediaObject);
        [id(0x000007dc), helpcontext(0x00084932)]
        HRESULT Paste([out, retval] ShapeRange** Paste);
        [id(0x000007dd), helpcontext(0x00084933)]
        HRESULT AddTable(
                        [in] int NumRows, 
                        [in] int NumColumns, 
                        [in, optional, defaultvalue(-1)] single Left, 
                        [in, optional, defaultvalue(-1)] single Top, 
                        [in, optional, defaultvalue(-1)] single Width, 
                        [in, optional, defaultvalue(-1)] single Height, 
                        [out, retval] Shape** Table);
    };

    [
      odl,
      uuid(91493476-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00084d00),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Placeholders : Collection {
        [id(0x000007d1), propget, helpcontext(0x00084d01)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00084d02)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x00084d03)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] Shape** Item);
    };

    [
      odl,
      uuid(91493477-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000850e8),
      dual,
      nonextensible,
      oleautomation
    ]
    interface PlaceholderFormat : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000850e9)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x000850ea)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x000850eb)]
        HRESULT Type([out, retval] PpPlaceholderType* Type);
    };

    [
      odl,
      uuid(91493478-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000854d0),
      dual,
      nonextensible,
      oleautomation
    ]
    interface FreeformBuilder : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x000854d1)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000000a), helpcontext(0x000854d2)]
        HRESULT AddNodes(
                        [in] MsoSegmentType SegmentType, 
                        [in] MsoEditingType EditingType, 
                        [in] single X1, 
                        [in] single Y1, 
                        [in, optional, defaultvalue(0)] single X2, 
                        [in, optional, defaultvalue(0)] single Y2, 
                        [in, optional, defaultvalue(0)] single X3, 
                        [in, optional, defaultvalue(0)] single Y3);
        [id(0x0000000b), helpcontext(0x000854d3)]
        HRESULT ConvertToShape([out, retval] Shape** Freeform);
    };

    [
      odl,
      uuid(91493479-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000858b8),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Shape : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x000858b9)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000000a), helpcontext(0x000858ba)]
        HRESULT Apply();
        [id(0x0000000b), helpcontext(0x000858bb)]
        HRESULT Delete();
        [id(0x0000000d), helpcontext(0x000858bc)]
        HRESULT Flip([in] MsoFlipCmd FlipCmd);
        [id(0x0000000e), helpcontext(0x000858bd)]
        HRESULT IncrementLeft([in] single Increment);
        [id(0x0000000f), helpcontext(0x000858be)]
        HRESULT IncrementRotation([in] single Increment);
        [id(0x00000010), helpcontext(0x000858bf)]
        HRESULT IncrementTop([in] single Increment);
        [id(0x00000011), helpcontext(0x000858c0)]
        HRESULT PickUp();
        [id(0x00000012), helpcontext(0x000858c1)]
        HRESULT RerouteConnections();
        [id(0x00000013), helpcontext(0x000858c2)]
        HRESULT ScaleHeight(
                        [in] single Factor, 
                        [in] MsoTriState RelativeToOriginalSize, 
                        [in, optional, defaultvalue(0)] MsoScaleFrom fScale);
        [id(0x00000014), helpcontext(0x000858c3)]
        HRESULT ScaleWidth(
                        [in] single Factor, 
                        [in] MsoTriState RelativeToOriginalSize, 
                        [in, optional, defaultvalue(0)] MsoScaleFrom fScale);
        [id(0x00000016), helpcontext(0x000858c4)]
        HRESULT SetShapesDefaultProperties();
        [id(0x00000017), helpcontext(0x000858c5)]
        HRESULT Ungroup([out, retval] ShapeRange** Ungroup);
        [id(0x00000018), helpcontext(0x000858c6)]
        HRESULT ZOrder([in] MsoZOrderCmd ZOrderCmd);
        [id(0x00000064), propget, helpcontext(0x000858c7)]
        HRESULT Adjustments([out, retval] Adjustments** Adjustments);
        [id(0x00000065), propget, helpcontext(0x000858c8)]
        HRESULT AutoShapeType([out, retval] MsoAutoShapeType* AutoShapeType);
        [id(0x00000065), propput, helpcontext(0x000858c8)]
        HRESULT AutoShapeType([in] MsoAutoShapeType AutoShapeType);
        [id(0x00000066), propget, helpcontext(0x000858c9)]
        HRESULT BlackWhiteMode([out, retval] MsoBlackWhiteMode* BlackWhiteMode);
        [id(0x00000066), propput, helpcontext(0x000858c9)]
        HRESULT BlackWhiteMode([in] MsoBlackWhiteMode BlackWhiteMode);
        [id(0x00000067), propget, helpcontext(0x000858ca)]
        HRESULT Callout([out, retval] CalloutFormat** Callout);
        [id(0x00000068), propget, helpcontext(0x000858cb)]
        HRESULT ConnectionSiteCount([out, retval] int* ConnectionSiteCount);
        [id(0x00000069), propget, helpcontext(0x000858cc)]
        HRESULT Connector([out, retval] MsoTriState* Connector);
        [id(0x0000006a), propget, helpcontext(0x000858cd)]
        HRESULT ConnectorFormat([out, retval] ConnectorFormat** ConnectorFormat);
        [id(0x0000006b), propget, helpcontext(0x000858ce)]
        HRESULT Fill([out, retval] FillFormat** Fill);
        [id(0x0000006c), propget, helpcontext(0x000858cf)]
        HRESULT GroupItems([out, retval] GroupShapes** GroupItems);
        [id(0x0000006d), propget, helpcontext(0x000858d0)]
        HRESULT Height([out, retval] single* Height);
        [id(0x0000006d), propput, helpcontext(0x000858d0)]
        HRESULT Height([in] single Height);
        [id(0x0000006e), propget, helpcontext(0x000858d1)]
        HRESULT HorizontalFlip([out, retval] MsoTriState* HorizontalFlip);
        [id(0x0000006f), propget, helpcontext(0x000858d2)]
        HRESULT Left([out, retval] single* Left);
        [id(0x0000006f), propput, helpcontext(0x000858d2)]
        HRESULT Left([in] single Left);
        [id(0x00000070), propget, helpcontext(0x000858d3)]
        HRESULT Line([out, retval] LineFormat** Line);
        [id(0x00000071), propget, helpcontext(0x000858d4)]
        HRESULT LockAspectRatio([out, retval] MsoTriState* LockAspectRatio);
        [id(0x00000071), propput, helpcontext(0x000858d4)]
        HRESULT LockAspectRatio([in] MsoTriState LockAspectRatio);
        [id(0x00000073), propget, helpcontext(0x000858d5)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x00000073), propput, helpcontext(0x000858d5)]
        HRESULT Name([in] BSTR Name);
        [id(0x00000074), propget, helpcontext(0x000858d6)]
        HRESULT Nodes([out, retval] ShapeNodes** Nodes);
        [id(0x00000075), propget, helpcontext(0x000858d7)]
        HRESULT Rotation([out, retval] single* Rotation);
        [id(0x00000075), propput, helpcontext(0x000858d7)]
        HRESULT Rotation([in] single Rotation);
        [id(0x00000076), propget, helpcontext(0x000858d8)]
        HRESULT PictureFormat([out, retval] PictureFormat** Picture);
        [id(0x00000077), propget, helpcontext(0x000858d9)]
        HRESULT Shadow([out, retval] ShadowFormat** Shadow);
        [id(0x00000078), propget, helpcontext(0x000858da)]
        HRESULT TextEffect([out, retval] TextEffectFormat** TextEffect);
        [id(0x00000079), propget, helpcontext(0x000858db)]
        HRESULT TextFrame([out, retval] TextFrame** TextFrame);
        [id(0x0000007a), propget, helpcontext(0x000858dc)]
        HRESULT ThreeD([out, retval] ThreeDFormat** ThreeD);
        [id(0x0000007b), propget, helpcontext(0x000858dd)]
        HRESULT Top([out, retval] single* Top);
        [id(0x0000007b), propput, helpcontext(0x000858dd)]
        HRESULT Top([in] single Top);
        [id(0x0000007c), propget, helpcontext(0x000858de)]
        HRESULT Type([out, retval] MsoShapeType* Type);
        [id(0x0000007d), propget, helpcontext(0x000858df)]
        HRESULT VerticalFlip([out, retval] MsoTriState* VerticalFlip);
        [id(0x0000007e), propget, helpcontext(0x000858e0)]
        HRESULT Vertices([out, retval] VARIANT* Vertices);
        [id(0x0000007f), propget, helpcontext(0x000858e1)]
        HRESULT Visible([out, retval] MsoTriState* Visible);
        [id(0x0000007f), propput, helpcontext(0x000858e1)]
        HRESULT Visible([in] MsoTriState Visible);
        [id(0x00000080), propget, helpcontext(0x000858e2)]
        HRESULT Width([out, retval] single* Width);
        [id(0x00000080), propput, helpcontext(0x000858e2)]
        HRESULT Width([in] single Width);
        [id(0x00000081), propget, helpcontext(0x000858e3)]
        HRESULT ZOrderPosition([out, retval] int* ZOrderPosition);
        [id(0x000007d3), propget, helpcontext(0x000858e4)]
        HRESULT OLEFormat([out, retval] OLEFormat** OLEFormat);
        [id(0x000007d4), propget, helpcontext(0x000858e5)]
        HRESULT LinkFormat([out, retval] LinkFormat** LinkFormat);
        [id(0x000007d5), propget, helpcontext(0x000858e6)]
        HRESULT PlaceholderFormat([out, retval] PlaceholderFormat** PlaceholderFormat);
        [id(0x000007d6), propget, helpcontext(0x000858e7)]
        HRESULT AnimationSettings([out, retval] AnimationSettings** AnimationSettings);
        [id(0x000007d7), propget, helpcontext(0x000858e8)]
        HRESULT ActionSettings([out, retval] ActionSettings** ActionSettings);
        [id(0x000007d8), propget, helpcontext(0x000858e9)]
        HRESULT Tags([out, retval] Tags** Tags);
        [id(0x000007d9), helpcontext(0x000858ea)]
        HRESULT Cut();
        [id(0x000007da), helpcontext(0x000858eb)]
        HRESULT Copy();
        [id(0x000007db), helpcontext(0x000858ec)]
        HRESULT Select([in, optional, defaultvalue(-1)] MsoTriState Replace);
        [id(0x000007dc), helpcontext(0x000858ed)]
        HRESULT Duplicate([out, retval] ShapeRange** Duplicate);
        [id(0x000007dd), propget, helpcontext(0x000858ee)]
        HRESULT MediaType([out, retval] PpMediaType* MediaType);
        [id(0x000007de), propget, helpcontext(0x000858ef)]
        HRESULT HasTextFrame([out, retval] MsoTriState* HasTextFrame);
        [id(0x000007df), propget, hidden, helpcontext(0x000858f0)]
        HRESULT SoundFormat([out, retval] SoundFormat** SoundFormat);
        [id(0x00000082), propget, helpcontext(0x000858f1)]
        HRESULT Script([out, retval] Script** Script);
        [id(0x00000083), propget, helpcontext(0x000858f2)]
        HRESULT AlternativeText([out, retval] BSTR* AlternativeText);
        [id(0x00000083), propput, helpcontext(0x000858f2)]
        HRESULT AlternativeText([in] BSTR AlternativeText);
        [id(0x000007e0), propget, helpcontext(0x000858f3)]
        HRESULT HasTable([out, retval] MsoTriState* HasTable);
        [id(0x000007e1), propget, helpcontext(0x000858f4)]
        HRESULT Table([out, retval] Table** Table);
        [id(0x000007e2), hidden, helpcontext(0x000858f5)]
        HRESULT Export(
                        [in] BSTR PathName, 
                        [in] PpShapeFormat Filter, 
                        [in, optional, defaultvalue(0)] int ScaleWidth, 
                        [in, optional, defaultvalue(0)] int ScaleHeight, 
                        [in, optional, defaultvalue(1)] PpExportMode ExportMode);
    };

    [
      odl,
      uuid(9149347A-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00085ca0),
      dual,
      nonextensible,
      oleautomation
    ]
    interface ShapeRange : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x00085ca1)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000000a), helpcontext(0x00085ca2)]
        HRESULT Apply();
        [id(0x0000000b), helpcontext(0x00085ca3)]
        HRESULT Delete();
        [id(0x0000000d), helpcontext(0x00085ca4)]
        HRESULT Flip([in] MsoFlipCmd FlipCmd);
        [id(0x0000000e), helpcontext(0x00085ca5)]
        HRESULT IncrementLeft([in] single Increment);
        [id(0x0000000f), helpcontext(0x00085ca6)]
        HRESULT IncrementRotation([in] single Increment);
        [id(0x00000010), helpcontext(0x00085ca7)]
        HRESULT IncrementTop([in] single Increment);
        [id(0x00000011), helpcontext(0x00085ca8)]
        HRESULT PickUp();
        [id(0x00000012), helpcontext(0x00085ca9)]
        HRESULT RerouteConnections();
        [id(0x00000013), helpcontext(0x00085caa)]
        HRESULT ScaleHeight(
                        [in] single Factor, 
                        [in] MsoTriState RelativeToOriginalSize, 
                        [in, optional, defaultvalue(0)] MsoScaleFrom fScale);
        [id(0x00000014), helpcontext(0x00085cab)]
        HRESULT ScaleWidth(
                        [in] single Factor, 
                        [in] MsoTriState RelativeToOriginalSize, 
                        [in, optional, defaultvalue(0)] MsoScaleFrom fScale);
        [id(0x00000016), helpcontext(0x00085cac)]
        HRESULT SetShapesDefaultProperties();
        [id(0x00000017), helpcontext(0x00085cad)]
        HRESULT Ungroup([out, retval] ShapeRange** Ungroup);
        [id(0x00000018), helpcontext(0x00085cae)]
        HRESULT ZOrder([in] MsoZOrderCmd ZOrderCmd);
        [id(0x00000064), propget, helpcontext(0x00085caf)]
        HRESULT Adjustments([out, retval] Adjustments** Adjustments);
        [id(0x00000065), propget, helpcontext(0x00085cb0)]
        HRESULT AutoShapeType([out, retval] MsoAutoShapeType* AutoShapeType);
        [id(0x00000065), propput, helpcontext(0x00085cb0)]
        HRESULT AutoShapeType([in] MsoAutoShapeType AutoShapeType);
        [id(0x00000066), propget, helpcontext(0x00085cb1)]
        HRESULT BlackWhiteMode([out, retval] MsoBlackWhiteMode* BlackWhiteMode);
        [id(0x00000066), propput, helpcontext(0x00085cb1)]
        HRESULT BlackWhiteMode([in] MsoBlackWhiteMode BlackWhiteMode);
        [id(0x00000067), propget, helpcontext(0x00085cb2)]
        HRESULT Callout([out, retval] CalloutFormat** Callout);
        [id(0x00000068), propget, helpcontext(0x00085cb3)]
        HRESULT ConnectionSiteCount([out, retval] int* ConnectionSiteCount);
        [id(0x00000069), propget, helpcontext(0x00085cb4)]
        HRESULT Connector([out, retval] MsoTriState* Connector);
        [id(0x0000006a), propget, helpcontext(0x00085cb5)]
        HRESULT ConnectorFormat([out, retval] ConnectorFormat** ConnectorFormat);
        [id(0x0000006b), propget, helpcontext(0x00085cb6)]
        HRESULT Fill([out, retval] FillFormat** Fill);
        [id(0x0000006c), propget, helpcontext(0x00085cb7)]
        HRESULT GroupItems([out, retval] GroupShapes** GroupItems);
        [id(0x0000006d), propget, helpcontext(0x00085cb8)]
        HRESULT Height([out, retval] single* Height);
        [id(0x0000006d), propput, helpcontext(0x00085cb8)]
        HRESULT Height([in] single Height);
        [id(0x0000006e), propget, helpcontext(0x00085cb9)]
        HRESULT HorizontalFlip([out, retval] MsoTriState* HorizontalFlip);
        [id(0x0000006f), propget, helpcontext(0x00085cba)]
        HRESULT Left([out, retval] single* Left);
        [id(0x0000006f), propput, helpcontext(0x00085cba)]
        HRESULT Left([in] single Left);
        [id(0x00000070), propget, helpcontext(0x00085cbb)]
        HRESULT Line([out, retval] LineFormat** Line);
        [id(0x00000071), propget, helpcontext(0x00085cbc)]
        HRESULT LockAspectRatio([out, retval] MsoTriState* LockAspectRatio);
        [id(0x00000071), propput, helpcontext(0x00085cbc)]
        HRESULT LockAspectRatio([in] MsoTriState LockAspectRatio);
        [id(0x00000073), propget, helpcontext(0x00085cbd)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x00000073), propput, helpcontext(0x00085cbd)]
        HRESULT Name([in] BSTR Name);
        [id(0x00000074), propget, helpcontext(0x00085cbe)]
        HRESULT Nodes([out, retval] ShapeNodes** Nodes);
        [id(0x00000075), propget, helpcontext(0x00085cbf)]
        HRESULT Rotation([out, retval] single* Rotation);
        [id(0x00000075), propput, helpcontext(0x00085cbf)]
        HRESULT Rotation([in] single Rotation);
        [id(0x00000076), propget, helpcontext(0x00085cc0)]
        HRESULT PictureFormat([out, retval] PictureFormat** Picture);
        [id(0x00000077), propget, helpcontext(0x00085cc1)]
        HRESULT Shadow([out, retval] ShadowFormat** Shadow);
        [id(0x00000078), propget, helpcontext(0x00085cc2)]
        HRESULT TextEffect([out, retval] TextEffectFormat** TextEffect);
        [id(0x00000079), propget, helpcontext(0x00085cc3)]
        HRESULT TextFrame([out, retval] TextFrame** TextFrame);
        [id(0x0000007a), propget, helpcontext(0x00085cc4)]
        HRESULT ThreeD([out, retval] ThreeDFormat** ThreeD);
        [id(0x0000007b), propget, helpcontext(0x00085cc5)]
        HRESULT Top([out, retval] single* Top);
        [id(0x0000007b), propput, helpcontext(0x00085cc5)]
        HRESULT Top([in] single Top);
        [id(0x0000007c), propget, helpcontext(0x00085cc6)]
        HRESULT Type([out, retval] MsoShapeType* Type);
        [id(0x0000007d), propget, helpcontext(0x00085cc7)]
        HRESULT VerticalFlip([out, retval] MsoTriState* VerticalFlip);
        [id(0x0000007e), propget, helpcontext(0x00085cc8)]
        HRESULT Vertices([out, retval] VARIANT* Vertices);
        [id(0x0000007f), propget, helpcontext(0x00085cc9)]
        HRESULT Visible([out, retval] MsoTriState* Visible);
        [id(0x0000007f), propput, helpcontext(0x00085cc9)]
        HRESULT Visible([in] MsoTriState Visible);
        [id(0x00000080), propget, helpcontext(0x00085cca)]
        HRESULT Width([out, retval] single* Width);
        [id(0x00000080), propput, helpcontext(0x00085cca)]
        HRESULT Width([in] single Width);
        [id(0x00000081), propget, helpcontext(0x00085ccb)]
        HRESULT ZOrderPosition([out, retval] int* ZOrderPosition);
        [id(0x000007d3), propget, helpcontext(0x00085ccc)]
        HRESULT OLEFormat([out, retval] OLEFormat** OLEFormat);
        [id(0x000007d4), propget, helpcontext(0x00085ccd)]
        HRESULT LinkFormat([out, retval] LinkFormat** LinkFormat);
        [id(0x000007d5), propget, helpcontext(0x00085cce)]
        HRESULT PlaceholderFormat([out, retval] PlaceholderFormat** PlaceholderFormat);
        [id(0x000007d6), propget, helpcontext(0x00085ccf)]
        HRESULT AnimationSettings([out, retval] AnimationSettings** AnimationSettings);
        [id(0x000007d7), propget, helpcontext(0x00085cd0)]
        HRESULT ActionSettings([out, retval] ActionSettings** ActionSettings);
        [id(0x000007d8), propget, helpcontext(0x00085cd1)]
        HRESULT Tags([out, retval] Tags** Tags);
        [id(0x000007d9), helpcontext(0x00085cd2)]
        HRESULT Cut();
        [id(0x000007da), helpcontext(0x00085cd3)]
        HRESULT Copy();
        [id(0x000007db), helpcontext(0x00085cd4)]
        HRESULT Select([in, optional, defaultvalue(-1)] MsoTriState Replace);
        [id(0x000007dc), helpcontext(0x00085cd5)]
        HRESULT Duplicate([out, retval] ShapeRange** Duplicate);
        [id(0x000007dd), propget, helpcontext(0x00085cd6)]
        HRESULT MediaType([out, retval] PpMediaType* MediaType);
        [id(0x000007de), propget, helpcontext(0x00085cd7)]
        HRESULT HasTextFrame([out, retval] MsoTriState* HasTextFrame);
        [id(0x000007df), propget, hidden, helpcontext(0x00085cd8)]
        HRESULT SoundFormat([out, retval] SoundFormat** SoundFormat);
        [id(00000000), helpcontext(0x00085cd9)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] Shape** Item);
        [id(0xfffffffc), propget, restricted, helpcontext(0x00085cda)]
        HRESULT _NewEnum([out, retval] IUnknown** _NewEnum);
        [id(0x00000008), restricted, helpcontext(0x00085cdb)]
        HRESULT _Index(
                        [in] int index, 
                        [out, retval] VARIANT* _Index);
        [id(0x00000009), propget, helpcontext(0x00085cdc)]
        HRESULT Count([out, retval] long* Count);
        [id(0x000007e0), helpcontext(0x00085cdd)]
        HRESULT Group([out, retval] Shape** Group);
        [id(0x000007e1), helpcontext(0x00085cde)]
        HRESULT Regroup([out, retval] Shape** Regroup);
        [id(0x000007e2), helpcontext(0x00085cdf)]
        HRESULT Align(
                        [in] MsoAlignCmd AlignCmd, 
                        [in] MsoTriState RelativeTo);
        [id(0x000007e3), helpcontext(0x00085ce0)]
        HRESULT Distribute(
                        [in] MsoDistributeCmd DistributeCmd, 
                        [in] MsoTriState RelativeTo);
        [id(0x000007e4), restricted, helpcontext(0x00085ce1)]
        HRESULT GetPolygonalRepresentation(
                        [in] unsigned long maxPointsInBuffer, 
                        [in] single* pPoints, 
                        [out] unsigned long* numPointsInPolygon, 
                        [out] MsoTriState* IsOpen);
        [id(0x00000082), propget, helpcontext(0x00085ce2)]
        HRESULT Script([out, retval] Script** Script);
        [id(0x00000083), propget, helpcontext(0x00085ce3)]
        HRESULT AlternativeText([out, retval] BSTR* AlternativeText);
        [id(0x00000083), propput, helpcontext(0x00085ce3)]
        HRESULT AlternativeText([in] BSTR AlternativeText);
        [id(0x000007e5), propget, helpcontext(0x00085ce4)]
        HRESULT HasTable([out, retval] MsoTriState* HasTable);
        [id(0x000007e6), propget, helpcontext(0x00085ce5)]
        HRESULT Table([out, retval] Table** Table);
        [id(0x000007e7), hidden, helpcontext(0x00085ce6)]
        HRESULT Export(
                        [in] BSTR PathName, 
                        [in] PpShapeFormat Filter, 
                        [in, optional, defaultvalue(0)] int ScaleWidth, 
                        [in, optional, defaultvalue(0)] int ScaleHeight, 
                        [in, optional, defaultvalue(1)] PpExportMode ExportMode);
    };

    [
      odl,
      uuid(9149347B-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00086088),
      dual,
      nonextensible,
      oleautomation
    ]
    interface GroupShapes : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x00086089)]
        HRESULT Parent([out, retval] IDispatch** ppidisp);
        [id(0x00000002), propget, helpcontext(0x0008608a)]
        HRESULT Count([out, retval] int* pnShapes);
        [id(00000000), helpcontext(0x0008608b)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] Shape** Item);
        [id(0xfffffffc), propget, helpcontext(0x0008608c)]
        HRESULT _NewEnum([out, retval] IUnknown** ppienum);
    };

    [
      odl,
      uuid(9149347C-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00086470),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Adjustments : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x00086471)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000002), propget, helpcontext(0x00086472)]
        HRESULT Count([out, retval] int* Count);
        [id(00000000), propget, helpcontext(0x00086473)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] single* Val);
        [id(00000000), propput, helpcontext(0x00086473)]
        HRESULT Item(
                        [in] int index, 
                        [in] single Val);
    };

    [
      odl,
      uuid(9149347D-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00086858),
      dual,
      nonextensible,
      oleautomation
    ]
    interface PictureFormat : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x00086859)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000000a), helpcontext(0x0008685a)]
        HRESULT IncrementBrightness([in] single Increment);
        [id(0x0000000b), helpcontext(0x0008685b)]
        HRESULT IncrementContrast([in] single Increment);
        [id(0x00000064), propget, helpcontext(0x0008685c)]
        HRESULT Brightness([out, retval] single* Brightness);
        [id(0x00000064), propput, helpcontext(0x0008685c)]
        HRESULT Brightness([in] single Brightness);
        [id(0x00000065), propget, helpcontext(0x0008685d)]
        HRESULT ColorType([out, retval] MsoPictureColorType* ColorType);
        [id(0x00000065), propput, helpcontext(0x0008685d)]
        HRESULT ColorType([in] MsoPictureColorType ColorType);
        [id(0x00000066), propget, helpcontext(0x0008685e)]
        HRESULT Contrast([out, retval] single* Contrast);
        [id(0x00000066), propput, helpcontext(0x0008685e)]
        HRESULT Contrast([in] single Contrast);
        [id(0x00000067), propget, helpcontext(0x0008685f)]
        HRESULT CropBottom([out, retval] single* CropBottom);
        [id(0x00000067), propput, helpcontext(0x0008685f)]
        HRESULT CropBottom([in] single CropBottom);
        [id(0x00000068), propget, helpcontext(0x00086860)]
        HRESULT CropLeft([out, retval] single* CropLeft);
        [id(0x00000068), propput, helpcontext(0x00086860)]
        HRESULT CropLeft([in] single CropLeft);
        [id(0x00000069), propget, helpcontext(0x00086861)]
        HRESULT CropRight([out, retval] single* CropRight);
        [id(0x00000069), propput, helpcontext(0x00086861)]
        HRESULT CropRight([in] single CropRight);
        [id(0x0000006a), propget, helpcontext(0x00086862)]
        HRESULT CropTop([out, retval] single* CropTop);
        [id(0x0000006a), propput, helpcontext(0x00086862)]
        HRESULT CropTop([in] single CropTop);
        [id(0x0000006b), propget, helpcontext(0x00086863)]
        HRESULT TransparencyColor([out, retval] MsoRGBType* TransparencyColor);
        [id(0x0000006b), propput, helpcontext(0x00086863)]
        HRESULT TransparencyColor([in] MsoRGBType TransparencyColor);
        [id(0x0000006c), propget, helpcontext(0x00086864)]
        HRESULT TransparentBackground([out, retval] MsoTriState* TransparentBackground);
        [id(0x0000006c), propput, helpcontext(0x00086864)]
        HRESULT TransparentBackground([in] MsoTriState TransparentBackground);
    };

    [
      odl,
      uuid(9149347E-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00086c40),
      dual,
      nonextensible,
      oleautomation
    ]
    interface FillFormat : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x00086c41)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000000a), helpcontext(0x00086c42)]
        HRESULT Background();
        [id(0x0000000b), helpcontext(0x00086c43)]
        HRESULT OneColorGradient(
                        [in] MsoGradientStyle Style, 
                        [in] int Variant, 
                        [in] single Degree);
        [id(0x0000000c), helpcontext(0x00086c44)]
        HRESULT Patterned([in] MsoPatternType Pattern);
        [id(0x0000000d), helpcontext(0x00086c45)]
        HRESULT PresetGradient(
                        [in] MsoGradientStyle Style, 
                        [in] int Variant, 
                        [in] MsoPresetGradientType PresetGradientType);
        [id(0x0000000e), helpcontext(0x00086c46)]
        HRESULT PresetTextured([in] MsoPresetTexture PresetTexture);
        [id(0x0000000f), helpcontext(0x00086c47)]
        HRESULT Solid();
        [id(0x00000010), helpcontext(0x00086c48)]
        HRESULT TwoColorGradient(
                        [in] MsoGradientStyle Style, 
                        [in] int Variant);
        [id(0x00000011), helpcontext(0x00086c49)]
        HRESULT UserPicture([in] BSTR PictureFile);
        [id(0x00000012), helpcontext(0x00086c4a)]
        HRESULT UserTextured([in] BSTR TextureFile);
        [id(0x00000064), propget, helpcontext(0x00086c4b)]
        HRESULT BackColor([out, retval] ColorFormat** BackColor);
        [id(0x00000064), propput, helpcontext(0x00086c4b)]
        HRESULT BackColor([in] ColorFormat* BackColor);
        [id(0x00000065), propget, helpcontext(0x00086c4c)]
        HRESULT ForeColor([out, retval] ColorFormat** ForeColor);
        [id(0x00000065), propput, helpcontext(0x00086c4c)]
        HRESULT ForeColor([in] ColorFormat* ForeColor);
        [id(0x00000066), propget, helpcontext(0x00086c4d)]
        HRESULT GradientColorType([out, retval] MsoGradientColorType* GradientColorType);
        [id(0x00000067), propget, helpcontext(0x00086c4e)]
        HRESULT GradientDegree([out, retval] single* GradientDegree);
        [id(0x00000068), propget, helpcontext(0x00086c4f)]
        HRESULT GradientStyle([out, retval] MsoGradientStyle* GradientStyle);
        [id(0x00000069), propget, helpcontext(0x00086c50)]
        HRESULT GradientVariant([out, retval] int* GradientVariant);
        [id(0x0000006a), propget, helpcontext(0x00086c51)]
        HRESULT Pattern([out, retval] MsoPatternType* Pattern);
        [id(0x0000006b), propget, helpcontext(0x00086c52)]
        HRESULT PresetGradientType([out, retval] MsoPresetGradientType* PresetGradientType);
        [id(0x0000006c), propget, helpcontext(0x00086c53)]
        HRESULT PresetTexture([out, retval] MsoPresetTexture* PresetTexture);
        [id(0x0000006d), propget, helpcontext(0x00086c54)]
        HRESULT TextureName([out, retval] BSTR* TextureName);
        [id(0x0000006e), propget, helpcontext(0x00086c55)]
        HRESULT TextureType([out, retval] MsoTextureType* TextureType);
        [id(0x0000006f), propget, helpcontext(0x00086c56)]
        HRESULT Transparency([out, retval] single* Transparency);
        [id(0x0000006f), propput, helpcontext(0x00086c56)]
        HRESULT Transparency([in] single Transparency);
        [id(0x00000070), propget, helpcontext(0x00086c57)]
        HRESULT Type([out, retval] MsoFillType* Type);
        [id(0x00000071), propget, helpcontext(0x00086c58)]
        HRESULT Visible([out, retval] MsoTriState* Visible);
        [id(0x00000071), propput, helpcontext(0x00086c58)]
        HRESULT Visible([in] MsoTriState Visible);
    };

    [
      odl,
      uuid(9149347F-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00087028),
      dual,
      nonextensible,
      oleautomation
    ]
    interface LineFormat : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x00087029)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000064), propget, helpcontext(0x0008702a)]
        HRESULT BackColor([out, retval] ColorFormat** BackColor);
        [id(0x00000064), propput, helpcontext(0x0008702a)]
        HRESULT BackColor([in] ColorFormat* BackColor);
        [id(0x00000065), propget, helpcontext(0x0008702b)]
        HRESULT BeginArrowheadLength([out, retval] MsoArrowheadLength* BeginArrowheadLength);
        [id(0x00000065), propput, helpcontext(0x0008702b)]
        HRESULT BeginArrowheadLength([in] MsoArrowheadLength BeginArrowheadLength);
        [id(0x00000066), propget, helpcontext(0x0008702c)]
        HRESULT BeginArrowheadStyle([out, retval] MsoArrowheadStyle* BeginArrowheadStyle);
        [id(0x00000066), propput, helpcontext(0x0008702c)]
        HRESULT BeginArrowheadStyle([in] MsoArrowheadStyle BeginArrowheadStyle);
        [id(0x00000067), propget, helpcontext(0x0008702d)]
        HRESULT BeginArrowheadWidth([out, retval] MsoArrowheadWidth* BeginArrowheadWidth);
        [id(0x00000067), propput, helpcontext(0x0008702d)]
        HRESULT BeginArrowheadWidth([in] MsoArrowheadWidth BeginArrowheadWidth);
        [id(0x00000068), propget, helpcontext(0x0008702e)]
        HRESULT DashStyle([out, retval] MsoLineDashStyle* DashStyle);
        [id(0x00000068), propput, helpcontext(0x0008702e)]
        HRESULT DashStyle([in] MsoLineDashStyle DashStyle);
        [id(0x00000069), propget, helpcontext(0x0008702f)]
        HRESULT EndArrowheadLength([out, retval] MsoArrowheadLength* EndArrowheadLength);
        [id(0x00000069), propput, helpcontext(0x0008702f)]
        HRESULT EndArrowheadLength([in] MsoArrowheadLength EndArrowheadLength);
        [id(0x0000006a), propget, helpcontext(0x00087030)]
        HRESULT EndArrowheadStyle([out, retval] MsoArrowheadStyle* EndArrowheadStyle);
        [id(0x0000006a), propput, helpcontext(0x00087030)]
        HRESULT EndArrowheadStyle([in] MsoArrowheadStyle EndArrowheadStyle);
        [id(0x0000006b), propget, helpcontext(0x00087031)]
        HRESULT EndArrowheadWidth([out, retval] MsoArrowheadWidth* EndArrowheadWidth);
        [id(0x0000006b), propput, helpcontext(0x00087031)]
        HRESULT EndArrowheadWidth([in] MsoArrowheadWidth EndArrowheadWidth);
        [id(0x0000006c), propget, helpcontext(0x00087032)]
        HRESULT ForeColor([out, retval] ColorFormat** ForeColor);
        [id(0x0000006c), propput, helpcontext(0x00087032)]
        HRESULT ForeColor([in] ColorFormat* ForeColor);
        [id(0x0000006d), propget, helpcontext(0x00087033)]
        HRESULT Pattern([out, retval] MsoPatternType* Pattern);
        [id(0x0000006d), propput, helpcontext(0x00087033)]
        HRESULT Pattern([in] MsoPatternType Pattern);
        [id(0x0000006e), propget, helpcontext(0x00087034)]
        HRESULT Style([out, retval] MsoLineStyle* Style);
        [id(0x0000006e), propput, helpcontext(0x00087034)]
        HRESULT Style([in] MsoLineStyle Style);
        [id(0x0000006f), propget, helpcontext(0x00087035)]
        HRESULT Transparency([out, retval] single* Transparency);
        [id(0x0000006f), propput, helpcontext(0x00087035)]
        HRESULT Transparency([in] single Transparency);
        [id(0x00000070), propget, helpcontext(0x00087036)]
        HRESULT Visible([out, retval] MsoTriState* Visible);
        [id(0x00000070), propput, helpcontext(0x00087036)]
        HRESULT Visible([in] MsoTriState Visible);
        [id(0x00000071), propget, helpcontext(0x00087037)]
        HRESULT Weight([out, retval] single* Weight);
        [id(0x00000071), propput, helpcontext(0x00087037)]
        HRESULT Weight([in] single Weight);
    };

    [
      odl,
      uuid(91493480-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00087410),
      dual,
      nonextensible,
      oleautomation
    ]
    interface ShadowFormat : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x00087411)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000000a), helpcontext(0x00087412)]
        HRESULT IncrementOffsetX([in] single Increment);
        [id(0x0000000b), helpcontext(0x00087413)]
        HRESULT IncrementOffsetY([in] single Increment);
        [id(0x00000064), propget, helpcontext(0x00087414)]
        HRESULT ForeColor([out, retval] ColorFormat** ForeColor);
        [id(0x00000064), propput, helpcontext(0x00087414)]
        HRESULT ForeColor([in] ColorFormat* ForeColor);
        [id(0x00000065), propget, helpcontext(0x00087415)]
        HRESULT Obscured([out, retval] MsoTriState* Obscured);
        [id(0x00000065), propput, helpcontext(0x00087415)]
        HRESULT Obscured([in] MsoTriState Obscured);
        [id(0x00000066), propget, helpcontext(0x00087416)]
        HRESULT OffsetX([out, retval] single* OffsetX);
        [id(0x00000066), propput, helpcontext(0x00087416)]
        HRESULT OffsetX([in] single OffsetX);
        [id(0x00000067), propget, helpcontext(0x00087417)]
        HRESULT OffsetY([out, retval] single* OffsetY);
        [id(0x00000067), propput, helpcontext(0x00087417)]
        HRESULT OffsetY([in] single OffsetY);
        [id(0x00000068), propget, helpcontext(0x00087418)]
        HRESULT Transparency([out, retval] single* Transparency);
        [id(0x00000068), propput, helpcontext(0x00087418)]
        HRESULT Transparency([in] single Transparency);
        [id(0x00000069), propget, helpcontext(0x00087419)]
        HRESULT Type([out, retval] MsoShadowType* Type);
        [id(0x00000069), propput, helpcontext(0x00087419)]
        HRESULT Type([in] MsoShadowType Type);
        [id(0x0000006a), propget, helpcontext(0x0008741a)]
        HRESULT Visible([out, retval] MsoTriState* Visible);
        [id(0x0000006a), propput, helpcontext(0x0008741a)]
        HRESULT Visible([in] MsoTriState Visible);
    };

    [
      odl,
      uuid(91493481-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000877f8),
      dual,
      nonextensible,
      oleautomation
    ]
    interface ConnectorFormat : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x000877f9)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000000a), helpcontext(0x000877fa)]
        HRESULT BeginConnect(
                        [in] Shape* ConnectedShape, 
                        [in] int ConnectionSite);
        [id(0x0000000b), helpcontext(0x000877fb)]
        HRESULT BeginDisconnect();
        [id(0x0000000c), helpcontext(0x000877fc)]
        HRESULT EndConnect(
                        [in] Shape* ConnectedShape, 
                        [in] int ConnectionSite);
        [id(0x0000000d), helpcontext(0x000877fd)]
        HRESULT EndDisconnect();
        [id(0x00000064), propget, helpcontext(0x000877fe)]
        HRESULT BeginConnected([out, retval] MsoTriState* BeginConnected);
        [id(0x00000065), propget, helpcontext(0x000877ff)]
        HRESULT BeginConnectedShape([out, retval] Shape** BeginConnectedShape);
        [id(0x00000066), propget, helpcontext(0x00087800)]
        HRESULT BeginConnectionSite([out, retval] int* BeginConnectionSite);
        [id(0x00000067), propget, helpcontext(0x00087801)]
        HRESULT EndConnected([out, retval] MsoTriState* EndConnected);
        [id(0x00000068), propget, helpcontext(0x00087802)]
        HRESULT EndConnectedShape([out, retval] Shape** EndConnectedShape);
        [id(0x00000069), propget, helpcontext(0x00087803)]
        HRESULT EndConnectionSite([out, retval] int* EndConnectionSite);
        [id(0x0000006a), propget, helpcontext(0x00087804)]
        HRESULT Type([out, retval] MsoConnectorType* Type);
        [id(0x0000006a), propput, helpcontext(0x00087804)]
        HRESULT Type([in] MsoConnectorType Type);
    };

    [
      odl,
      uuid(91493482-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00087be0),
      dual,
      nonextensible,
      oleautomation
    ]
    interface TextEffectFormat : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x00087be1)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000000a), helpcontext(0x00087be2)]
        HRESULT ToggleVerticalText();
        [id(0x00000064), propget, helpcontext(0x00087be3)]
        HRESULT Alignment([out, retval] MsoTextEffectAlignment* Alignment);
        [id(0x00000064), propput, helpcontext(0x00087be3)]
        HRESULT Alignment([in] MsoTextEffectAlignment Alignment);
        [id(0x00000065), propget, helpcontext(0x00087be4)]
        HRESULT FontBold([out, retval] MsoTriState* FontBold);
        [id(0x00000065), propput, helpcontext(0x00087be4)]
        HRESULT FontBold([in] MsoTriState FontBold);
        [id(0x00000066), propget, helpcontext(0x00087be5)]
        HRESULT FontItalic([out, retval] MsoTriState* FontItalic);
        [id(0x00000066), propput, helpcontext(0x00087be5)]
        HRESULT FontItalic([in] MsoTriState FontItalic);
        [id(0x00000067), propget, helpcontext(0x00087be6)]
        HRESULT FontName([out, retval] BSTR* FontName);
        [id(0x00000067), propput, helpcontext(0x00087be6)]
        HRESULT FontName([in] BSTR FontName);
        [id(0x00000068), propget, helpcontext(0x00087be7)]
        HRESULT FontSize([out, retval] single* FontSize);
        [id(0x00000068), propput, helpcontext(0x00087be7)]
        HRESULT FontSize([in] single FontSize);
        [id(0x00000069), propget, helpcontext(0x00087be8)]
        HRESULT KernedPairs([out, retval] MsoTriState* KernedPairs);
        [id(0x00000069), propput, helpcontext(0x00087be8)]
        HRESULT KernedPairs([in] MsoTriState KernedPairs);
        [id(0x0000006a), propget, helpcontext(0x00087be9)]
        HRESULT NormalizedHeight([out, retval] MsoTriState* NormalizedHeight);
        [id(0x0000006a), propput, helpcontext(0x00087be9)]
        HRESULT NormalizedHeight([in] MsoTriState NormalizedHeight);
        [id(0x0000006b), propget, helpcontext(0x00087bea)]
        HRESULT PresetShape([out, retval] MsoPresetTextEffectShape* PresetShape);
        [id(0x0000006b), propput, helpcontext(0x00087bea)]
        HRESULT PresetShape([in] MsoPresetTextEffectShape PresetShape);
        [id(0x0000006c), propget, helpcontext(0x00087beb)]
        HRESULT PresetTextEffect([out, retval] MsoPresetTextEffect* Preset);
        [id(0x0000006c), propput, helpcontext(0x00087beb)]
        HRESULT PresetTextEffect([in] MsoPresetTextEffect Preset);
        [id(0x0000006d), propget, helpcontext(0x00087bec)]
        HRESULT RotatedChars([out, retval] MsoTriState* RotatedChars);
        [id(0x0000006d), propput, helpcontext(0x00087bec)]
        HRESULT RotatedChars([in] MsoTriState RotatedChars);
        [id(0x0000006e), propget, helpcontext(0x00087bed)]
        HRESULT Text([out, retval] BSTR* Text);
        [id(0x0000006e), propput, helpcontext(0x00087bed)]
        HRESULT Text([in] BSTR Text);
        [id(0x0000006f), propget, helpcontext(0x00087bee)]
        HRESULT Tracking([out, retval] single* Tracking);
        [id(0x0000006f), propput, helpcontext(0x00087bee)]
        HRESULT Tracking([in] single Tracking);
    };

    [
      odl,
      uuid(91493483-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00087fc8),
      dual,
      nonextensible,
      oleautomation
    ]
    interface ThreeDFormat : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x00087fc9)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000000a), helpcontext(0x00087fca)]
        HRESULT IncrementRotationX([in] single Increment);
        [id(0x0000000b), helpcontext(0x00087fcb)]
        HRESULT IncrementRotationY([in] single Increment);
        [id(0x0000000c), helpcontext(0x00087fcc)]
        HRESULT ResetRotation();
        [id(0x0000000d), helpcontext(0x00087fcd)]
        HRESULT SetThreeDFormat([in] MsoPresetThreeDFormat PresetThreeDFormat);
        [id(0x0000000e), helpcontext(0x00087fce)]
        HRESULT SetExtrusionDirection([in] MsoPresetExtrusionDirection PresetExtrusionDirection);
        [id(0x00000064), propget, helpcontext(0x00087fcf)]
        HRESULT Depth([out, retval] single* Depth);
        [id(0x00000064), propput, helpcontext(0x00087fcf)]
        HRESULT Depth([in] single Depth);
        [id(0x00000065), propget, helpcontext(0x00087fd0)]
        HRESULT ExtrusionColor([out, retval] ColorFormat** ExtrusionColor);
        [id(0x00000066), propget, helpcontext(0x00087fd1)]
        HRESULT ExtrusionColorType([out, retval] MsoExtrusionColorType* ExtrusionColorType);
        [id(0x00000066), propput, helpcontext(0x00087fd1)]
        HRESULT ExtrusionColorType([in] MsoExtrusionColorType ExtrusionColorType);
        [id(0x00000067), propget, helpcontext(0x00087fd2)]
        HRESULT Perspective([out, retval] MsoTriState* Perspective);
        [id(0x00000067), propput, helpcontext(0x00087fd2)]
        HRESULT Perspective([in] MsoTriState Perspective);
        [id(0x00000068), propget, helpcontext(0x00087fd3)]
        HRESULT PresetExtrusionDirection([out, retval] MsoPresetExtrusionDirection* PresetExtrusionDirection);
        [id(0x00000069), propget, helpcontext(0x00087fd4)]
        HRESULT PresetLightingDirection([out, retval] MsoPresetLightingDirection* PresetLightingDirection);
        [id(0x00000069), propput, helpcontext(0x00087fd4)]
        HRESULT PresetLightingDirection([in] MsoPresetLightingDirection PresetLightingDirection);
        [id(0x0000006a), propget, helpcontext(0x00087fd5)]
        HRESULT PresetLightingSoftness([out, retval] MsoPresetLightingSoftness* PresetLightingSoftness);
        [id(0x0000006a), propput, helpcontext(0x00087fd5)]
        HRESULT PresetLightingSoftness([in] MsoPresetLightingSoftness PresetLightingSoftness);
        [id(0x0000006b), propget, helpcontext(0x00087fd6)]
        HRESULT PresetMaterial([out, retval] MsoPresetMaterial* PresetMaterial);
        [id(0x0000006b), propput, helpcontext(0x00087fd6)]
        HRESULT PresetMaterial([in] MsoPresetMaterial PresetMaterial);
        [id(0x0000006c), propget, helpcontext(0x00087fd7)]
        HRESULT PresetThreeDFormat([out, retval] MsoPresetThreeDFormat* PresetThreeDFormat);
        [id(0x0000006d), propget, helpcontext(0x00087fd8)]
        HRESULT RotationX([out, retval] single* RotationX);
        [id(0x0000006d), propput, helpcontext(0x00087fd8)]
        HRESULT RotationX([in] single RotationX);
        [id(0x0000006e), propget, helpcontext(0x00087fd9)]
        HRESULT RotationY([out, retval] single* RotationY);
        [id(0x0000006e), propput, helpcontext(0x00087fd9)]
        HRESULT RotationY([in] single RotationY);
        [id(0x0000006f), propget, helpcontext(0x00087fda)]
        HRESULT Visible([out, retval] MsoTriState* Visible);
        [id(0x0000006f), propput, helpcontext(0x00087fda)]
        HRESULT Visible([in] MsoTriState Visible);
    };

    [
      odl,
      uuid(91493484-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000883b0),
      dual,
      nonextensible,
      oleautomation
    ]
    interface TextFrame : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x000883b1)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000064), propget, helpcontext(0x000883b2)]
        HRESULT MarginBottom([out, retval] single* MarginBottom);
        [id(0x00000064), propput, helpcontext(0x000883b2)]
        HRESULT MarginBottom([in] single MarginBottom);
        [id(0x00000065), propget, helpcontext(0x000883b3)]
        HRESULT MarginLeft([out, retval] single* MarginLeft);
        [id(0x00000065), propput, helpcontext(0x000883b3)]
        HRESULT MarginLeft([in] single MarginLeft);
        [id(0x00000066), propget, helpcontext(0x000883b4)]
        HRESULT MarginRight([out, retval] single* MarginRight);
        [id(0x00000066), propput, helpcontext(0x000883b4)]
        HRESULT MarginRight([in] single MarginRight);
        [id(0x00000067), propget, helpcontext(0x000883b5)]
        HRESULT MarginTop([out, retval] single* MarginTop);
        [id(0x00000067), propput, helpcontext(0x000883b5)]
        HRESULT MarginTop([in] single MarginTop);
        [id(0x00000068), propget, helpcontext(0x000883b6)]
        HRESULT Orientation([out, retval] MsoTextOrientation* Orientation);
        [id(0x00000068), propput, helpcontext(0x000883b6)]
        HRESULT Orientation([in] MsoTextOrientation Orientation);
        [id(0x000007d3), propget, helpcontext(0x000883b7)]
        HRESULT HasText([out, retval] MsoTriState* HasText);
        [id(0x000007d4), propget, helpcontext(0x000883b8)]
        HRESULT TextRange([out, retval] TextRange** TextRange);
        [id(0x000007d5), propget, helpcontext(0x000883b9)]
        HRESULT Ruler([out, retval] Ruler** Ruler);
        [id(0x000007d6), propget, helpcontext(0x000883ba)]
        HRESULT HorizontalAnchor([out, retval] MsoHorizontalAnchor* HorizontalAnchor);
        [id(0x000007d6), propput, helpcontext(0x000883ba)]
        HRESULT HorizontalAnchor([in] MsoHorizontalAnchor HorizontalAnchor);
        [id(0x000007d7), propget, helpcontext(0x000883bb)]
        HRESULT VerticalAnchor([out, retval] MsoVerticalAnchor* VerticalAnchor);
        [id(0x000007d7), propput, helpcontext(0x000883bb)]
        HRESULT VerticalAnchor([in] MsoVerticalAnchor VerticalAnchor);
        [id(0x000007d8), propget, helpcontext(0x000883bc)]
        HRESULT AutoSize([out, retval] PpAutoSize* AutoSize);
        [id(0x000007d8), propput, helpcontext(0x000883bc)]
        HRESULT AutoSize([in] PpAutoSize AutoSize);
        [id(0x000007d9), propget, helpcontext(0x000883bd)]
        HRESULT WordWrap([out, retval] MsoTriState* WordWrap);
        [id(0x000007d9), propput, helpcontext(0x000883bd)]
        HRESULT WordWrap([in] MsoTriState WordWrap);
        [id(0x000007da), helpcontext(0x000883be)]
        HRESULT DeleteText();
    };

    [
      odl,
      uuid(91493485-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00088798),
      dual,
      nonextensible,
      oleautomation
    ]
    interface CalloutFormat : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x00088799)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x0000000a), helpcontext(0x0008879a)]
        HRESULT AutomaticLength();
        [id(0x0000000b), helpcontext(0x0008879b)]
        HRESULT CustomDrop([in] single Drop);
        [id(0x0000000c), helpcontext(0x0008879c)]
        HRESULT CustomLength([in] single Length);
        [id(0x0000000d), helpcontext(0x0008879d)]
        HRESULT PresetDrop([in] MsoCalloutDropType DropType);
        [id(0x00000064), propget, helpcontext(0x0008879e)]
        HRESULT Accent([out, retval] MsoTriState* Accent);
        [id(0x00000064), propput, helpcontext(0x0008879e)]
        HRESULT Accent([in] MsoTriState Accent);
        [id(0x00000065), propget, helpcontext(0x0008879f)]
        HRESULT Angle([out, retval] MsoCalloutAngleType* Angle);
        [id(0x00000065), propput, helpcontext(0x0008879f)]
        HRESULT Angle([in] MsoCalloutAngleType Angle);
        [id(0x00000066), propget, helpcontext(0x000887a0)]
        HRESULT AutoAttach([out, retval] MsoTriState* AutoAttach);
        [id(0x00000066), propput, helpcontext(0x000887a0)]
        HRESULT AutoAttach([in] MsoTriState AutoAttach);
        [id(0x00000067), propget, helpcontext(0x000887a1)]
        HRESULT AutoLength([out, retval] MsoTriState* AutoLength);
        [id(0x00000068), propget, helpcontext(0x000887a2)]
        HRESULT Border([out, retval] MsoTriState* Border);
        [id(0x00000068), propput, helpcontext(0x000887a2)]
        HRESULT Border([in] MsoTriState Border);
        [id(0x00000069), propget, helpcontext(0x000887a3)]
        HRESULT Drop([out, retval] single* Drop);
        [id(0x0000006a), propget, helpcontext(0x000887a4)]
        HRESULT DropType([out, retval] MsoCalloutDropType* DropType);
        [id(0x0000006b), propget, helpcontext(0x000887a5)]
        HRESULT Gap([out, retval] single* Gap);
        [id(0x0000006b), propput, helpcontext(0x000887a5)]
        HRESULT Gap([in] single Gap);
        [id(0x0000006c), propget, helpcontext(0x000887a6)]
        HRESULT Length([out, retval] single* Length);
        [id(0x0000006d), propget, helpcontext(0x000887a7)]
        HRESULT Type([out, retval] MsoCalloutType* Type);
        [id(0x0000006d), propput, helpcontext(0x000887a7)]
        HRESULT Type([in] MsoCalloutType Type);
    };

    [
      odl,
      uuid(91493486-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00088b80),
      dual,
      nonextensible,
      oleautomation
    ]
    interface ShapeNodes : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x00088b81)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000002), propget, helpcontext(0x00088b82)]
        HRESULT Count([out, retval] int* Count);
        [id(00000000), helpcontext(0x00088b83)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] ShapeNode** Item);
        [id(0xfffffffc), propget, helpcontext(0x00088b84)]
        HRESULT _NewEnum([out, retval] IUnknown** _NewEnum);
        [id(0x0000000b), helpcontext(0x00088b85)]
        HRESULT Delete([in] int index);
        [id(0x0000000c), helpcontext(0x00088b86)]
        HRESULT Insert(
                        [in] int index, 
                        [in] MsoSegmentType SegmentType, 
                        [in] MsoEditingType EditingType, 
                        [in] single X1, 
                        [in] single Y1, 
                        [in, optional, defaultvalue(0)] single X2, 
                        [in, optional, defaultvalue(0)] single Y2, 
                        [in, optional, defaultvalue(0)] single X3, 
                        [in, optional, defaultvalue(0)] single Y3);
        [id(0x0000000d), helpcontext(0x00088b87)]
        HRESULT SetEditingType(
                        [in] int index, 
                        [in] MsoEditingType EditingType);
        [id(0x0000000e), helpcontext(0x00088b88)]
        HRESULT SetPosition(
                        [in] int index, 
                        [in] single X1, 
                        [in] single Y1);
        [id(0x0000000f), helpcontext(0x00088b89)]
        HRESULT SetSegmentType(
                        [in] int index, 
                        [in] MsoSegmentType SegmentType);
    };

    [
      odl,
      uuid(91493487-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00088f68),
      dual,
      nonextensible,
      oleautomation
    ]
    interface ShapeNode : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x000003e9)]
        HRESULT Application([out, retval] IDispatch** ppidisp);
        [id(0x000007d2), propget, helpcontext(0x000003ea)]
        HRESULT Creator([out, retval] long* plCreator);
        [id(0x00000001), propget, helpcontext(0x00088f69)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x00000064), propget, helpcontext(0x00088f6a)]
        HRESULT EditingType([out, retval] MsoEditingType* EditingType);
        [id(0x00000065), propget, helpcontext(0x00088f6b)]
        HRESULT Points([out, retval] VARIANT* Points);
        [id(0x00000066), propget, helpcontext(0x00088f6c)]
        HRESULT SegmentType([out, retval] MsoSegmentType* SegmentType);
    };

    [
      odl,
      uuid(91493488-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00089350),
      dual,
      nonextensible,
      oleautomation
    ]
    interface OLEFormat : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x00089351)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00089352)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x00089353)]
        HRESULT ObjectVerbs([out, retval] ObjectVerbs** ObjectVerbs);
        [id(0x000007d4), propget, helpcontext(0x00089354)]
        HRESULT Object([out, retval] IDispatch** Object);
        [id(0x000007d5), propget, helpcontext(0x00089355)]
        HRESULT ProgID([out, retval] BSTR* ProgID);
        [id(0x000007d6), propget, helpcontext(0x00089356)]
        HRESULT FollowColors([out, retval] PpFollowColors* FollowColors);
        [id(0x000007d6), propput, helpcontext(0x00089356)]
        HRESULT FollowColors([in] PpFollowColors FollowColors);
        [id(0x000007d7), helpcontext(0x00089357)]
        HRESULT DoVerb([in, optional, defaultvalue(0)] int index);
        [id(0x000007d8), helpcontext(0x00089358)]
        HRESULT Activate();
    };

    [
      odl,
      uuid(91493489-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00089738),
      dual,
      nonextensible,
      oleautomation
    ]
    interface LinkFormat : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x00089739)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008973a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0008973b)]
        HRESULT SourceFullName([out, retval] BSTR* SourceFullName);
        [id(0x000007d3), propput, helpcontext(0x0008973b)]
        HRESULT SourceFullName([in] BSTR SourceFullName);
        [id(0x000007d4), propget, helpcontext(0x0008973c)]
        HRESULT AutoUpdate([out, retval] PpUpdateOption* AutoUpdate);
        [id(0x000007d4), propput, helpcontext(0x0008973c)]
        HRESULT AutoUpdate([in] PpUpdateOption AutoUpdate);
        [id(0x000007d5), helpcontext(0x0008973d)]
        HRESULT Update();
    };

    [
      odl,
      uuid(9149348A-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00089b20),
      dual,
      nonextensible,
      oleautomation
    ]
    interface ObjectVerbs : Collection {
        [id(0x000007d1), propget, helpcontext(0x00089b21)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00089b22)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x00089b23)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] BSTR* Item);
    };

    [
      odl,
      uuid(9149348B-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00089f08),
      dual,
      nonextensible,
      oleautomation
    ]
    interface AnimationSettings : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x00089f09)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00089f0a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x00089f0b)]
        HRESULT DimColor([out, retval] ColorFormat** DimColor);
        [id(0x000007d4), propget, helpcontext(0x00089f0c)]
        HRESULT SoundEffect([out, retval] SoundEffect** SoundEffect);
        [id(0x000007d5), propget, helpcontext(0x00089f0d)]
        HRESULT EntryEffect([out, retval] PpEntryEffect* EntryEffect);
        [id(0x000007d5), propput, helpcontext(0x00089f0d)]
        HRESULT EntryEffect([in] PpEntryEffect EntryEffect);
        [id(0x000007d6), propget, helpcontext(0x00089f0e)]
        HRESULT AfterEffect([out, retval] PpAfterEffect* AfterEffect);
        [id(0x000007d6), propput, helpcontext(0x00089f0e)]
        HRESULT AfterEffect([in] PpAfterEffect AfterEffect);
        [id(0x000007d7), propget, helpcontext(0x00089f0f)]
        HRESULT AnimationOrder([out, retval] int* AnimationOrder);
        [id(0x000007d7), propput, helpcontext(0x00089f0f)]
        HRESULT AnimationOrder([in] int AnimationOrder);
        [id(0x000007d8), propget, helpcontext(0x00089f10)]
        HRESULT AdvanceMode([out, retval] PpAdvanceMode* AdvanceMode);
        [id(0x000007d8), propput, helpcontext(0x00089f10)]
        HRESULT AdvanceMode([in] PpAdvanceMode AdvanceMode);
        [id(0x000007d9), propget, helpcontext(0x00089f11)]
        HRESULT AdvanceTime([out, retval] single* AdvanceTime);
        [id(0x000007d9), propput, helpcontext(0x00089f11)]
        HRESULT AdvanceTime([in] single AdvanceTime);
        [id(0x000007da), propget, helpcontext(0x00089f12)]
        HRESULT PlaySettings([out, retval] PlaySettings** PlaySettings);
        [id(0x000007db), propget, helpcontext(0x00089f13)]
        HRESULT TextLevelEffect([out, retval] PpTextLevelEffect* TextLevelEffect);
        [id(0x000007db), propput, helpcontext(0x00089f13)]
        HRESULT TextLevelEffect([in] PpTextLevelEffect TextLevelEffect);
        [id(0x000007dc), propget, helpcontext(0x00089f14)]
        HRESULT TextUnitEffect([out, retval] PpTextUnitEffect* TextUnitEffect);
        [id(0x000007dc), propput, helpcontext(0x00089f14)]
        HRESULT TextUnitEffect([in] PpTextUnitEffect TextUnitEffect);
        [id(0x000007dd), propget, helpcontext(0x00089f15)]
        HRESULT Animate([out, retval] MsoTriState* Animate);
        [id(0x000007dd), propput, helpcontext(0x00089f15)]
        HRESULT Animate([in] MsoTriState Animate);
        [id(0x000007de), propget, helpcontext(0x00089f16)]
        HRESULT AnimateBackground([out, retval] MsoTriState* AnimateBackground);
        [id(0x000007de), propput, helpcontext(0x00089f16)]
        HRESULT AnimateBackground([in] MsoTriState AnimateBackground);
        [id(0x000007df), propget, helpcontext(0x00089f17)]
        HRESULT AnimateTextInReverse([out, retval] MsoTriState* AnimateTextInReverse);
        [id(0x000007df), propput, helpcontext(0x00089f17)]
        HRESULT AnimateTextInReverse([in] MsoTriState AnimateTextInReverse);
        [id(0x000007e0), propget, helpcontext(0x00089f18)]
        HRESULT ChartUnitEffect([out, retval] PpChartUnitEffect* ChartUnitEffect);
        [id(0x000007e0), propput, helpcontext(0x00089f18)]
        HRESULT ChartUnitEffect([in] PpChartUnitEffect ChartUnitEffect);
    };

    [
      odl,
      uuid(9149348C-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008a2f0),
      dual,
      nonextensible,
      oleautomation
    ]
    interface ActionSettings : Collection {
        [id(0x000007d1), propget, helpcontext(0x0008a2f1)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008a2f2)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x0008a2f3)]
        HRESULT Item(
                        [in] PpMouseActivation index, 
                        [out, retval] ActionSetting** Item);
    };

    [
      odl,
      uuid(9149348D-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008a6d8),
      dual,
      nonextensible,
      oleautomation
    ]
    interface ActionSetting : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0008a6d9)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008a6da)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0008a6db)]
        HRESULT Action([out, retval] PpActionType* Action);
        [id(0x000007d3), propput, helpcontext(0x0008a6db)]
        HRESULT Action([in] PpActionType Action);
        [id(0x000007d4), propget, helpcontext(0x0008a6dc)]
        HRESULT ActionVerb([out, retval] BSTR* ActionVerb);
        [id(0x000007d4), propput, helpcontext(0x0008a6dc)]
        HRESULT ActionVerb([in] BSTR ActionVerb);
        [id(0x000007d5), propget, helpcontext(0x0008a6dd)]
        HRESULT AnimateAction([out, retval] MsoTriState* AnimateAction);
        [id(0x000007d5), propput, helpcontext(0x0008a6dd)]
        HRESULT AnimateAction([in] MsoTriState AnimateAction);
        [id(0x000007d6), propget, helpcontext(0x0008a6de)]
        HRESULT Run([out, retval] BSTR* Run);
        [id(0x000007d6), propput, helpcontext(0x0008a6de)]
        HRESULT Run([in] BSTR Run);
        [id(0x000007d7), propget, helpcontext(0x0008a6df)]
        HRESULT SlideShowName([out, retval] BSTR* SlideShowName);
        [id(0x000007d7), propput, helpcontext(0x0008a6df)]
        HRESULT SlideShowName([in] BSTR SlideShowName);
        [id(0x000007d8), propget, helpcontext(0x0008a6e0)]
        HRESULT Hyperlink([out, retval] Hyperlink** Hyperlink);
        [id(0x000007d9), propget, helpcontext(0x0008a6e1)]
        HRESULT SoundEffect([out, retval] SoundEffect** SoundEffect);
        [id(0x000007da), propget, helpcontext(0x0008a6e2)]
        HRESULT ShowandReturn([out, retval] MsoTriState* ShowandReturn);
        [id(0x000007da), propput, helpcontext(0x0008a6e2)]
        HRESULT ShowandReturn([in] MsoTriState ShowandReturn);
    };

    [
      odl,
      uuid(9149348E-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008aac0),
      dual,
      nonextensible,
      oleautomation
    ]
    interface PlaySettings : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0008aac1)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008aac2)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0008aac3)]
        HRESULT ActionVerb([out, retval] BSTR* ActionVerb);
        [id(0x000007d3), propput, helpcontext(0x0008aac3)]
        HRESULT ActionVerb([in] BSTR ActionVerb);
        [id(0x000007d4), propget, helpcontext(0x0008aac4)]
        HRESULT HideWhileNotPlaying([out, retval] MsoTriState* HideWhileNotPlaying);
        [id(0x000007d4), propput, helpcontext(0x0008aac4)]
        HRESULT HideWhileNotPlaying([in] MsoTriState HideWhileNotPlaying);
        [id(0x000007d5), propget, helpcontext(0x0008aac5)]
        HRESULT LoopUntilStopped([out, retval] MsoTriState* LoopUntilStopped);
        [id(0x000007d5), propput, helpcontext(0x0008aac5)]
        HRESULT LoopUntilStopped([in] MsoTriState LoopUntilStopped);
        [id(0x000007d6), propget, helpcontext(0x0008aac6)]
        HRESULT PlayOnEntry([out, retval] MsoTriState* PlayOnEntry);
        [id(0x000007d6), propput, helpcontext(0x0008aac6)]
        HRESULT PlayOnEntry([in] MsoTriState PlayOnEntry);
        [id(0x000007d7), propget, helpcontext(0x0008aac7)]
        HRESULT RewindMovie([out, retval] MsoTriState* RewindMovie);
        [id(0x000007d7), propput, helpcontext(0x0008aac7)]
        HRESULT RewindMovie([in] MsoTriState RewindMovie);
        [id(0x000007d8), propget, helpcontext(0x0008aac8)]
        HRESULT PauseAnimation([out, retval] MsoTriState* PauseAnimation);
        [id(0x000007d8), propput, helpcontext(0x0008aac8)]
        HRESULT PauseAnimation([in] MsoTriState PauseAnimation);
        [id(0x000007d9), propget, helpcontext(0x0008aac9)]
        HRESULT StopAfterSlides([out, retval] int* StopAfterSlides);
        [id(0x000007d9), propput, helpcontext(0x0008aac9)]
        HRESULT StopAfterSlides([in] int StopAfterSlides);
    };

    [
      odl,
      uuid(9149348F-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008aea8),
      dual,
      nonextensible,
      oleautomation
    ]
    interface TextRange : Collection {
        [id(0x000007d1), propget, helpcontext(0x0008aea9)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008aeaa)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0008aeab)]
        HRESULT ActionSettings([out, retval] ActionSettings** ActionSettings);
        [id(0x000007d4), propget, helpcontext(0x0008aeac)]
        HRESULT Start([out, retval] long* Start);
        [id(0x000007d5), propget, helpcontext(0x0008aead)]
        HRESULT Length([out, retval] long* Length);
        [id(0x000007d6), propget, helpcontext(0x0008aeae)]
        HRESULT BoundLeft([out, retval] single* BoundLeft);
        [id(0x000007d7), propget, helpcontext(0x0008aeaf)]
        HRESULT BoundTop([out, retval] single* BoundTop);
        [id(0x000007d8), propget, helpcontext(0x0008aeb0)]
        HRESULT BoundWidth([out, retval] single* BoundWidth);
        [id(0x000007d9), propget, helpcontext(0x0008aeb1)]
        HRESULT BoundHeight([out, retval] single* BoundHeight);
        [id(0x000007da), helpcontext(0x0008aeb2)]
        HRESULT Paragraphs(
                        [in, optional, defaultvalue(-1)] int Start, 
                        [in, optional, defaultvalue(-1)] int Length, 
                        [out, retval] TextRange** Paragraphs);
        [id(0x000007db), helpcontext(0x0008aeb3)]
        HRESULT Sentences(
                        [in, optional, defaultvalue(-1)] int Start, 
                        [in, optional, defaultvalue(-1)] int Length, 
                        [out, retval] TextRange** Sentences);
        [id(0x000007dc), helpcontext(0x0008aeb4)]
        HRESULT Words(
                        [in, optional, defaultvalue(-1)] int Start, 
                        [in, optional, defaultvalue(-1)] int Length, 
                        [out, retval] TextRange** Words);
        [id(0x000007dd), helpcontext(0x0008aeb5)]
        HRESULT Characters(
                        [in, optional, defaultvalue(-1)] int Start, 
                        [in, optional, defaultvalue(-1)] int Length, 
                        [out, retval] TextRange** Characters);
        [id(0x000007de), helpcontext(0x0008aeb6)]
        HRESULT Lines(
                        [in, optional, defaultvalue(-1)] int Start, 
                        [in, optional, defaultvalue(-1)] int Length, 
                        [out, retval] TextRange** Lines);
        [id(0x000007df), helpcontext(0x0008aeb7)]
        HRESULT Runs(
                        [in, optional, defaultvalue(-1)] int Start, 
                        [in, optional, defaultvalue(-1)] int Length, 
                        [out, retval] TextRange** Runs);
        [id(0x000007e0), helpcontext(0x0008aeb8)]
        HRESULT TrimText([out, retval] TextRange** TrimText);
        [id(00000000), propget, helpcontext(0x0008aeb9)]
        HRESULT Text([out, retval] BSTR* Text);
        [id(00000000), propput, helpcontext(0x0008aeb9)]
        HRESULT Text([in] BSTR Text);
        [id(0x000007e1), helpcontext(0x0008aeba)]
        HRESULT InsertAfter(
                        [in, optional, defaultvalue("")] BSTR NewText, 
                        [out, retval] TextRange** After);
        [id(0x000007e2), helpcontext(0x0008aebb)]
        HRESULT InsertBefore(
                        [in, optional, defaultvalue("")] BSTR NewText, 
                        [out, retval] TextRange** Before);
        [id(0x000007e3), helpcontext(0x0008aebc)]
        HRESULT InsertDateTime(
                        [in] PpDateTimeFormat DateTimeFormat, 
                        [in, optional, defaultvalue(0)] MsoTriState InsertAsField, 
                        [out, retval] TextRange** DateTime);
        [id(0x000007e4), helpcontext(0x0008aebd)]
        HRESULT InsertSlideNumber([out, retval] TextRange** SlideNumber);
        [id(0x000007e5), helpcontext(0x0008aebe)]
        HRESULT InsertSymbol(
                        [in] BSTR FontName, 
                        [in] int CharNumber, 
                        [in, optional, defaultvalue(0)] MsoTriState Unicode, 
                        [out, retval] TextRange** Symbol);
        [id(0x000007e6), propget, helpcontext(0x0008aebf)]
        HRESULT Font([out, retval] Font** Font);
        [id(0x000007e7), propget, helpcontext(0x0008aec0)]
        HRESULT ParagraphFormat([out, retval] ParagraphFormat** ParagraphFormat);
        [id(0x000007e8), propget, helpcontext(0x0008aec1)]
        HRESULT IndentLevel([out, retval] int* IndentLevel);
        [id(0x000007e8), propput, helpcontext(0x0008aec1)]
        HRESULT IndentLevel([in] int IndentLevel);
        [id(0x000007e9), helpcontext(0x0008aec2)]
        HRESULT Select();
        [id(0x000007ea), helpcontext(0x0008aec3)]
        HRESULT Cut();
        [id(0x000007eb), helpcontext(0x0008aec4)]
        HRESULT Copy();
        [id(0x000007ec), helpcontext(0x0008aec5)]
        HRESULT Delete();
        [id(0x000007ed), helpcontext(0x0008aec6)]
        HRESULT Paste([out, retval] TextRange** Paste);
        [id(0x000007ee), helpcontext(0x0008aec7)]
        HRESULT ChangeCase([in] PpChangeCase Type);
        [id(0x000007ef), helpcontext(0x0008aec8)]
        HRESULT AddPeriods();
        [id(0x000007f0), helpcontext(0x0008aec9)]
        HRESULT RemovePeriods();
        [id(0x000007f1), helpcontext(0x0008aeca)]
        HRESULT Find(
                        [in] BSTR FindWhat, 
                        [in, optional, defaultvalue(0)] int After, 
                        [in, optional, defaultvalue(0)] MsoTriState MatchCase, 
                        [in, optional, defaultvalue(0)] MsoTriState WholeWords, 
                        [out, retval] TextRange** Find);
        [id(0x000007f2), helpcontext(0x0008aecb)]
        HRESULT Replace(
                        [in] BSTR FindWhat, 
                        [in] BSTR ReplaceWhat, 
                        [in, optional, defaultvalue(0)] int After, 
                        [in, optional, defaultvalue(0)] MsoTriState MatchCase, 
                        [in, optional, defaultvalue(0)] MsoTriState WholeWords, 
                        [out, retval] TextRange** Replace);
        [id(0x000007f3), helpcontext(0x0008aecc)]
        HRESULT RotatedBounds(
                        [out] single* X1, 
                        [out] single* Y1, 
                        [out] single* X2, 
                        [out] single* Y2, 
                        [out] single* X3, 
                        [out] single* Y3, 
                        [out] single* x4, 
                        [out] single* y4);
        [id(0x000007f4), propget, helpcontext(0x0008aecd)]
        HRESULT LanguageID([out, retval] MsoLanguageID* LanguageID);
        [id(0x000007f4), propput, helpcontext(0x0008aecd)]
        HRESULT LanguageID([in] MsoLanguageID LanguageID);
        [id(0x000007f5), helpcontext(0x0008aece)]
        HRESULT RtlRun();
        [id(0x000007f6), helpcontext(0x0008aecf)]
        HRESULT LtrRun();
    };

    [
      odl,
      uuid(91493490-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008b290),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Ruler : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0008b291)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008b292)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0008b293)]
        HRESULT TabStops([out, retval] TabStops** TabStops);
        [id(0x000007d4), propget, helpcontext(0x0008b294)]
        HRESULT Levels([out, retval] RulerLevels** Levels);
    };

    [
      odl,
      uuid(91493491-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008b678),
      dual,
      nonextensible,
      oleautomation
    ]
    interface RulerLevels : Collection {
        [id(0x000007d1), propget, helpcontext(0x0008b679)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008b67a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x0008b67b)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] RulerLevel** Item);
    };

    [
      odl,
      uuid(91493492-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008ba60),
      dual,
      nonextensible,
      oleautomation
    ]
    interface RulerLevel : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0008ba61)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008ba62)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0008ba63)]
        HRESULT FirstMargin([out, retval] single* FirstMargin);
        [id(0x000007d3), propput, helpcontext(0x0008ba63)]
        HRESULT FirstMargin([in] single FirstMargin);
        [id(0x000007d4), propget, helpcontext(0x0008ba64)]
        HRESULT LeftMargin([out, retval] single* LeftMargin);
        [id(0x000007d4), propput, helpcontext(0x0008ba64)]
        HRESULT LeftMargin([in] single LeftMargin);
    };

    [
      odl,
      uuid(91493493-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008be48),
      dual,
      nonextensible,
      oleautomation
    ]
    interface TabStops : Collection {
        [id(0x000007d1), propget, helpcontext(0x0008be49)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008be4a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x0008be4b)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] TabStop** Item);
        [id(0x000007d3), propget, helpcontext(0x0008be4c)]
        HRESULT DefaultSpacing([out, retval] single* DefaultSpacing);
        [id(0x000007d3), propput, helpcontext(0x0008be4c)]
        HRESULT DefaultSpacing([in] single DefaultSpacing);
        [id(0x000007d4), helpcontext(0x0008be4d)]
        HRESULT Add(
                        [in] PpTabStopType Type, 
                        [in] single Position, 
                        [out, retval] TabStop** Add);
    };

    [
      odl,
      uuid(91493494-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008c230),
      dual,
      nonextensible,
      oleautomation
    ]
    interface TabStop : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0008c231)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008c232)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0008c233)]
        HRESULT Type([out, retval] PpTabStopType* Type);
        [id(0x000007d3), propput, helpcontext(0x0008c233)]
        HRESULT Type([in] PpTabStopType Type);
        [id(0x000007d4), propget, helpcontext(0x0008c234)]
        HRESULT Position([out, retval] single* Position);
        [id(0x000007d4), propput, helpcontext(0x0008c234)]
        HRESULT Position([in] single Position);
        [id(0x000007d5), helpcontext(0x0008c235)]
        HRESULT Clear();
    };

    [
      odl,
      uuid(91493495-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008c618),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Font : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0008c619)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008c61a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0008c61b)]
        HRESULT Color([out, retval] ColorFormat** Color);
        [id(0x000007d4), propget, helpcontext(0x0008c61c)]
        HRESULT Bold([out, retval] MsoTriState* Bold);
        [id(0x000007d4), propput, helpcontext(0x0008c61c)]
        HRESULT Bold([in] MsoTriState Bold);
        [id(0x000007d5), propget, helpcontext(0x0008c61d)]
        HRESULT Italic([out, retval] MsoTriState* Italic);
        [id(0x000007d5), propput, helpcontext(0x0008c61d)]
        HRESULT Italic([in] MsoTriState Italic);
        [id(0x000007d6), propget, helpcontext(0x0008c61e)]
        HRESULT Shadow([out, retval] MsoTriState* Shadow);
        [id(0x000007d6), propput, helpcontext(0x0008c61e)]
        HRESULT Shadow([in] MsoTriState Shadow);
        [id(0x000007d7), propget, helpcontext(0x0008c61f)]
        HRESULT Emboss([out, retval] MsoTriState* Emboss);
        [id(0x000007d7), propput, helpcontext(0x0008c61f)]
        HRESULT Emboss([in] MsoTriState Emboss);
        [id(0x000007d8), propget, helpcontext(0x0008c620)]
        HRESULT Underline([out, retval] MsoTriState* Underline);
        [id(0x000007d8), propput, helpcontext(0x0008c620)]
        HRESULT Underline([in] MsoTriState Underline);
        [id(0x000007d9), propget, helpcontext(0x0008c621)]
        HRESULT Subscript([out, retval] MsoTriState* Subscript);
        [id(0x000007d9), propput, helpcontext(0x0008c621)]
        HRESULT Subscript([in] MsoTriState Subscript);
        [id(0x000007da), propget, helpcontext(0x0008c622)]
        HRESULT Superscript([out, retval] MsoTriState* Superscript);
        [id(0x000007da), propput, helpcontext(0x0008c622)]
        HRESULT Superscript([in] MsoTriState Superscript);
        [id(0x000007db), propget, helpcontext(0x0008c623)]
        HRESULT BaselineOffset([out, retval] single* BaselineOffset);
        [id(0x000007db), propput, helpcontext(0x0008c623)]
        HRESULT BaselineOffset([in] single BaselineOffset);
        [id(0x000007dc), propget, helpcontext(0x0008c624)]
        HRESULT Embedded([out, retval] MsoTriState* Embedded);
        [id(0x000007dd), propget, helpcontext(0x0008c625)]
        HRESULT Embeddable([out, retval] MsoTriState* Embeddable);
        [id(0x000007de), propget, helpcontext(0x0008c626)]
        HRESULT Size([out, retval] single* Size);
        [id(0x000007de), propput, helpcontext(0x0008c626)]
        HRESULT Size([in] single Size);
        [id(0x000007df), propget, helpcontext(0x0008c627)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x000007df), propput, helpcontext(0x0008c627)]
        HRESULT Name([in] BSTR Name);
        [id(0x000007e0), propget, helpcontext(0x0008c628)]
        HRESULT NameFarEast([out, retval] BSTR* NameFarEast);
        [id(0x000007e0), propput, helpcontext(0x0008c628)]
        HRESULT NameFarEast([in] BSTR NameFarEast);
        [id(0x000007e1), propget, helpcontext(0x0008c629)]
        HRESULT NameAscii([out, retval] BSTR* NameAscii);
        [id(0x000007e1), propput, helpcontext(0x0008c629)]
        HRESULT NameAscii([in] BSTR NameAscii);
        [id(0x000007e2), propget, helpcontext(0x0008c62a)]
        HRESULT AutoRotateNumbers([out, retval] MsoTriState* AutoRotateNumbers);
        [id(0x000007e2), propput, helpcontext(0x0008c62a)]
        HRESULT AutoRotateNumbers([in] MsoTriState AutoRotateNumbers);
        [id(0x000007e3), propget, helpcontext(0x0008c62b)]
        HRESULT NameOther([out, retval] BSTR* NameOther);
        [id(0x000007e3), propput, helpcontext(0x0008c62b)]
        HRESULT NameOther([in] BSTR NameOther);
        [id(0x000007e4), propget, helpcontext(0x0008c62c)]
        HRESULT NameComplexScript([out, retval] BSTR* NameComplexScript);
        [id(0x000007e4), propput, helpcontext(0x0008c62c)]
        HRESULT NameComplexScript([in] BSTR NameComplexScript);
    };

    [
      odl,
      uuid(91493496-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008ca00),
      dual,
      nonextensible,
      oleautomation
    ]
    interface ParagraphFormat : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0008ca01)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008ca02)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0008ca03)]
        HRESULT Alignment([out, retval] PpParagraphAlignment* Alignment);
        [id(0x000007d3), propput, helpcontext(0x0008ca03)]
        HRESULT Alignment([in] PpParagraphAlignment Alignment);
        [id(0x000007d4), propget, helpcontext(0x0008ca04)]
        HRESULT Bullet([out, retval] BulletFormat** Bullet);
        [id(0x000007d5), propget, helpcontext(0x0008ca05)]
        HRESULT LineRuleBefore([out, retval] MsoTriState* LineRuleBefore);
        [id(0x000007d5), propput, helpcontext(0x0008ca05)]
        HRESULT LineRuleBefore([in] MsoTriState LineRuleBefore);
        [id(0x000007d6), propget, helpcontext(0x0008ca06)]
        HRESULT LineRuleAfter([out, retval] MsoTriState* LineRuleAfter);
        [id(0x000007d6), propput, helpcontext(0x0008ca06)]
        HRESULT LineRuleAfter([in] MsoTriState LineRuleAfter);
        [id(0x000007d7), propget, helpcontext(0x0008ca07)]
        HRESULT LineRuleWithin([out, retval] MsoTriState* LineRuleWithin);
        [id(0x000007d7), propput, helpcontext(0x0008ca07)]
        HRESULT LineRuleWithin([in] MsoTriState LineRuleWithin);
        [id(0x000007d8), propget, helpcontext(0x0008ca08)]
        HRESULT SpaceBefore([out, retval] single* SpaceBefore);
        [id(0x000007d8), propput, helpcontext(0x0008ca08)]
        HRESULT SpaceBefore([in] single SpaceBefore);
        [id(0x000007d9), propget, helpcontext(0x0008ca09)]
        HRESULT SpaceAfter([out, retval] single* SpaceAfter);
        [id(0x000007d9), propput, helpcontext(0x0008ca09)]
        HRESULT SpaceAfter([in] single SpaceAfter);
        [id(0x000007da), propget, helpcontext(0x0008ca0a)]
        HRESULT SpaceWithin([out, retval] single* SpaceWithin);
        [id(0x000007da), propput, helpcontext(0x0008ca0a)]
        HRESULT SpaceWithin([in] single SpaceWithin);
        [id(0x000007db), propget, helpcontext(0x0008ca0b)]
        HRESULT BaseLineAlignment([out, retval] PpBaselineAlignment* BaseLineAlignment);
        [id(0x000007db), propput, helpcontext(0x0008ca0b)]
        HRESULT BaseLineAlignment([in] PpBaselineAlignment BaseLineAlignment);
        [id(0x000007dc), propget, helpcontext(0x0008ca0c)]
        HRESULT FarEastLineBreakControl([out, retval] MsoTriState* FarEastLineBreakControl);
        [id(0x000007dc), propput, helpcontext(0x0008ca0c)]
        HRESULT FarEastLineBreakControl([in] MsoTriState FarEastLineBreakControl);
        [id(0x000007dd), propget, helpcontext(0x0008ca0d)]
        HRESULT WordWrap([out, retval] MsoTriState* WordWrap);
        [id(0x000007dd), propput, helpcontext(0x0008ca0d)]
        HRESULT WordWrap([in] MsoTriState WordWrap);
        [id(0x000007de), propget, helpcontext(0x0008ca0e)]
        HRESULT HangingPunctuation([out, retval] MsoTriState* HangingPunctuation);
        [id(0x000007de), propput, helpcontext(0x0008ca0e)]
        HRESULT HangingPunctuation([in] MsoTriState HangingPunctuation);
        [id(0x000007df), propget, helpcontext(0x0008ca0f)]
        HRESULT TextDirection([out, retval] PpDirection* TextDirection);
        [id(0x000007df), propput, helpcontext(0x0008ca0f)]
        HRESULT TextDirection([in] PpDirection TextDirection);
    };

    [
      odl,
      uuid(91493497-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008cde8),
      dual,
      nonextensible,
      oleautomation
    ]
    interface BulletFormat : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0008cde9)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008cdea)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), propget, hidden, helpcontext(0x0008cdeb)]
        HRESULT Visible([out, retval] MsoTriState* Visible);
        [id(00000000), propput, hidden, helpcontext(0x0008cdeb)]
        HRESULT Visible([in] MsoTriState Visible);
        [id(0x000007d3), propget, helpcontext(0x0008cdec)]
        HRESULT Character([out, retval] int* Character);
        [id(0x000007d3), propput, helpcontext(0x0008cdec)]
        HRESULT Character([in] int Character);
        [id(0x000007d4), propget, helpcontext(0x0008cded)]
        HRESULT RelativeSize([out, retval] single* RelativeSize);
        [id(0x000007d4), propput, helpcontext(0x0008cded)]
        HRESULT RelativeSize([in] single RelativeSize);
        [id(0x000007d5), propget, helpcontext(0x0008cdee)]
        HRESULT UseTextColor([out, retval] MsoTriState* UseTextColor);
        [id(0x000007d5), propput, helpcontext(0x0008cdee)]
        HRESULT UseTextColor([in] MsoTriState UseTextColor);
        [id(0x000007d6), propget, helpcontext(0x0008cdef)]
        HRESULT UseTextFont([out, retval] MsoTriState* UseTextFont);
        [id(0x000007d6), propput, helpcontext(0x0008cdef)]
        HRESULT UseTextFont([in] MsoTriState UseTextFont);
        [id(0x000007d7), propget, helpcontext(0x0008cdf0)]
        HRESULT Font([out, retval] Font** Font);
        [id(0x000007d8), propget, helpcontext(0x0008cdf1)]
        HRESULT Type([out, retval] PpBulletType* Type);
        [id(0x000007d8), propput, helpcontext(0x0008cdf1)]
        HRESULT Type([in] PpBulletType Type);
        [id(0x000007d9), propget, helpcontext(0x0008cdf2)]
        HRESULT Style([out, retval] PpNumberedBulletStyle* Style);
        [id(0x000007d9), propput, helpcontext(0x0008cdf2)]
        HRESULT Style([in] PpNumberedBulletStyle Style);
        [id(0x000007da), propget, helpcontext(0x0008cdf3)]
        HRESULT StartValue([out, retval] int* StartValue);
        [id(0x000007da), propput, helpcontext(0x0008cdf3)]
        HRESULT StartValue([in] int StartValue);
        [id(0x000007db), helpcontext(0x0008cdf4)]
        HRESULT Picture([in] BSTR Picture);
        [id(0x000007dc), propget, helpcontext(0x0008cdf5)]
        HRESULT Number([out, retval] int* Number);
    };

    [
      odl,
      uuid(91493498-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008d1d0),
      dual,
      nonextensible,
      oleautomation
    ]
    interface TextStyles : Collection {
        [id(0x000007d1), propget, helpcontext(0x0008d1d1)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008d1d2)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x0008d1d3)]
        HRESULT Item(
                        [in] PpTextStyleType Type, 
                        [out, retval] TextStyle** Item);
    };

    [
      odl,
      uuid(91493499-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008d5b8),
      dual,
      nonextensible,
      oleautomation
    ]
    interface TextStyle : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0008d5b9)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008d5ba)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0008d5bb)]
        HRESULT Ruler([out, retval] Ruler** Ruler);
        [id(0x000007d4), propget, helpcontext(0x0008d5bc)]
        HRESULT TextFrame([out, retval] TextFrame** TextFrame);
        [id(0x000007d5), propget, helpcontext(0x0008d5bd)]
        HRESULT Levels([out, retval] TextStyleLevels** Levels);
    };

    [
      odl,
      uuid(9149349A-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008d9a0),
      dual,
      nonextensible,
      oleautomation
    ]
    interface TextStyleLevels : Collection {
        [id(0x000007d1), propget, helpcontext(0x0008d9a1)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008d9a2)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x0008d9a3)]
        HRESULT Item(
                        [in] int Level, 
                        [out, retval] TextStyleLevel** Item);
    };

    [
      odl,
      uuid(9149349B-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008dd88),
      dual,
      nonextensible,
      oleautomation
    ]
    interface TextStyleLevel : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0008dd89)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008dd8a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0008dd8b)]
        HRESULT ParagraphFormat([out, retval] ParagraphFormat** ParagraphFormat);
        [id(0x000007d4), propget, helpcontext(0x0008dd8c)]
        HRESULT Font([out, retval] Font** Font);
    };

    [
      odl,
      uuid(9149349C-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008e170),
      dual,
      nonextensible,
      oleautomation
    ]
    interface HeaderFooter : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0008e171)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008e172)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0008e173)]
        HRESULT Visible([out, retval] MsoTriState* Visible);
        [id(0x000007d3), propput, helpcontext(0x0008e173)]
        HRESULT Visible([in] MsoTriState Visible);
        [id(0x000007d4), propget, helpcontext(0x0008e174)]
        HRESULT Text([out, retval] BSTR* Text);
        [id(0x000007d4), propput, helpcontext(0x0008e174)]
        HRESULT Text([in] BSTR Text);
        [id(0x000007d5), propget, helpcontext(0x0008e175)]
        HRESULT UseFormat([out, retval] MsoTriState* UseFormat);
        [id(0x000007d5), propput, helpcontext(0x0008e175)]
        HRESULT UseFormat([in] MsoTriState UseFormat);
        [id(0x000007d6), propget, helpcontext(0x0008e176)]
        HRESULT Format([out, retval] PpDateTimeFormat* Format);
        [id(0x000007d6), propput, helpcontext(0x0008e176)]
        HRESULT Format([in] PpDateTimeFormat Format);
    };

    [
      odl,
      uuid(9149349D-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008e558),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface _Presentation : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0008e559)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008e55a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0008e55b)]
        HRESULT SlideMaster([out, retval] _Master** SlideMaster);
        [id(0x000007d4), propget, helpcontext(0x0008e55c)]
        HRESULT TitleMaster([out, retval] _Master** TitleMaster);
        [id(0x000007d5), propget, helpcontext(0x0008e55d)]
        HRESULT HasTitleMaster([out, retval] MsoTriState* HasTitleMaster);
        [id(0x000007d6), helpcontext(0x0008e55e)]
        HRESULT AddTitleMaster([out, retval] _Master** TitleMaster);
        [id(0x000007d7), helpcontext(0x0008e55f)]
        HRESULT ApplyTemplate([in] BSTR FileName);
        [id(0x000007d8), propget, helpcontext(0x0008e560)]
        HRESULT TemplateName([out, retval] BSTR* TemplateName);
        [id(0x000007d9), propget, helpcontext(0x0008e561)]
        HRESULT NotesMaster([out, retval] _Master** NotesMaster);
        [id(0x000007da), propget, helpcontext(0x0008e562)]
        HRESULT HandoutMaster([out, retval] _Master** HandoutMaster);
        [id(0x000007db), propget, helpcontext(0x0008e563)]
        HRESULT Slides([out, retval] Slides** Slides);
        [id(0x000007dc), propget, helpcontext(0x0008e564)]
        HRESULT PageSetup([out, retval] PageSetup** PageSetup);
        [id(0x000007dd), propget, helpcontext(0x0008e565)]
        HRESULT ColorSchemes([out, retval] ColorSchemes** ColorSchemes);
        [id(0x000007de), propget, helpcontext(0x0008e566)]
        HRESULT ExtraColors([out, retval] ExtraColors** ExtraColors);
        [id(0x000007df), propget, helpcontext(0x0008e567)]
        HRESULT SlideShowSettings([out, retval] SlideShowSettings** SlideShowSettings);
        [id(0x000007e0), propget, helpcontext(0x0008e568)]
        HRESULT Fonts([out, retval] Fonts** Fonts);
        [id(0x000007e1), propget, helpcontext(0x0008e569)]
        HRESULT Windows([out, retval] DocumentWindows** Windows);
        [id(0x000007e2), propget, helpcontext(0x0008e56a)]
        HRESULT Tags([out, retval] Tags** Tags);
        [id(0x000007e3), propget, helpcontext(0x0008e56b)]
        HRESULT DefaultShape([out, retval] Shape** DefaultShape);
        [id(0x000007e4), propget, helpcontext(0x0008e56c)]
        HRESULT BuiltInDocumentProperties([out, retval] IDispatch** BuiltInDocumentProperties);
        [id(0x000007e5), propget, helpcontext(0x0008e56d)]
        HRESULT CustomDocumentProperties([out, retval] IDispatch** CustomDocumentProperties);
        [id(0x000007e6), propget, helpcontext(0x0008e56e)]
        HRESULT VBProject([out, retval] VBProject** VBProject);
        [id(0x000007e7), propget, helpcontext(0x0008e56f)]
        HRESULT ReadOnly([out, retval] MsoTriState* ReadOnly);
        [id(0x000007e8), propget, helpcontext(0x0008e570)]
        HRESULT FullName([out, retval] BSTR* FullName);
        [id(0x000007e9), propget, helpcontext(0x0008e571)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x000007ea), propget, helpcontext(0x0008e572)]
        HRESULT Path([out, retval] BSTR* Path);
        [id(0x000007eb), propget, helpcontext(0x0008e573)]
        HRESULT Saved([out, retval] MsoTriState* Saved);
        [id(0x000007eb), propput, helpcontext(0x0008e573)]
        HRESULT Saved([in] MsoTriState Saved);
        [id(0x000007ec), propget, helpcontext(0x0008e574)]
        HRESULT LayoutDirection([out, retval] PpDirection* LayoutDirection);
        [id(0x000007ec), propput, helpcontext(0x0008e574)]
        HRESULT LayoutDirection([in] PpDirection LayoutDirection);
        [id(0x000007ed), helpcontext(0x0008e575)]
        HRESULT NewWindow([out, retval] DocumentWindow** NewWindow);
        [id(0x000007ee), helpcontext(0x0008e576)]
        HRESULT FollowHyperlink(
                        [in] BSTR Address, 
                        [in, optional, defaultvalue("")] BSTR SubAddress, 
                        [in, optional, defaultvalue(0)] VARIANT_BOOL NewWindow, 
                        [in, optional, defaultvalue(-1)] VARIANT_BOOL AddHistory, 
                        [in, optional, defaultvalue("")] BSTR ExtraInfo, 
                        [in, optional, defaultvalue(0)] MsoExtraInfoMethod Method, 
                        [in, optional, defaultvalue("")] BSTR HeaderInfo);
        [id(0x000007ef), helpcontext(0x0008e577)]
        HRESULT AddToFavorites();
        [id(0x000007f0), restricted, helpcontext(0x0008e578)]
        HRESULT Unused();
        [id(0x000007f1), propget, helpcontext(0x0008e579)]
        HRESULT PrintOptions([out, retval] PrintOptions** PrintOptions);
        [id(0x000007f2), helpcontext(0x0008e57a)]
        HRESULT PrintOut(
                        [in, optional, defaultvalue(-1)] int From, 
                        [in, optional, defaultvalue(-1)] int To, 
                        [in, optional, defaultvalue("")] BSTR PrintToFile, 
                        [in, optional, defaultvalue(0)] int Copies, 
                        [in, optional, defaultvalue(-99)] MsoTriState Collate);
        [id(0x000007f3), helpcontext(0x0008e57b)]
        HRESULT Save();
        [id(0x000007f4), helpcontext(0x0008e57c)]
        HRESULT SaveAs(
                        [in] BSTR FileName, 
                        [in, optional, defaultvalue(1)] PpSaveAsFileType FileFormat, 
                        [in, optional, defaultvalue(-2)] MsoTriState EmbedTrueTypeFonts);
        [id(0x000007f5), helpcontext(0x0008e57d)]
        HRESULT SaveCopyAs(
                        [in] BSTR FileName, 
                        [in, optional, defaultvalue(11)] PpSaveAsFileType FileFormat, 
                        [in, optional, defaultvalue(-2)] MsoTriState EmbedTrueTypeFonts);
        [id(0x000007f6), helpcontext(0x0008e57e)]
        HRESULT Export(
                        [in] BSTR Path, 
                        [in] BSTR FilterName, 
                        [in, optional, defaultvalue(0)] int ScaleWidth, 
                        [in, optional, defaultvalue(0)] int ScaleHeight);
        [id(0x000007f7), helpcontext(0x0008e57f)]
        HRESULT Close();
        [id(0x000007f8), hidden, helpcontext(0x0008e580)]
        HRESULT SetUndoText([in] BSTR Text);
        [id(0x000007f9), propget, helpcontext(0x0008e581)]
        HRESULT Container([out, retval] IDispatch** Container);
        [id(0x000007fa), propget, helpcontext(0x0008e582)]
        HRESULT DisplayComments([out, retval] MsoTriState* DisplayComments);
        [id(0x000007fa), propput, helpcontext(0x0008e582)]
        HRESULT DisplayComments([in] MsoTriState DisplayComments);
        [id(0x000007fb), propget, helpcontext(0x0008e583)]
        HRESULT FarEastLineBreakLevel([out, retval] PpFarEastLineBreakLevel* FarEastLineBreakLevel);
        [id(0x000007fb), propput, helpcontext(0x0008e583)]
        HRESULT FarEastLineBreakLevel([in] PpFarEastLineBreakLevel FarEastLineBreakLevel);
        [id(0x000007fc), propget, helpcontext(0x0008e584)]
        HRESULT NoLineBreakBefore([out, retval] BSTR* NoLineBreakBefore);
        [id(0x000007fc), propput, helpcontext(0x0008e584)]
        HRESULT NoLineBreakBefore([in] BSTR NoLineBreakBefore);
        [id(0x000007fd), propget, helpcontext(0x0008e585)]
        HRESULT NoLineBreakAfter([out, retval] BSTR* NoLineBreakAfter);
        [id(0x000007fd), propput, helpcontext(0x0008e585)]
        HRESULT NoLineBreakAfter([in] BSTR NoLineBreakAfter);
        [id(0x000007fe), helpcontext(0x0008e586)]
        HRESULT UpdateLinks();
        [id(0x000007ff), propget, helpcontext(0x0008e587)]
        HRESULT SlideShowWindow([out, retval] SlideShowWindow** SlideShowWindow);
        [id(0x00000800), propget, helpcontext(0x0008e588)]
        HRESULT FarEastLineBreakLanguage([out, retval] MsoFarEastLineBreakLanguageID* FarEastLineBreakLanguage);
        [id(0x00000800), propput, helpcontext(0x0008e588)]
        HRESULT FarEastLineBreakLanguage([in] MsoFarEastLineBreakLanguageID FarEastLineBreakLanguage);
        [id(0x00000801), helpcontext(0x0008e589)]
        HRESULT WebPagePreview();
        [id(0x00000802), propget, helpcontext(0x0008e58a)]
        HRESULT DefaultLanguageID([out, retval] MsoLanguageID* DefaultLanguageID);
        [id(0x00000802), propput, helpcontext(0x0008e58a)]
        HRESULT DefaultLanguageID([in] MsoLanguageID DefaultLanguageID);
        [id(0x00000803), propget, helpcontext(0x0008e58b)]
        HRESULT CommandBars([out, retval] CommandBars** CommandBars);
        [id(0x00000804), propget, helpcontext(0x0008e58c)]
        HRESULT PublishObjects([out, retval] PublishObjects** PublishObjects);
        [id(0x00000805), propget, helpcontext(0x0008e58d)]
        HRESULT WebOptions([out, retval] WebOptions** WebOptions);
        [id(0x00000806), propget, helpcontext(0x0008e58e)]
        HRESULT HTMLProject([out, retval] HTMLProject** HTMLProject);
        [id(0x00000807), helpcontext(0x0008e58f)]
        HRESULT ReloadAs([in] MsoEncoding cp);
        [id(0x00000808), hidden, helpcontext(0x0008e590)]
        HRESULT MakeIntoTemplate([in] MsoTriState IsDesignTemplate);
        [id(0x00000809), propget, helpcontext(0x0008e591)]
        HRESULT EnvelopeVisible([out, retval] MsoTriState* EnvelopeVisible);
        [id(0x00000809), propput, helpcontext(0x0008e591)]
        HRESULT EnvelopeVisible([in] MsoTriState EnvelopeVisible);
        [id(0x0000080a), hidden, helpcontext(0x0008e592)]
        HRESULT sblt([in] BSTR s);
        [id(0x0000080b), propget, helpcontext(0x0008e593)]
        HRESULT VBASigned([out, retval] MsoTriState* VBASigned);
    };

    [
      odl,
      uuid(9149349E-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008e940),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPDialogs : Collection {
        [id(0x000007d1), propget, helpcontext(0x0008e941)]
        HRESULT Application([out, retval] Application** Application);
        [id(00000000), helpcontext(0x0008e942)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] PPDialog** Item);
        [id(0x000007d2), helpcontext(0x0008e943)]
        HRESULT AddDialog(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [in, optional, defaultvalue(-1)] MsoTriState Modal, 
                        [in, optional, defaultvalue(<unprintable IUnknown*>)] IUnknown* ParentWindow, 
                        [in, optional, defaultvalue(1)] PpDialogPositioning Position, 
                        [in, optional, defaultvalue(-1)] MsoTriState DisplayHelp, 
                        [out, retval] PPDialog** Dialog);
        [id(0x000007d3), helpcontext(0x0008e944)]
        HRESULT AddTabDialog(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [in, optional, defaultvalue(-1)] MsoTriState Modal, 
                        [in, optional, defaultvalue(<unprintable IUnknown*>)] IUnknown* ParentWindow, 
                        [in, optional, defaultvalue(1)] PpDialogPositioning Position, 
                        [in, optional, defaultvalue(-1)] MsoTriState DisplayHelp, 
                        [out, retval] PPDialog** TabDialog);
        [id(0x000007d4), helpcontext(0x0008e945)]
        HRESULT LoadDialog(
                        [in] BSTR resourceDLL, 
                        [in] int nResID, 
                        [in, optional, defaultvalue(-1)] MsoTriState bModal, 
                        [in, optional, defaultvalue(<unprintable IUnknown*>)] IUnknown* ParentWindow, 
                        [in, optional, defaultvalue(1)] PpDialogPositioning Position, 
                        [out, retval] PPDialog** LoadDialog);
        [id(0x000007d5), helpcontext(0x0008e946)]
        HRESULT AddAlert([out, retval] PPAlert** Alert);
        [id(0x000007d6), propget, helpcontext(0x0008e947)]
        HRESULT Tags([out, retval] Tags** Tags);
        [id(0x000007d7), propget, helpcontext(0x0008e948)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x000007d7), propput, helpcontext(0x0008e948)]
        HRESULT Name([in] BSTR Name);
        [id(0x000007d8), helpcontext(0x0008e949)]
        HRESULT RunCharacterAlert(
                        [in] BSTR Text, 
                        [in] PpAlertType Type, 
                        [in] PpAlertIcon icon, 
                        [in, optional, defaultvalue(<unprintable IUnknown*>)] IUnknown* ParentWindow, 
                        [out, retval] PpAlertButton* RunCharacterAlert);
    };

    [
      odl,
      uuid(9149349F-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008ed28),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPAlert : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0008ed29)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008ed2a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), helpcontext(0x0008ed2b)]
        HRESULT Run(
                        [in] BSTR Title, 
                        [in] int Type, 
                        [in] BSTR Text, 
                        [in] BSTR leftBtn, 
                        [in] BSTR middleBtn, 
                        [in] BSTR rightBtn);
        [id(0x000007d4), propget, helpcontext(0x0008ed2c)]
        HRESULT PressedButton([out, retval] int* PressedButton);
        [id(0x000007d5), propget, helpcontext(0x0008ed2d)]
        HRESULT OnButton([out, retval] BSTR* OnButton);
        [id(0x000007d5), propput, helpcontext(0x0008ed2d)]
        HRESULT OnButton([in] BSTR OnButton);
    };

    [
      odl,
      uuid(914934A0-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008f110),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPDialog : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0008f111)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008f112)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0008f113)]
        HRESULT Style([out, retval] PpDialogStyle* Style);
        [id(0x000007d4), propget, helpcontext(0x0008f114)]
        HRESULT Mode([out, retval] PpDialogMode* Mode);
        [id(0x000007d4), propput, helpcontext(0x0008f114)]
        HRESULT Mode([in] PpDialogMode Mode);
        [id(0x000007d5), propget, helpcontext(0x0008f115)]
        HRESULT HelpId([out, retval] int* HelpId);
        [id(0x000007d5), propput, helpcontext(0x0008f115)]
        HRESULT HelpId([in] int HelpId);
        [id(0x000007d6), propget, helpcontext(0x0008f116)]
        HRESULT HideOnIdle([out, retval] MsoTriState* HideOnIdle);
        [id(0x000007d6), propput, helpcontext(0x0008f116)]
        HRESULT HideOnIdle([in] MsoTriState HideOnIdle);
        [id(0x000007d7), propget, helpcontext(0x0008f117)]
        HRESULT resourceDLL([out, retval] BSTR* resourceDLL);
        [id(0x000007d7), propput, helpcontext(0x0008f117)]
        HRESULT resourceDLL([in] BSTR resourceDLL);
        [id(0x000007d8), propget, helpcontext(0x0008f118)]
        HRESULT Caption([out, retval] BSTR* Caption);
        [id(0x000007d8), propput, helpcontext(0x0008f118)]
        HRESULT Caption([in] BSTR Caption);
        [id(0x000007d9), propget, helpcontext(0x0008f119)]
        HRESULT Left([out, retval] single* Left);
        [id(0x000007d9), propput, helpcontext(0x0008f119)]
        HRESULT Left([in] single Left);
        [id(0x000007da), propget, helpcontext(0x0008f11a)]
        HRESULT Top([out, retval] single* Top);
        [id(0x000007da), propput, helpcontext(0x0008f11a)]
        HRESULT Top([in] single Top);
        [id(0x000007db), propget, helpcontext(0x0008f11b)]
        HRESULT Width([out, retval] single* Width);
        [id(0x000007db), propput, helpcontext(0x0008f11b)]
        HRESULT Width([in] single Width);
        [id(0x000007dc), propget, helpcontext(0x0008f11c)]
        HRESULT Height([out, retval] single* Height);
        [id(0x000007dc), propput, helpcontext(0x0008f11c)]
        HRESULT Height([in] single Height);
        [id(0x000007dd), propget, helpcontext(0x0008f11d)]
        HRESULT ClientLeft([out, retval] single* ClientLeft);
        [id(0x000007de), propget, helpcontext(0x0008f11e)]
        HRESULT ClientTop([out, retval] single* ClientTop);
        [id(0x000007df), propget, helpcontext(0x0008f11f)]
        HRESULT ClientWidth([out, retval] single* ClientWidth);
        [id(0x000007e0), propget, helpcontext(0x0008f120)]
        HRESULT ClientHeight([out, retval] single* ClientHeight);
        [id(0x000007e1), propget, helpcontext(0x0008f121)]
        HRESULT Visible([out, retval] MsoTriState* Visible);
        [id(0x000007e1), propput, helpcontext(0x0008f121)]
        HRESULT Visible([in] MsoTriState Visible);
        [id(0x000007e2), propget, helpcontext(0x0008f122)]
        HRESULT Controls([out, retval] PPControls** Controls);
        [id(0x000007e3), propget, helpcontext(0x0008f123)]
        HRESULT Tags([out, retval] Tags** Tags);
        [id(0x000007e4), propget, helpcontext(0x0008f124)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x000007e4), propput, helpcontext(0x0008f124)]
        HRESULT Name([in] BSTR Name);
        [id(0x000007e5), propget, helpcontext(0x0008f125)]
        HRESULT Sheets([out, retval] PPTabSheets** Sheets);
        [id(0x000007e6), propget, helpcontext(0x0008f126)]
        HRESULT TabControl([out, retval] PPTabControl** TabControl);
        [id(0x000007e7), propget, helpcontext(0x0008f127)]
        HRESULT DelayTime([out, retval] int* DelayTime);
        [id(0x000007e7), propput, helpcontext(0x0008f127)]
        HRESULT DelayTime([in] int DelayTime);
        [id(0x000007e8), helpcontext(0x0008f128)]
        HRESULT SaveDialog(
                        [in] BSTR FileName, 
                        [out, retval] int* SaveDialog);
        [id(0x000007e9), helpcontext(0x0008f129)]
        HRESULT Terminate();
        [id(0x000007ea), propget, restricted, helpcontext(0x0008f12a)]
        HRESULT HWND([out, retval] long* HWND);
        [id(0x000007eb), propget, helpcontext(0x0008f12b)]
        HRESULT OnTerminate([out, retval] BSTR* OnTerminate);
        [id(0x000007eb), propput, helpcontext(0x0008f12b)]
        HRESULT OnTerminate([in] BSTR OnTerminate);
        [id(0x000007ec), propget, helpcontext(0x0008f12c)]
        HRESULT OnIdle([out, retval] BSTR* OnIdle);
        [id(0x000007ec), propput, helpcontext(0x0008f12c)]
        HRESULT OnIdle([in] BSTR OnIdle);
        [id(0x000007ed), propget, helpcontext(0x0008f12d)]
        HRESULT OnMouseDown([out, retval] BSTR* OnMouseDown);
        [id(0x000007ed), propput, helpcontext(0x0008f12d)]
        HRESULT OnMouseDown([in] BSTR OnMouseDown);
        [id(0x000007ee), propget, helpcontext(0x0008f12e)]
        HRESULT OnMouseUp([out, retval] BSTR* OnMouseUp);
        [id(0x000007ee), propput, helpcontext(0x0008f12e)]
        HRESULT OnMouseUp([in] BSTR OnMouseUp);
        [id(0x000007ef), propget, helpcontext(0x0008f12f)]
        HRESULT OnKeyPressed([out, retval] BSTR* OnKeyPressed);
        [id(0x000007ef), propput, helpcontext(0x0008f12f)]
        HRESULT OnKeyPressed([in] BSTR OnKeyPressed);
        [id(0x000007f0), propget, helpcontext(0x0008f130)]
        HRESULT OnTimer([out, retval] BSTR* OnTimer);
        [id(0x000007f0), propput, helpcontext(0x0008f130)]
        HRESULT OnTimer([in] BSTR OnTimer);
        [id(0x000007f1), propget, helpcontext(0x0008f131)]
        HRESULT OnActivate([out, retval] BSTR* OnActivate);
        [id(0x000007f1), propput, helpcontext(0x0008f131)]
        HRESULT OnActivate([in] BSTR OnActivate);
    };

    [
      odl,
      uuid(914934A1-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008f4f8),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPTabSheet : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0008f4f9)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0008f4fa)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0008f4fb)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x000007d3), propput, helpcontext(0x0008f4fb)]
        HRESULT Name([in] BSTR Name);
        [id(0x000007d4), helpcontext(0x0008f4fc)]
        HRESULT Select();
        [id(0x000007d5), propget, helpcontext(0x0008f4fd)]
        HRESULT ClientLeft([out, retval] single* ClientLeft);
        [id(0x000007d6), propget, helpcontext(0x0008f4fe)]
        HRESULT ClientTop([out, retval] single* ClientTop);
        [id(0x000007d7), propget, helpcontext(0x0008f4ff)]
        HRESULT ClientWidth([out, retval] single* ClientWidth);
        [id(0x000007d8), propget, helpcontext(0x0008f500)]
        HRESULT ClientHeight([out, retval] single* ClientHeight);
        [id(0x000007d9), propget, helpcontext(0x0008f501)]
        HRESULT Controls([out, retval] PPControls** Controls);
        [id(0x000007da), propget, helpcontext(0x0008f502)]
        HRESULT Tags([out, retval] Tags** Tags);
        [id(0x000007db), propget, helpcontext(0x0008f503)]
        HRESULT OnActivate([out, retval] BSTR* OnActivate);
        [id(0x000007db), propput, helpcontext(0x0008f503)]
        HRESULT OnActivate([in] BSTR OnActivate);
    };

    [
      odl,
      uuid(914934A2-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008f8e0),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPControls : Collection {
        [id(0x000007d1), propget, helpcontext(0x0008f8e1)]
        HRESULT Application([out, retval] Application** Application);
        [id(00000000), helpcontext(0x0008f8e2)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] PPControl** Item);
        [id(0x000007d2), helpcontext(0x0008f8e3)]
        HRESULT AddPushButton(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] PPPushButton** PushButton);
        [id(0x000007d3), helpcontext(0x0008f8e4)]
        HRESULT AddToggleButton(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] PPToggleButton** ToggleButton);
        [id(0x000007d4), helpcontext(0x0008f8e5)]
        HRESULT AddBitmapButton(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] PPBitmapButton** BitmapButton);
        [id(0x000007d5), helpcontext(0x0008f8e6)]
        HRESULT AddListBox(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] PPListBox** ListBox);
        [id(0x000007d6), helpcontext(0x0008f8e7)]
        HRESULT AddCheckBox(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] PPCheckBox** CheckBox);
        [id(0x000007d7), helpcontext(0x0008f8e8)]
        HRESULT AddRadioCluster(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] PPRadioCluster** RadioCluster);
        [id(0x000007d8), helpcontext(0x0008f8e9)]
        HRESULT AddStaticText(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] PPStaticText** StaticText);
        [id(0x000007d9), helpcontext(0x0008f8ea)]
        HRESULT AddEditText(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [in, optional] VARIANT VerticalScrollBar, 
                        [out, retval] PPEditText** EditText);
        [id(0x000007da), helpcontext(0x0008f8eb)]
        HRESULT AddIcon(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] PPIcon** icon);
        [id(0x000007db), helpcontext(0x0008f8ec)]
        HRESULT AddBitmap(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] PPBitmap** Bitmap);
        [id(0x000007dc), helpcontext(0x0008f8ed)]
        HRESULT AddSpinner(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] PPSpinner** Spinner);
        [id(0x000007dd), helpcontext(0x0008f8ee)]
        HRESULT AddScrollBar(
                        [in] PpScrollBarStyle Style, 
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] PPScrollBar** ScrollBar);
        [id(0x000007de), helpcontext(0x0008f8ef)]
        HRESULT AddGroupBox(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] PPGroupBox** GroupBox);
        [id(0x000007df), helpcontext(0x0008f8f0)]
        HRESULT AddDropDown(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] PPDropDown** DropDown);
        [id(0x000007e0), helpcontext(0x0008f8f1)]
        HRESULT AddDropDownEdit(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] PPDropDownEdit** DropDownEdit);
        [id(0x000007e1), helpcontext(0x0008f8f2)]
        HRESULT AddMiniature(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] PPSlideMiniature** Miniature);
        [id(0x000007e2), helpcontext(0x0008f8f3)]
        HRESULT AddFrame(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] PPFrame** Frame);
        [id(0x000007e3), propget, helpcontext(0x0008f8f4)]
        HRESULT Visible([out, retval] MsoTriState* Visible);
        [id(0x000007e3), propput, helpcontext(0x0008f8f4)]
        HRESULT Visible([in] MsoTriState Visible);
    };

    [
      odl,
      uuid(914934A3-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0008fcc8),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPTabSheets : Collection {
        [id(00000000), helpcontext(0x0008fcc9)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] PPTabSheet** Item);
        [id(0x000007d1), helpcontext(0x0008fcca)]
        HRESULT Add(
                        [in] BSTR Name, 
                        [out, retval] PPTabSheet** Add);
        [id(0x000007d2), propget, helpcontext(0x0008fccb)]
        HRESULT ActiveSheet([out, retval] PPTabSheet** ActiveSheet);
        [id(0x000007d3), propget, helpcontext(0x0008fccc)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x000007d3), propput, helpcontext(0x0008fccc)]
        HRESULT Name([in] BSTR Name);
    };

    [
      odl,
      uuid(914934A4-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000900b0),
      hidden,
      dual,
      oleautomation
    ]
    interface PPControl : IDispatch {
        [id(0x000003e9), propget, helpcontext(0x000900b1)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000003ea), propget, helpcontext(0x000900b2)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000003eb), propget, helpcontext(0x000900b3)]
        HRESULT Enable([out, retval] MsoTriState* Enable);
        [id(0x000003eb), propput, helpcontext(0x000900b3)]
        HRESULT Enable([in] MsoTriState Enable);
        [id(0x000003ec), propget, helpcontext(0x000900b4)]
        HRESULT Visible([out, retval] MsoTriState* Visible);
        [id(0x000003ec), propput, helpcontext(0x000900b4)]
        HRESULT Visible([in] MsoTriState Visible);
        [id(0x000003ed), propget, helpcontext(0x000900b5)]
        HRESULT Focus([out, retval] MsoTriState* Focus);
        [id(0x000003ed), propput, helpcontext(0x000900b5)]
        HRESULT Focus([in] MsoTriState Focus);
        [id(0x000003ee), propget, helpcontext(0x000900b6)]
        HRESULT Label([out, retval] BSTR* Label);
        [id(0x000003ee), propput, helpcontext(0x000900b6)]
        HRESULT Label([in] BSTR Label);
        [id(0x000003ef), propget, helpcontext(0x000900b7)]
        HRESULT HelpId([out, retval] int* HelpId);
        [id(0x000003ef), propput, helpcontext(0x000900b7)]
        HRESULT HelpId([in] int HelpId);
        [id(0x000003f0), propget, helpcontext(0x000900b8)]
        HRESULT Left([out, retval] single* Left);
        [id(0x000003f0), propput, helpcontext(0x000900b8)]
        HRESULT Left([in] single Left);
        [id(0x000003f1), propget, helpcontext(0x000900b9)]
        HRESULT Top([out, retval] single* Top);
        [id(0x000003f1), propput, helpcontext(0x000900b9)]
        HRESULT Top([in] single Top);
        [id(0x000003f2), propget, helpcontext(0x000900ba)]
        HRESULT Width([out, retval] single* Width);
        [id(0x000003f2), propput, helpcontext(0x000900ba)]
        HRESULT Width([in] single Width);
        [id(0x000003f3), propget, helpcontext(0x000900bb)]
        HRESULT Height([out, retval] single* Height);
        [id(0x000003f3), propput, helpcontext(0x000900bb)]
        HRESULT Height([in] single Height);
        [id(0x000003f4), propget, restricted, helpcontext(0x000900bc)]
        HRESULT HWND([out, retval] long* HWND);
        [id(0x000003f5), propget, helpcontext(0x000900bd)]
        HRESULT OnSetFocus([out, retval] BSTR* OnSetFocus);
        [id(0x000003f5), propput, helpcontext(0x000900bd)]
        HRESULT OnSetFocus([in] BSTR OnSetFocus);
        [id(0x000003f6), propget, helpcontext(0x000900be)]
        HRESULT OnKillFocus([out, retval] BSTR* OnKillFocus);
        [id(0x000003f6), propput, helpcontext(0x000900be)]
        HRESULT OnKillFocus([in] BSTR OnKillFocus);
        [id(0x000003f7), propget, helpcontext(0x000900bf)]
        HRESULT Tags([out, retval] Tags** Tags);
        [id(0x000003f8), propget, helpcontext(0x000900c0)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x000003f8), propput, helpcontext(0x000900c0)]
        HRESULT Name([in] BSTR Name);
    };

    [
      odl,
      uuid(914934A5-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00090498),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPPushButton : PPControl {
        [id(0x000007d1), helpcontext(0x00090499)]
        HRESULT Click();
        [id(0x000007d2), propget, helpcontext(0x0009049a)]
        HRESULT IsDefault([out, retval] MsoTriState* IsDefault);
        [id(0x000007d2), propput, helpcontext(0x0009049a)]
        HRESULT IsDefault([in] MsoTriState IsDefault);
        [id(0x000007d3), propget, helpcontext(0x0009049b)]
        HRESULT IsEscape([out, retval] MsoTriState* IsEscape);
        [id(0x000007d3), propput, helpcontext(0x0009049b)]
        HRESULT IsEscape([in] MsoTriState IsEscape);
        [id(0x000007d4), propget, helpcontext(0x0009049c)]
        HRESULT OnPressed([out, retval] BSTR* OnPressed);
        [id(0x000007d4), propput, helpcontext(0x0009049c)]
        HRESULT OnPressed([in] BSTR OnPressed);
    };

    [
      odl,
      uuid(914934A6-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00090880),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPToggleButton : PPControl {
        [id(0x000007d1), propget, helpcontext(0x00090881)]
        HRESULT State([out, retval] MsoTriState* State);
        [id(0x000007d1), propput, helpcontext(0x00090881)]
        HRESULT State([in] MsoTriState State);
        [id(0x000007d2), propget, helpcontext(0x00090882)]
        HRESULT ResourceID([out, retval] int* ResourceID);
        [id(0x000007d2), propput, helpcontext(0x00090882)]
        HRESULT ResourceID([in] int ResourceID);
        [id(0x000007d3), helpcontext(0x00090883)]
        HRESULT Click();
        [id(0x000007d4), propget, helpcontext(0x00090884)]
        HRESULT OnClick([out, retval] BSTR* OnClick);
        [id(0x000007d4), propput, helpcontext(0x00090884)]
        HRESULT OnClick([in] BSTR OnClick);
    };

    [
      odl,
      uuid(914934A7-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00090c68),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPBitmapButton : PPControl {
        [id(0x000007d1), helpcontext(0x00090c69)]
        HRESULT Click();
        [id(0x000007d2), propget, helpcontext(0x00090c6a)]
        HRESULT ResourceID([out, retval] int* ResourceID);
        [id(0x000007d2), propput, helpcontext(0x00090c6a)]
        HRESULT ResourceID([in] int ResourceID);
        [id(0x000007d3), propget, helpcontext(0x00090c6b)]
        HRESULT OnPressed([out, retval] BSTR* OnPressed);
        [id(0x000007d3), propput, helpcontext(0x00090c6b)]
        HRESULT OnPressed([in] BSTR OnPressed);
        [id(0x000007d4), propget, helpcontext(0x00090c6c)]
        HRESULT IsDefault([out, retval] MsoTriState* IsDefault);
        [id(0x000007d4), propput, helpcontext(0x00090c6c)]
        HRESULT IsDefault([in] MsoTriState IsDefault);
        [id(0x000007d5), propget, helpcontext(0x00090c6d)]
        HRESULT IsEscape([out, retval] MsoTriState* IsEscape);
        [id(0x000007d5), propput, helpcontext(0x00090c6d)]
        HRESULT IsEscape([in] MsoTriState IsEscape);
    };

    [
      odl,
      uuid(914934A8-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00091050),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPListBox : PPControl {
        [id(0x000007d1), propget, helpcontext(0x00091051)]
        HRESULT Strings([out, retval] PPStrings** Strings);
        [id(0x000007d2), propget, helpcontext(0x00091052)]
        HRESULT SelectionStyle([out, retval] PpListBoxSelectionStyle* SelectionStyle);
        [id(0x000007d2), propput, helpcontext(0x00091052)]
        HRESULT SelectionStyle([in] PpListBoxSelectionStyle SelectionStyle);
        [id(0x000007d3), helpcontext(0x00091053)]
        HRESULT SetTabStops([in] VARIANT safeArrayTabStops);
        [id(0x000007d4), propget, helpcontext(0x00091054)]
        HRESULT FocusItem([out, retval] int* FocusItem);
        [id(0x000007d4), propput, helpcontext(0x00091054)]
        HRESULT FocusItem([in] int FocusItem);
        [id(0x000007d5), propget, helpcontext(0x00091055)]
        HRESULT TopItem([out, retval] int* TopItem);
        [id(0x000007d6), propget, helpcontext(0x00091056)]
        HRESULT OnSelectionChange([out, retval] BSTR* OnSelectionChange);
        [id(0x000007d6), propput, helpcontext(0x00091056)]
        HRESULT OnSelectionChange([in] BSTR OnSelectionChange);
        [id(0x000007d7), propget, helpcontext(0x00091057)]
        HRESULT OnDoubleClick([out, retval] BSTR* OnDoubleClick);
        [id(0x000007d7), propput, helpcontext(0x00091057)]
        HRESULT OnDoubleClick([in] BSTR OnDoubleClick);
        [id(0x000003e7), propget, helpcontext(0x00091058)]
        HRESULT IsSelected(
                        [in] int index, 
                        [out, retval] MsoTriState* IsSelected);
        [id(0x000003e7), propput, helpcontext(0x00091058)]
        HRESULT IsSelected(
                        [in] int index, 
                        [in] MsoTriState IsSelected);
        [id(0x000007d8), helpcontext(0x00091059)]
        HRESULT Abbreviate([in] PpListBoxAbbreviationStyle Style);
        [id(0x000007d9), propget, helpcontext(0x0009105a)]
        HRESULT IsAbbreviated([out, retval] PpListBoxAbbreviationStyle* IsAbbreviated);
    };

    [
      odl,
      uuid(914934A9-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00091438),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPStrings : Collection {
        [id(00000000), helpcontext(0x00091439)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] BSTR* Item);
        [id(0x000007d1), helpcontext(0x0009143a)]
        HRESULT Add(
                        [in] BSTR String, 
                        [out, retval] BSTR* Add);
        [id(0x000007d2), helpcontext(0x0009143b)]
        HRESULT Insert(
                        [in] BSTR String, 
                        [in] int Position);
        [id(0x000007d3), helpcontext(0x0009143c)]
        HRESULT Delete([in] int index);
    };

    [
      odl,
      uuid(914934AA-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00091820),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPCheckBox : PPControl {
        [id(0x000007d1), propget, helpcontext(0x00091821)]
        HRESULT State([out, retval] MsoTriState* State);
        [id(0x000007d1), propput, helpcontext(0x00091821)]
        HRESULT State([in] MsoTriState State);
        [id(0x000007d2), helpcontext(0x00091822)]
        HRESULT Click();
        [id(0x000007d3), propget, helpcontext(0x00091823)]
        HRESULT OnClick([out, retval] BSTR* OnClick);
        [id(0x000007d3), propput, helpcontext(0x00091823)]
        HRESULT OnClick([in] BSTR OnClick);
    };

    [
      odl,
      uuid(914934AB-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00091c08),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPRadioCluster : PPControl {
        [id(00000000), helpcontext(0x00091c09)]
        HRESULT Item(
                        [in] VARIANT index, 
                        [out, retval] PPRadioButton** Item);
        [id(0x000007d1), helpcontext(0x00091c0a)]
        HRESULT Add(
                        [in] single Left, 
                        [in] single Top, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] PPRadioButton** Add);
        [id(0x000007d2), propget, helpcontext(0x00091c0b)]
        HRESULT Count([out, retval] int* Count);
        [id(0x000007d3), propget, helpcontext(0x00091c0c)]
        HRESULT Selected([out, retval] PPRadioButton** Selected);
        [id(0x000007d4), propget, helpcontext(0x00091c0d)]
        HRESULT OnClick([out, retval] BSTR* OnClick);
        [id(0x000007d4), propput, helpcontext(0x00091c0d)]
        HRESULT OnClick([in] BSTR OnClick);
    };

    [
      odl,
      uuid(914934AC-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00091ff0),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPStaticText : PPControl {
        [id(0x000007d1), propget, helpcontext(0x00091ff1)]
        HRESULT UseForegroundColor([out, retval] MsoTriState* UseForegroundColor);
        [id(0x000007d1), propput, helpcontext(0x00091ff1)]
        HRESULT UseForegroundColor([in] MsoTriState UseForegroundColor);
        [id(0x000007d2), propget, helpcontext(0x00091ff2)]
        HRESULT UseBackgroundColor([out, retval] MsoTriState* UseBackgroundColor);
        [id(0x000007d2), propput, helpcontext(0x00091ff2)]
        HRESULT UseBackgroundColor([in] MsoTriState UseBackgroundColor);
        [id(0x000007d3), propget, helpcontext(0x00091ff3)]
        HRESULT ForegroundColor([out, retval] MsoRGBType* ForegroundColor);
        [id(0x000007d3), propput, helpcontext(0x00091ff3)]
        HRESULT ForegroundColor([in] MsoRGBType ForegroundColor);
        [id(0x000007d4), propget, helpcontext(0x00091ff4)]
        HRESULT BackgroundColor([out, retval] MsoRGBType* BackgroundColor);
        [id(0x000007d4), propput, helpcontext(0x00091ff4)]
        HRESULT BackgroundColor([in] MsoRGBType BackgroundColor);
    };

    [
      odl,
      uuid(914934AD-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000923d8),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPEditText : PPControl {
        [id(0x000007d1), propget, helpcontext(0x000923d9)]
        HRESULT MultiLine([out, retval] MsoTriState* MultiLine);
        [id(0x000007d1), propput, helpcontext(0x000923d9)]
        HRESULT MultiLine([in] MsoTriState MultiLine);
        [id(0x000007d2), propget, helpcontext(0x000923da)]
        HRESULT VerticalScrollBar([out, retval] MsoTriState* VerticalScrollBar);
        [id(0x000007d2), propput, helpcontext(0x000923da)]
        HRESULT VerticalScrollBar([in] MsoTriState VerticalScrollBar);
        [id(0x000007d3), propget, helpcontext(0x000923db)]
        HRESULT WordWrap([out, retval] MsoTriState* WordWrap);
        [id(0x000007d3), propput, helpcontext(0x000923db)]
        HRESULT WordWrap([in] MsoTriState WordWrap);
        [id(0x000007d4), propget, helpcontext(0x000923dc)]
        HRESULT ReadOnly([out, retval] MsoTriState* ReadOnly);
        [id(0x000007d4), propput, helpcontext(0x000923dc)]
        HRESULT ReadOnly([in] MsoTriState ReadOnly);
        [id(0x000007d5), propget, helpcontext(0x000923dd)]
        HRESULT Text([out, retval] BSTR* Text);
        [id(0x000007d5), propput, helpcontext(0x000923dd)]
        HRESULT Text([in] BSTR Text);
        [id(0x000007d6), propget, helpcontext(0x000923de)]
        HRESULT MaxLength([out, retval] int* MaxLength);
        [id(0x000007d6), propput, helpcontext(0x000923de)]
        HRESULT MaxLength([in] int MaxLength);
        [id(0x000007d7), propget, helpcontext(0x000923df)]
        HRESULT OnAChange([out, retval] BSTR* OnAChange);
        [id(0x000007d7), propput, helpcontext(0x000923df)]
        HRESULT OnAChange([in] BSTR OnAChange);
    };

    [
      odl,
      uuid(914934AE-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000927c0),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPIcon : PPControl {
        [id(0x000007d1), propget, helpcontext(0x000927c1)]
        HRESULT ResourceID([out, retval] int* ResourceID);
        [id(0x000007d1), propput, helpcontext(0x000927c1)]
        HRESULT ResourceID([in] int ResourceID);
    };

    [
      odl,
      uuid(914934AF-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00092ba8),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPBitmap : PPControl {
        [id(0x000007d0), propget, helpcontext(0x00092ba8)]
        HRESULT ResourceID([out, retval] int* ResourceID);
        [id(0x000007d0), propput, helpcontext(0x00092ba8)]
        HRESULT ResourceID([in] int ResourceID);
        [id(0x000007d1), propget, helpcontext(0x00092ba9)]
        HRESULT OnClick([out, retval] BSTR* OnClick);
        [id(0x000007d1), propput, helpcontext(0x00092ba9)]
        HRESULT OnClick([in] BSTR OnClick);
    };

    [
      odl,
      uuid(914934B0-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00092f90),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPSpinner : PPControl {
        [id(0x000007d1), propget, helpcontext(0x00092f91)]
        HRESULT Minimum([out, retval] int* Minimum);
        [id(0x000007d1), propput, helpcontext(0x00092f91)]
        HRESULT Minimum([in] int Minimum);
        [id(0x000007d2), propget, helpcontext(0x00092f92)]
        HRESULT Maximum([out, retval] int* Maximum);
        [id(0x000007d2), propput, helpcontext(0x00092f92)]
        HRESULT Maximum([in] int Maximum);
        [id(0x000007d3), propget, helpcontext(0x00092f93)]
        HRESULT Increment([out, retval] int* Increment);
        [id(0x000007d3), propput, helpcontext(0x00092f93)]
        HRESULT Increment([in] int Increment);
        [id(0x000007d4), propget, helpcontext(0x00092f94)]
        HRESULT PageChange([out, retval] int* PageChange);
        [id(0x000007d4), propput, helpcontext(0x00092f94)]
        HRESULT PageChange([in] int PageChange);
        [id(0x000007d5), propget, helpcontext(0x00092f95)]
        HRESULT CurrentValue([out, retval] int* CurrentValue);
        [id(0x000007d5), propput, helpcontext(0x00092f95)]
        HRESULT CurrentValue([in] int CurrentValue);
        [id(0x000007d6), propget, helpcontext(0x00092f96)]
        HRESULT OnAChange([out, retval] BSTR* OnAChange);
        [id(0x000007d6), propput, helpcontext(0x00092f96)]
        HRESULT OnAChange([in] BSTR OnAChange);
    };

    [
      odl,
      uuid(914934B1-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00093378),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPScrollBar : PPControl {
        [id(0x000007d1), propget, helpcontext(0x00093379)]
        HRESULT Minimum([out, retval] int* Minimum);
        [id(0x000007d1), propput, helpcontext(0x00093379)]
        HRESULT Minimum([in] int Minimum);
        [id(0x000007d2), propget, helpcontext(0x0009337a)]
        HRESULT Maximum([out, retval] int* Maximum);
        [id(0x000007d2), propput, helpcontext(0x0009337a)]
        HRESULT Maximum([in] int Maximum);
        [id(0x000007d3), propget, helpcontext(0x0009337b)]
        HRESULT Increment([out, retval] int* Increment);
        [id(0x000007d3), propput, helpcontext(0x0009337b)]
        HRESULT Increment([in] int Increment);
        [id(0x000007d4), propget, helpcontext(0x0009337c)]
        HRESULT PageChange([out, retval] int* PageChange);
        [id(0x000007d4), propput, helpcontext(0x0009337c)]
        HRESULT PageChange([in] int PageChange);
        [id(0x000007d5), propget, helpcontext(0x0009337d)]
        HRESULT CurrentValue([out, retval] int* CurrentValue);
        [id(0x000007d5), propput, helpcontext(0x0009337d)]
        HRESULT CurrentValue([in] int CurrentValue);
        [id(0x000007d6), propget, helpcontext(0x0009337e)]
        HRESULT OnScroll([out, retval] BSTR* OnScroll);
        [id(0x000007d6), propput, helpcontext(0x0009337e)]
        HRESULT OnScroll([in] BSTR OnScroll);
    };

    [
      odl,
      uuid(914934B2-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00093760),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPGroupBox : PPControl {
    };

    [
      odl,
      uuid(914934B3-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00093b48),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPFrame : PPControl {
    };

    [
      odl,
      uuid(914934B4-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00093f30),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPTabControl : PPControl {
    };

    [
      odl,
      uuid(914934B5-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00094318),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPDropDown : PPControl {
        [id(0x000007d1), propget, helpcontext(0x00094319)]
        HRESULT Strings([out, retval] PPStrings** Strings);
        [id(0x000007d2), propget, helpcontext(0x0009431a)]
        HRESULT FocusItem([out, retval] int* FocusItem);
        [id(0x000007d2), propput, helpcontext(0x0009431a)]
        HRESULT FocusItem([in] int FocusItem);
        [id(0x000007d3), propget, helpcontext(0x0009431b)]
        HRESULT OnSelectionChange([out, retval] BSTR* OnSelectionChange);
        [id(0x000007d3), propput, helpcontext(0x0009431b)]
        HRESULT OnSelectionChange([in] BSTR OnSelectionChange);
    };

    [
      odl,
      uuid(914934B6-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00094700),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPDropDownEdit : PPControl {
        [id(0x000007d1), propget, helpcontext(0x00094701)]
        HRESULT Strings([out, retval] PPStrings** Strings);
        [id(0x000007d2), propget, helpcontext(0x00094702)]
        HRESULT FocusItem([out, retval] int* FocusItem);
        [id(0x000007d2), propput, helpcontext(0x00094702)]
        HRESULT FocusItem([in] int FocusItem);
        [id(0x000007d3), propget, helpcontext(0x00094703)]
        HRESULT OnSelectionChange([out, retval] BSTR* OnSelectionChange);
        [id(0x000007d3), propput, helpcontext(0x00094703)]
        HRESULT OnSelectionChange([in] BSTR OnSelectionChange);
        [id(0x000007d4), propget, helpcontext(0x00094704)]
        HRESULT OnEdit([out, retval] BSTR* OnEdit);
        [id(0x000007d4), propput, helpcontext(0x00094704)]
        HRESULT OnEdit([in] BSTR OnEdit);
    };

    [
      odl,
      uuid(914934B7-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00094ae8),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPSlideMiniature : PPControl {
        [id(0x000007d1), helpcontext(0x00094ae9)]
        HRESULT SetImage([in] Slide* Slide);
        [id(0x000007d2), propget, helpcontext(0x00094aea)]
        HRESULT Selected([out, retval] int* Selected);
        [id(0x000007d2), propput, helpcontext(0x00094aea)]
        HRESULT Selected([in] int Selected);
        [id(0x000007d3), propget, helpcontext(0x00094aeb)]
        HRESULT OnClick([out, retval] BSTR* OnClick);
        [id(0x000007d3), propput, helpcontext(0x00094aeb)]
        HRESULT OnClick([in] BSTR OnClick);
        [id(0x000007d4), propget, helpcontext(0x00094aec)]
        HRESULT OnDoubleClick([out, retval] BSTR* OnDoubleClick);
        [id(0x000007d4), propput, helpcontext(0x00094aec)]
        HRESULT OnDoubleClick([in] BSTR OnDoubleClick);
    };

    [
      odl,
      uuid(914934B8-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00094ed0),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface PPRadioButton : PPControl {
        [id(0x000007d1), propget, helpcontext(0x00094ed1)]
        HRESULT State([out, retval] MsoTriState* State);
        [id(0x000007d1), propput, helpcontext(0x00094ed1)]
        HRESULT State([in] MsoTriState State);
        [id(0x000007d2), helpcontext(0x00094ed2)]
        HRESULT Click();
        [id(0x000007d3), helpcontext(0x00094ed3)]
        HRESULT DoubleClick();
        [id(0x000007d4), propget, helpcontext(0x00094ed4)]
        HRESULT OnClick([out, retval] BSTR* OnClick);
        [id(0x000007d4), propput, helpcontext(0x00094ed4)]
        HRESULT OnClick([in] BSTR OnClick);
        [id(0x000007d5), propget, helpcontext(0x00094ed5)]
        HRESULT OnDoubleClick([out, retval] BSTR* OnDoubleClick);
        [id(0x000007d5), propput, helpcontext(0x00094ed5)]
        HRESULT OnDoubleClick([in] BSTR OnDoubleClick);
    };

    [
      odl,
      uuid(914934B9-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000952b8),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Tags : Collection {
        [id(0x000007d1), propget, helpcontext(0x000952b9)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x000952ba)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x000952bb)]
        HRESULT Item(
                        [in] BSTR Name, 
                        [out, retval] BSTR* Item);
        [id(0x000007d3), helpcontext(0x000952bc)]
        HRESULT Add(
                        [in] BSTR Name, 
                        [in] BSTR Value);
        [id(0x000007d4), helpcontext(0x000952bd)]
        HRESULT Delete([in] BSTR Name);
        [id(0x000007d5), hidden, helpcontext(0x000952be)]
        HRESULT AddBinary(
                        [in] BSTR Name, 
                        [in] BSTR FilePath);
        [id(0x000007d6), hidden, helpcontext(0x000952bf)]
        HRESULT BinaryValue(
                        [in] BSTR Name, 
                        [out, retval] long* BinaryValue);
        [id(0x000007d7), helpcontext(0x000952c0)]
        HRESULT Name(
                        [in] int index, 
                        [out, retval] BSTR* Name);
        [id(0x000007d8), helpcontext(0x000952c1)]
        HRESULT Value(
                        [in] int index, 
                        [out, retval] BSTR* Value);
    };

    [
      odl,
      uuid(914934BA-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000956a0),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface FileDialogFileList : Collection {
        [id(0x000007d1), propget, helpcontext(0x000956a1)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x000956a2)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x000956a3)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] BSTR* Item);
        [id(0x000007d3), helpcontext(0x000956a4)]
        HRESULT DisplayName(
                        [in] int index, 
                        [out, retval] BSTR* DisplayName);
    };

    [
      odl,
      uuid(914934BB-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00095a88),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface FileDialogExtension : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x00095a89)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00095a8a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x00095a8b)]
        HRESULT Extensions([out, retval] BSTR* Extensions);
        [id(0x000007d3), propput, helpcontext(0x00095a8b)]
        HRESULT Extensions([in] BSTR Extensions);
        [id(0x000007d4), propget, helpcontext(0x00095a8c)]
        HRESULT Description([out, retval] BSTR* Description);
        [id(0x000007d4), propput, helpcontext(0x00095a8c)]
        HRESULT Description([in] BSTR Description);
    };

    [
      odl,
      uuid(914934BC-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00095e70),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface FileDialogExtensionList : Collection {
        [id(0x000007d1), propget, helpcontext(0x00095e71)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00095e72)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x00095e73)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] FileDialogExtension** Item);
        [id(0x000007d3), helpcontext(0x00095e74)]
        HRESULT Add(
                        [in] BSTR Extension, 
                        [in] BSTR Description, 
                        [out, retval] FileDialogExtension** Add);
    };

    [
      odl,
      uuid(914934BD-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00096258),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface FileDialog : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x00096259)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0009625a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0009625b)]
        HRESULT Extensions([out, retval] FileDialogExtensionList** Extensions);
        [id(0x000007d4), propget, helpcontext(0x0009625c)]
        HRESULT DefaultDirectoryRegKey([out, retval] BSTR* DefaultDirectoryRegKey);
        [id(0x000007d4), propput, helpcontext(0x0009625c)]
        HRESULT DefaultDirectoryRegKey([in] BSTR DefaultDirectoryRegKey);
        [id(0x000007d5), propget, helpcontext(0x0009625d)]
        HRESULT DialogTitle([out, retval] BSTR* DialogTitle);
        [id(0x000007d5), propput, helpcontext(0x0009625d)]
        HRESULT DialogTitle([in] BSTR DialogTitle);
        [id(0x000007d6), propget, helpcontext(0x0009625e)]
        HRESULT ActionButtonName([out, retval] BSTR* ActionButtonName);
        [id(0x000007d6), propput, helpcontext(0x0009625e)]
        HRESULT ActionButtonName([in] BSTR ActionButtonName);
        [id(0x000007d7), propget, helpcontext(0x0009625f)]
        HRESULT IsMultiSelect([out, retval] MsoTriState* IsMultiSelect);
        [id(0x000007d7), propput, helpcontext(0x0009625f)]
        HRESULT IsMultiSelect([in] MsoTriState IsMultiSelect);
        [id(0x000007d8), propget, helpcontext(0x00096260)]
        HRESULT IsPrintEnabled([out, retval] MsoTriState* IsPrintEnabled);
        [id(0x000007d8), propput, helpcontext(0x00096260)]
        HRESULT IsPrintEnabled([in] MsoTriState IsPrintEnabled);
        [id(0x000007d9), propget, helpcontext(0x00096261)]
        HRESULT IsReadOnlyEnabled([out, retval] MsoTriState* IsReadOnlyEnabled);
        [id(0x000007d9), propput, helpcontext(0x00096261)]
        HRESULT IsReadOnlyEnabled([in] MsoTriState IsReadOnlyEnabled);
        [id(0x000007da), propget, helpcontext(0x00096262)]
        HRESULT DirectoriesOnly([out, retval] MsoTriState* DirectoriesOnly);
        [id(0x000007da), propput, helpcontext(0x00096262)]
        HRESULT DirectoriesOnly([in] MsoTriState DirectoriesOnly);
        [id(0x000007db), propget, helpcontext(0x00096263)]
        HRESULT InitialView([out, retval] PpFileDialogView* InitialView);
        [id(0x000007db), propput, helpcontext(0x00096263)]
        HRESULT InitialView([in] PpFileDialogView InitialView);
        [id(0x000007dc), helpcontext(0x00096264)]
        HRESULT Launch([in, optional, defaultvalue(<unprintable IUnknown*>)] IUnknown* pUnk);
        [id(0x000007dd), propget, helpcontext(0x00096265)]
        HRESULT OnAction([out, retval] BSTR* OnAction);
        [id(0x000007dd), propput, helpcontext(0x00096265)]
        HRESULT OnAction([in] BSTR OnAction);
        [id(0x000007de), propget, helpcontext(0x00096266)]
        HRESULT Files([out, retval] FileDialogFileList** Files);
        [id(0x000007df), propget, helpcontext(0x00096267)]
        HRESULT UseODMADlgs([out, retval] MsoTriState* UseODMADlgs);
        [id(0x000007df), propput, helpcontext(0x00096267)]
        HRESULT UseODMADlgs([in] MsoTriState UseODMADlgs);
    };

    [
      odl,
      uuid(914934BE-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00096640),
      hidden
    ]
    interface MouseTracker : IUnknown {
        [helpcontext(0x00096641)]
        HRESULT _stdcall OnTrack(
                        [in] single X, 
                        [in] single Y);
        [helpcontext(0x00096642)]
        HRESULT _stdcall EndTrack(
                        [in] single X, 
                        [in] single Y);
    };

    [
      odl,
      uuid(914934BF-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00096a28),
      hidden
    ]
    interface MouseDownHandler : IUnknown {
        [helpcontext(0x00096a29)]
        HRESULT _stdcall OnMouseDown([in] IUnknown* activeWin);
    };

    [
      odl,
      uuid(914934C0-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00096e10),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface OCXExtender : IDispatch {
        [id(0x80010007), propget, helpcontext(0x00096e11)]
        HRESULT Visible([out, retval] VARIANT_BOOL* Visible);
        [id(0x80010007), propput, helpcontext(0x00096e11)]
        HRESULT Visible([in] VARIANT_BOOL Visible);
        [id(0x80010003), propget, helpcontext(0x00096e12)]
        HRESULT Left([out, retval] single* Left);
        [id(0x80010003), propput, helpcontext(0x00096e12)]
        HRESULT Left([in] single Left);
        [id(0x80010004), propget, helpcontext(0x00096e13)]
        HRESULT Top([out, retval] single* Top);
        [id(0x80010004), propput, helpcontext(0x00096e13)]
        HRESULT Top([in] single Top);
        [id(0x80010005), propget, helpcontext(0x00096e14)]
        HRESULT Height([out, retval] single* Height);
        [id(0x80010005), propput, helpcontext(0x00096e14)]
        HRESULT Height([in] single Height);
        [id(0x80010006), propget, helpcontext(0x00096e15)]
        HRESULT Width([out, retval] single* Width);
        [id(0x80010006), propput, helpcontext(0x00096e15)]
        HRESULT Width([in] single Width);
        [id(0x800100e6), propget, helpcontext(0x00096e16)]
        HRESULT ZOrderPosition([out, retval] int* ZOrderPosition);
        [id(0x80010000), propget, helpcontext(0x00096e17)]
        HRESULT Name([out, retval] BSTR* Name);
        [id(0x80010000), propput, helpcontext(0x00096e17)]
        HRESULT Name([in] BSTR Name);
        [id(0x800100e7), propget, hidden, helpcontext(0x00096e18)]
        HRESULT AltHTML([out, retval] BSTR* AltHTML);
        [id(0x800100e7), propput, hidden, helpcontext(0x00096e18)]
        HRESULT AltHTML([in] BSTR AltHTML);
    };

    [
      odl,
      uuid(914934C1-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000971f8),
      hidden
    ]
    interface OCXExtenderEvents : IDispatch {
        [helpcontext(0x000971f9)]
        HRESULT _stdcall GotFocus();
        [helpcontext(0x000971fa)]
        HRESULT _stdcall LostFocus();
    };

    [
      uuid(91493446-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000975e0),
      hidden
    ]
    coclass OLEControl {
        [default] interface OCXExtender;
        [default, source] interface OCXExtenderEvents;
    };

    typedef enum {
        ppBorderTop = 1,
        ppBorderLeft = 2,
        ppBorderBottom = 3,
        ppBorderRight = 4,
        ppBorderDiagonalDown = 5,
        ppBorderDiagonalUp = 6
    } PpBorderType;

    typedef enum {
        ppHTMLv3 = 1,
        ppHTMLv4 = 2,
        ppHTMLDual = 3
    } PpHTMLVersion;

    typedef enum {
        ppPublishAll = 1,
        ppPublishSlideRange = 2,
        ppPublishNamedSlideShow = 3
    } PpPublishSourceType;

    typedef enum {
        ppBulletMixed = -2,
        ppBulletNone = 0,
        ppBulletUnnumbered = 1,
        ppBulletNumbered = 2,
        ppBulletPicture = 3
    } PpBulletType;

    typedef enum {
        ppBulletStyleMixed = -2,
        ppBulletAlphaLCPeriod = 0,
        ppBulletAlphaUCPeriod = 1,
        ppBulletArabicParenRight = 2,
        ppBulletArabicPeriod = 3,
        ppBulletRomanLCParenBoth = 4,
        ppBulletRomanLCParenRight = 5,
        ppBulletRomanLCPeriod = 6,
        ppBulletRomanUCPeriod = 7,
        ppBulletAlphaLCParenBoth = 8,
        ppBulletAlphaLCParenRight = 9,
        ppBulletAlphaUCParenBoth = 10,
        ppBulletAlphaUCParenRight = 11,
        ppBulletArabicParenBoth = 12,
        ppBulletArabicPlain = 13,
        ppBulletRomanUCParenBoth = 14,
        ppBulletRomanUCParenRight = 15,
        ppBulletSimpChinPlain = 16,
        ppBulletSimpChinPeriod = 17,
        ppBulletCircleNumDBPlain = 18,
        ppBulletCircleNumWDWhitePlain = 19,
        ppBulletCircleNumWDBlackPlain = 20,
        ppBulletTradChinPlain = 21,
        ppBulletTradChinPeriod = 22,
        ppBulletArabicAlphaDash = 23,
        ppBulletArabicAbjadDash = 24,
        ppBulletHebrewAlphaDash = 25,
        ppBulletKanjiKoreanPlain = 26,
        ppBulletKanjiKoreanPeriod = 27,
        ppBulletArabicDBPlain = 28,
        ppBulletArabicDBPeriod = 29
    } PpNumberedBulletStyle;

    typedef enum {
        ppBoot = 0,
        ppFileNew = 1,
        ppFileOpen = 2,
        ppFileSave = 3,
        ppPrintForeground = 4,
        ppPrintBackground = 5,
        ppOLEInsert = 6,
        ppSlideShowStart = 7,
        ppSlideShowDraw = 8,
        ppSlideViewScroll = 9,
        ppDialogStart = 10
    } PpMarkerType;

    typedef enum {
        ppShapeFormatGIF = 0,
        ppShapeFormatJPG = 1,
        ppShapeFormatPNG = 2,
        ppShapeFormatBMP = 3,
        ppShapeFormatWMF = 4
    } PpShapeFormat;

    typedef enum {
        ppRelativeToSlide = 1,
        ppClipRelativeToSlide = 2,
        ppScaleToFit = 3,
        ppScaleXY = 4
    } PpExportMode;

    [
      odl,
      uuid(914934C2-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x000979c8)
    ]
    interface EApplication : IDispatch {
        [helpcontext(0x000979c9)]
        HRESULT _stdcall WindowSelectionChange([in] Selection* Sel);
        [helpcontext(0x000979ca)]
        HRESULT _stdcall WindowBeforeRightClick(
                        [in] Selection* Sel, 
                        [in, out] VARIANT_BOOL* Cancel);
        [helpcontext(0x000979cb)]
        HRESULT _stdcall WindowBeforeDoubleClick(
                        [in] Selection* Sel, 
                        [in, out] VARIANT_BOOL* Cancel);
        [helpcontext(0x000979cc)]
        HRESULT _stdcall PresentationClose([in] Presentation* Pres);
        [helpcontext(0x000979cd)]
        HRESULT _stdcall PresentationSave([in] Presentation* Pres);
        [helpcontext(0x000979ce)]
        HRESULT _stdcall PresentationOpen([in] Presentation* Pres);
        [helpcontext(0x000979cf)]
        HRESULT _stdcall NewPresentation([in] Presentation* Pres);
        [helpcontext(0x000979d0)]
        HRESULT _stdcall PresentationNewSlide([in] Slide* Sld);
        [helpcontext(0x000979d1)]
        HRESULT _stdcall WindowActivate(
                        [in] Presentation* Pres, 
                        [in] DocumentWindow* Wn);
        [helpcontext(0x000979d2)]
        HRESULT _stdcall WindowDeactivate(
                        [in] Presentation* Pres, 
                        [in] DocumentWindow* Wn);
        [helpcontext(0x000979d3)]
        HRESULT _stdcall SlideShowBegin([in] SlideShowWindow* Wn);
        [helpcontext(0x000979d4)]
        HRESULT _stdcall SlideShowNextBuild([in] SlideShowWindow* Wn);
        [helpcontext(0x000979d5)]
        HRESULT _stdcall SlideShowNextSlide([in] SlideShowWindow* Wn);
        [helpcontext(0x000979d6)]
        HRESULT _stdcall SlideShowEnd([in] Presentation* Pres);
        [helpcontext(0x000979d7)]
        HRESULT _stdcall PresentationPrint([in] Presentation* Pres);
    };

    [
      odl,
      uuid(914934C3-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00097db0),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Table : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x00097db1)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00097db2)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x00097db3)]
        HRESULT Columns([out, retval] Columns** Columns);
        [id(0x000007d4), propget, helpcontext(0x00097db4)]
        HRESULT Rows([out, retval] Rows** Rows);
        [id(0x000007d5), helpcontext(0x00097db5)]
        HRESULT Cell(
                        [in] int Row, 
                        [in] int Column, 
                        [out, retval] Cell** Cell);
        [id(0x000007d6), propget, helpcontext(0x00097db6)]
        HRESULT TableDirection([out, retval] PpDirection* TableDirection);
        [id(0x000007d6), propput, helpcontext(0x00097db6)]
        HRESULT TableDirection([in] PpDirection TableDirection);
        [id(0x000007d7), hidden, helpcontext(0x00097db7)]
        HRESULT MergeBorders();
    };

    [
      odl,
      uuid(914934C4-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00098198),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Columns : Collection {
        [id(0x000007d1), propget, helpcontext(0x00098199)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0009819a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x0009819b)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] Column** Item);
        [id(0x000007d3), helpcontext(0x0009819c)]
        HRESULT Add(
                        [in, optional, defaultvalue(-1)] int BeforeColumn, 
                        [out, retval] Column** Add);
    };

    [
      odl,
      uuid(914934C5-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00098580),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Column : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x00098581)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00098582)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x00098583)]
        HRESULT Cells([out, retval] CellRange** Cells);
        [id(0x000007d4), helpcontext(0x00098584)]
        HRESULT Select();
        [id(0x000007d5), helpcontext(0x00098585)]
        HRESULT Delete();
        [id(0x000007d6), propget, helpcontext(0x00098586)]
        HRESULT Width([out, retval] single* Width);
        [id(0x000007d6), propput, helpcontext(0x00098586)]
        HRESULT Width([in] single Width);
    };

    [
      odl,
      uuid(914934C6-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00098968),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Rows : Collection {
        [id(0x000007d1), propget, helpcontext(0x00098969)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0009896a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x0009896b)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] Row** Item);
        [id(0x000007d3), helpcontext(0x0009896c)]
        HRESULT Add(
                        [in, optional, defaultvalue(-1)] int BeforeRow, 
                        [out, retval] Row** Add);
    };

    [
      odl,
      uuid(914934C7-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00098d50),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Row : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x00098d51)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00098d52)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x00098d53)]
        HRESULT Cells([out, retval] CellRange** Cells);
        [id(0x000007d4), helpcontext(0x00098d54)]
        HRESULT Select();
        [id(0x000007d5), helpcontext(0x00098d55)]
        HRESULT Delete();
        [id(0x000007d6), propget, helpcontext(0x00098d56)]
        HRESULT Height([out, retval] single* Height);
        [id(0x000007d6), propput, helpcontext(0x00098d56)]
        HRESULT Height([in] single Height);
    };

    [
      odl,
      uuid(914934C8-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00099138),
      dual,
      nonextensible,
      oleautomation
    ]
    interface CellRange : Collection {
        [id(0x000007d1), propget, helpcontext(0x00099139)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0009913a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x0009913b)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] Cell** Item);
        [id(0x000007d3), propget, helpcontext(0x0009913c)]
        HRESULT Borders([out, retval] Borders** Borders);
    };

    [
      odl,
      uuid(914934C9-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00099520),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Cell : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x00099521)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x00099522)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x00099523)]
        HRESULT Shape([out, retval] Shape** Shape);
        [id(0x000007d4), propget, helpcontext(0x00099524)]
        HRESULT Borders([out, retval] Borders** Borders);
        [id(0x000007d5), helpcontext(0x00099525)]
        HRESULT Merge([in] Cell* MergeTo);
        [id(0x000007d6), helpcontext(0x00099526)]
        HRESULT Split(
                        [in] int NumRows, 
                        [in] int NumColumns);
        [id(0x000007d7), helpcontext(0x00099527)]
        HRESULT Select();
        [id(0x000007d8), propget, helpcontext(0x00099528)]
        HRESULT Selected([out, retval] VARIANT_BOOL* Selected);
    };

    [
      odl,
      uuid(914934CA-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00099908),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Borders : Collection {
        [id(0x000007d1), propget, helpcontext(0x00099909)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0009990a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x0009990b)]
        HRESULT Item(
                        [in] PpBorderType BorderType, 
                        [out, retval] LineFormat** Item);
    };

    [
      odl,
      uuid(914934CB-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x00099cf0),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Panes : Collection {
        [id(0x000007d1), propget, helpcontext(0x00099cf1)]
        HRESULT Application([out, retval] Application** Application);
        [id(00000000), helpcontext(0x00099cf2)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] Pane** Item);
        [id(0x000007d2), propget, helpcontext(0x00099cf3)]
        HRESULT Parent([out, retval] IDispatch** Parent);
    };

    [
      odl,
      uuid(914934CC-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0009a0d8),
      dual,
      nonextensible,
      oleautomation
    ]
    interface Pane : IDispatch {
        [id(0x000007d0), propget, helpcontext(0x0009a0d8)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d1), helpcontext(0x0009a0d9)]
        HRESULT Activate();
        [id(0x000007d2), propget, helpcontext(0x0009a0da)]
        HRESULT Active([out, retval] MsoTriState* Active);
        [id(0x000007d3), propget, helpcontext(0x0009a0db)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d4), propget, helpcontext(0x0009a0dc)]
        HRESULT ViewType([out, retval] PpViewType* ViewType);
    };

    [
      odl,
      uuid(914934CD-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0009a4c0),
      dual,
      nonextensible,
      oleautomation
    ]
    interface DefaultWebOptions : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0009a4c1)]
        HRESULT IncludeNavigation([out, retval] MsoTriState* IncludeNavigation);
        [id(0x000007d1), propput, helpcontext(0x0009a4c1)]
        HRESULT IncludeNavigation([in] MsoTriState IncludeNavigation);
        [id(0x000007d2), propget, helpcontext(0x0009a4c2)]
        HRESULT FrameColors([out, retval] PpFrameColors* FrameColors);
        [id(0x000007d2), propput, helpcontext(0x0009a4c2)]
        HRESULT FrameColors([in] PpFrameColors FrameColors);
        [id(0x000007d3), propget, helpcontext(0x0009a4c3)]
        HRESULT ResizeGraphics([out, retval] MsoTriState* ResizeGraphics);
        [id(0x000007d3), propput, helpcontext(0x0009a4c3)]
        HRESULT ResizeGraphics([in] MsoTriState ResizeGraphics);
        [id(0x000007d4), propget, helpcontext(0x0009a4c4)]
        HRESULT ShowSlideAnimation([out, retval] MsoTriState* ShowSlideAnimation);
        [id(0x000007d4), propput, helpcontext(0x0009a4c4)]
        HRESULT ShowSlideAnimation([in] MsoTriState ShowSlideAnimation);
        [id(0x000007d5), propget, helpcontext(0x0009a4c5)]
        HRESULT OrganizeInFolder([out, retval] MsoTriState* OrganizeInFolder);
        [id(0x000007d5), propput, helpcontext(0x0009a4c5)]
        HRESULT OrganizeInFolder([in] MsoTriState OrganizeInFolder);
        [id(0x000007d6), propget, helpcontext(0x0009a4c6)]
        HRESULT UseLongFileNames([out, retval] MsoTriState* UseLongFileNames);
        [id(0x000007d6), propput, helpcontext(0x0009a4c6)]
        HRESULT UseLongFileNames([in] MsoTriState UseLongFileNames);
        [id(0x000007d7), propget, helpcontext(0x0009a4c7)]
        HRESULT RelyOnVML([out, retval] MsoTriState* RelyOnVML);
        [id(0x000007d7), propput, helpcontext(0x0009a4c7)]
        HRESULT RelyOnVML([in] MsoTriState RelyOnVML);
        [id(0x000007d8), propget, helpcontext(0x0009a4c8)]
        HRESULT AllowPNG([out, retval] MsoTriState* AllowPNG);
        [id(0x000007d8), propput, helpcontext(0x0009a4c8)]
        HRESULT AllowPNG([in] MsoTriState AllowPNG);
        [id(0x000007d9), propget, helpcontext(0x0009a4c9)]
        HRESULT ScreenSize([out, retval] MsoScreenSize* ScreenSize);
        [id(0x000007d9), propput, helpcontext(0x0009a4c9)]
        HRESULT ScreenSize([in] MsoScreenSize ScreenSize);
        [id(0x000007da), propget, helpcontext(0x0009a4ca)]
        HRESULT Encoding([out, retval] MsoEncoding* Encoding);
        [id(0x000007da), propput, helpcontext(0x0009a4ca)]
        HRESULT Encoding([in] MsoEncoding Encoding);
        [id(0x000007db), propget, helpcontext(0x0009a4cb)]
        HRESULT UpdateLinksOnSave([out, retval] MsoTriState* UpdateLinksOnSave);
        [id(0x000007db), propput, helpcontext(0x0009a4cb)]
        HRESULT UpdateLinksOnSave([in] MsoTriState UpdateLinksOnSave);
        [id(0x000007dc), propget, helpcontext(0x0009a4cc)]
        HRESULT CheckIfOfficeIsHTMLEditor([out, retval] MsoTriState* CheckIfOfficeIsHTMLEditor);
        [id(0x000007dc), propput, helpcontext(0x0009a4cc)]
        HRESULT CheckIfOfficeIsHTMLEditor([in] MsoTriState CheckIfOfficeIsHTMLEditor);
        [id(0x000007dd), propget, helpcontext(0x0009a4cd)]
        HRESULT AlwaysSaveInDefaultEncoding([out, retval] MsoTriState* AlwaysSaveInDefaultEncoding);
        [id(0x000007dd), propput, helpcontext(0x0009a4cd)]
        HRESULT AlwaysSaveInDefaultEncoding([in] MsoTriState AlwaysSaveInDefaultEncoding);
        [id(0x000007de), propget, helpcontext(0x0009a4ce)]
        HRESULT Fonts([out, retval] WebPageFonts** Fonts);
        [id(0x000007df), propget, helpcontext(0x0009a4cf)]
        HRESULT FolderSuffix([out, retval] BSTR* FolderSuffix);
    };

    [
      odl,
      uuid(914934CE-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0009a8a8),
      dual,
      nonextensible,
      oleautomation
    ]
    interface WebOptions : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0009a8a9)]
        HRESULT IncludeNavigation([out, retval] MsoTriState* IncludeNavigation);
        [id(0x000007d1), propput, helpcontext(0x0009a8a9)]
        HRESULT IncludeNavigation([in] MsoTriState IncludeNavigation);
        [id(0x000007d2), propget, helpcontext(0x0009a8aa)]
        HRESULT FrameColors([out, retval] PpFrameColors* FrameColors);
        [id(0x000007d2), propput, helpcontext(0x0009a8aa)]
        HRESULT FrameColors([in] PpFrameColors FrameColors);
        [id(0x000007d3), propget, helpcontext(0x0009a8ab)]
        HRESULT ResizeGraphics([out, retval] MsoTriState* ResizeGraphics);
        [id(0x000007d3), propput, helpcontext(0x0009a8ab)]
        HRESULT ResizeGraphics([in] MsoTriState ResizeGraphics);
        [id(0x000007d4), propget, helpcontext(0x0009a8ac)]
        HRESULT ShowSlideAnimation([out, retval] MsoTriState* ShowSlideAnimation);
        [id(0x000007d4), propput, helpcontext(0x0009a8ac)]
        HRESULT ShowSlideAnimation([in] MsoTriState ShowSlideAnimation);
        [id(0x000007d5), propget, helpcontext(0x0009a8ad)]
        HRESULT OrganizeInFolder([out, retval] MsoTriState* OrganizeInFolder);
        [id(0x000007d5), propput, helpcontext(0x0009a8ad)]
        HRESULT OrganizeInFolder([in] MsoTriState OrganizeInFolder);
        [id(0x000007d6), propget, helpcontext(0x0009a8ae)]
        HRESULT UseLongFileNames([out, retval] MsoTriState* UseLongFileNames);
        [id(0x000007d6), propput, helpcontext(0x0009a8ae)]
        HRESULT UseLongFileNames([in] MsoTriState UseLongFileNames);
        [id(0x000007d7), propget, helpcontext(0x0009a8af)]
        HRESULT RelyOnVML([out, retval] MsoTriState* RelyOnVML);
        [id(0x000007d7), propput, helpcontext(0x0009a8af)]
        HRESULT RelyOnVML([in] MsoTriState RelyOnVML);
        [id(0x000007d8), propget, helpcontext(0x0009a8b0)]
        HRESULT AllowPNG([out, retval] MsoTriState* AllowPNG);
        [id(0x000007d8), propput, helpcontext(0x0009a8b0)]
        HRESULT AllowPNG([in] MsoTriState AllowPNG);
        [id(0x000007d9), propget, helpcontext(0x0009a8b1)]
        HRESULT ScreenSize([out, retval] MsoScreenSize* ScreenSize);
        [id(0x000007d9), propput, helpcontext(0x0009a8b1)]
        HRESULT ScreenSize([in] MsoScreenSize ScreenSize);
        [id(0x000007da), propget, helpcontext(0x0009a8b2)]
        HRESULT Encoding([out, retval] MsoEncoding* Encoding);
        [id(0x000007da), propput, helpcontext(0x0009a8b2)]
        HRESULT Encoding([in] MsoEncoding Encoding);
        [id(0x000007db), propget, helpcontext(0x0009a8b3)]
        HRESULT FolderSuffix([out, retval] BSTR* FolderSuffix);
        [id(0x000007dc), helpcontext(0x0009a8b4)]
        HRESULT UseDefaultFolderSuffix();
    };

    [
      odl,
      uuid(914934CF-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0009ac90),
      dual,
      nonextensible,
      oleautomation
    ]
    interface PublishObjects : Collection {
        [id(0x000007d1), propget, helpcontext(0x0009ac91)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0009ac92)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(00000000), helpcontext(0x0009ac93)]
        HRESULT Item(
                        [in] int index, 
                        [out, retval] PublishObject** Item);
    };

    [
      odl,
      uuid(914934D0-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0009b078),
      dual,
      nonextensible,
      oleautomation
    ]
    interface PublishObject : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0009b079)]
        HRESULT Application([out, retval] Application** Application);
        [id(0x000007d2), propget, helpcontext(0x0009b07a)]
        HRESULT Parent([out, retval] IDispatch** Parent);
        [id(0x000007d3), propget, helpcontext(0x0009b07b)]
        HRESULT HTMLVersion([out, retval] PpHTMLVersion* HTMLVersion);
        [id(0x000007d3), propput, helpcontext(0x0009b07b)]
        HRESULT HTMLVersion([in] PpHTMLVersion HTMLVersion);
        [id(0x000007d4), propget, helpcontext(0x0009b07c)]
        HRESULT SourceType([out, retval] PpPublishSourceType* SourceType);
        [id(0x000007d4), propput, helpcontext(0x0009b07c)]
        HRESULT SourceType([in] PpPublishSourceType SourceType);
        [id(0x000007d5), propget, helpcontext(0x0009b07d)]
        HRESULT RangeStart([out, retval] int* RangeStart);
        [id(0x000007d5), propput, helpcontext(0x0009b07d)]
        HRESULT RangeStart([in] int RangeStart);
        [id(0x000007d6), propget, helpcontext(0x0009b07e)]
        HRESULT RangeEnd([out, retval] int* RangeEnd);
        [id(0x000007d6), propput, helpcontext(0x0009b07e)]
        HRESULT RangeEnd([in] int RangeEnd);
        [id(0x000007d7), propget, helpcontext(0x0009b07f)]
        HRESULT SlideShowName([out, retval] BSTR* SlideShowName);
        [id(0x000007d7), propput, helpcontext(0x0009b07f)]
        HRESULT SlideShowName([in] BSTR SlideShowName);
        [id(0x000007d8), propget, helpcontext(0x0009b080)]
        HRESULT SpeakerNotes([out, retval] MsoTriState* SpeakerNotes);
        [id(0x000007d8), propput, helpcontext(0x0009b080)]
        HRESULT SpeakerNotes([in] MsoTriState SpeakerNotes);
        [id(0x000007d9), propget, helpcontext(0x0009b081)]
        HRESULT FileName([out, retval] BSTR* FileName);
        [id(0x000007d9), propput, helpcontext(0x0009b081)]
        HRESULT FileName([in] BSTR FileName);
        [id(0x000007da), helpcontext(0x0009b082)]
        HRESULT Publish();
    };

    [
      odl,
      uuid(914934D1-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0009b460),
      hidden,
      dual,
      nonextensible,
      oleautomation
    ]
    interface Marker : IDispatch {
        [id(0x000007d1), propget, helpcontext(0x0009b461)]
        HRESULT MarkerType([out, retval] PpMarkerType* MarkerType);
        [id(0x000007d1), propput, helpcontext(0x0009b461)]
        HRESULT MarkerType([in] PpMarkerType MarkerType);
        [id(0x000007d2), propget, helpcontext(0x0009b462)]
        HRESULT Time([out, retval] int* Time);
    };

    [
      odl,
      uuid(914934D2-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0009b848),
      hidden
    ]
    interface MasterEvents : IUnknown {
    };

    [
      uuid(91493447-5A91-11CF-8700-00AA0060263B),
      helpcontext(0x0009bc30)
    ]
    coclass Master {
        [default] interface _Master;
        [default, source] interface MasterEvents;
    };
};
