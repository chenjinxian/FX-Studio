// ---------------------------------------------------------------------------
// ./wxluacan.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------


#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

#ifndef WX_PRECOMP
     #include "wx/wx.h"
#endif

#include "wxlua/wxlstate.h"
#include "wxluacan_bind.h"

#ifdef __GNUC__
    #pragma GCC diagnostic ignored "-Wunused-variable"
#endif // __GNUC__

// ---------------------------------------------------------------------------
// Bind class wxlCanObj
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxlCanObj'
int wxluatype_wxlCanObj = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxlCanObj_AddObject[] = { &wxluatype_wxlCanObj, &wxluatype_wxlCanObj, NULL };
static int LUACALL wxLua_wxlCanObj_AddObject(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlCanObj_AddObject[1] = {{ wxLua_wxlCanObj_AddObject, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxlCanObj_AddObject }};
//     void AddObject( wxlCanObj *canobj );
static int LUACALL wxLua_wxlCanObj_AddObject(lua_State *L)
{
    // wxlCanObj canobj
    wxlCanObj * canobj = (wxlCanObj *)wxluaT_getuserdatatype(L, 2, wxluatype_wxlCanObj);
    // get this
    wxlCanObj * self = (wxlCanObj *)wxluaT_getuserdatatype(L, 1, wxluatype_wxlCanObj);
    // call AddObject
    self->AddObject(canobj);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxlCanObj_GetX[] = { &wxluatype_wxlCanObj, NULL };
static int LUACALL wxLua_wxlCanObj_GetX(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlCanObj_GetX[1] = {{ wxLua_wxlCanObj_GetX, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxlCanObj_GetX }};
//     double GetX( );
static int LUACALL wxLua_wxlCanObj_GetX(lua_State *L)
{
    // get this
    wxlCanObj * self = (wxlCanObj *)wxluaT_getuserdatatype(L, 1, wxluatype_wxlCanObj);
    // call GetX
    double returns = (self->GetX());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxlCanObj_GetY[] = { &wxluatype_wxlCanObj, NULL };
static int LUACALL wxLua_wxlCanObj_GetY(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlCanObj_GetY[1] = {{ wxLua_wxlCanObj_GetY, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxlCanObj_GetY }};
//     double GetY( );
static int LUACALL wxLua_wxlCanObj_GetY(lua_State *L)
{
    // get this
    wxlCanObj * self = (wxlCanObj *)wxluaT_getuserdatatype(L, 1, wxluatype_wxlCanObj);
    // call GetY
    double returns = (self->GetY());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}


#if wxLUA_USE_wxColourPenBrush
static wxLuaArgType s_wxluatypeArray_wxLua_wxlCanObj_SetBrush[] = { &wxluatype_wxlCanObj, &wxluatype_wxBrush, NULL };
static int LUACALL wxLua_wxlCanObj_SetBrush(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlCanObj_SetBrush[1] = {{ wxLua_wxlCanObj_SetBrush, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxlCanObj_SetBrush }};
//     void SetBrush( const wxBrush& brush );
static int LUACALL wxLua_wxlCanObj_SetBrush(lua_State *L)
{
    // const wxBrush brush
    const wxBrush * brush = (const wxBrush *)wxluaT_getuserdatatype(L, 2, wxluatype_wxBrush);
    // get this
    wxlCanObj * self = (wxlCanObj *)wxluaT_getuserdatatype(L, 1, wxluatype_wxlCanObj);
    // call SetBrush
    self->SetBrush(*brush);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxlCanObj_SetPen[] = { &wxluatype_wxlCanObj, &wxluatype_wxPen, NULL };
static int LUACALL wxLua_wxlCanObj_SetPen(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlCanObj_SetPen[1] = {{ wxLua_wxlCanObj_SetPen, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxlCanObj_SetPen }};
//     void SetPen( const wxPen& pen );
static int LUACALL wxLua_wxlCanObj_SetPen(lua_State *L)
{
    // const wxPen pen
    const wxPen * pen = (const wxPen *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPen);
    // get this
    wxlCanObj * self = (wxlCanObj *)wxluaT_getuserdatatype(L, 1, wxluatype_wxlCanObj);
    // call SetPen
    self->SetPen(*pen);

    return 0;
}

#endif // wxLUA_USE_wxColourPenBrush

static wxLuaArgType s_wxluatypeArray_wxLua_wxlCanObj_SetPending[] = { &wxluatype_wxlCanObj, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxlCanObj_SetPending(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlCanObj_SetPending[1] = {{ wxLua_wxlCanObj_SetPending, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxlCanObj_SetPending }};
//     void SetPending( bool pending = true );
static int LUACALL wxLua_wxlCanObj_SetPending(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool pending = true
    bool pending = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // get this
    wxlCanObj * self = (wxlCanObj *)wxluaT_getuserdatatype(L, 1, wxluatype_wxlCanObj);
    // call SetPending
    self->SetPending(pending);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxlCanObj_SetPos[] = { &wxluatype_wxlCanObj, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxlCanObj_SetPos(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlCanObj_SetPos[1] = {{ wxLua_wxlCanObj_SetPos, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxlCanObj_SetPos }};
//    	void SetPos( double x, double y );
static int LUACALL wxLua_wxlCanObj_SetPos(lua_State *L)
{
    // double y
    double y = (double)wxlua_getnumbertype(L, 3);
    // double x
    double x = (double)wxlua_getnumbertype(L, 2);
    // get this
    wxlCanObj * self = (wxlCanObj *)wxluaT_getuserdatatype(L, 1, wxluatype_wxlCanObj);
    // call SetPos
    self->SetPos(x, y);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxlCanObj_constructor[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxlCanObj_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlCanObj_constructor[1] = {{ wxLua_wxlCanObj_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 2, s_wxluatypeArray_wxLua_wxlCanObj_constructor }};
//     wxlCanObj( double x = 0, double y = 0 );
static int LUACALL wxLua_wxlCanObj_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // double y = 0
    double y = (argCount >= 2 ? (double)wxlua_getnumbertype(L, 2) : 0);
    // double x = 0
    double x = (argCount >= 1 ? (double)wxlua_getnumbertype(L, 1) : 0);
    // call constructor
    wxlCanObj* returns = new wxlCanObj(x, y);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxlCanObj);

    return 1;
}



void wxLua_wxlCanObj_delete_function(void** p)
{
    wxlCanObj* o = (wxlCanObj*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxlCanObj_methods[] = {
    { "AddObject", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxlCanObj_AddObject, 1, NULL },
    { "GetX", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxlCanObj_GetX, 1, NULL },
    { "GetY", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxlCanObj_GetY, 1, NULL },

#if wxLUA_USE_wxColourPenBrush
    { "SetBrush", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxlCanObj_SetBrush, 1, NULL },
    { "SetPen", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxlCanObj_SetPen, 1, NULL },
#endif // wxLUA_USE_wxColourPenBrush

    { "SetPending", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxlCanObj_SetPending, 1, NULL },
    { "SetPos", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxlCanObj_SetPos, 1, NULL },
    { "wxlCanObj", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxlCanObj_constructor, 1, NULL },
    { 0, 0, 0, 0 },
};

int wxlCanObj_methodCount = sizeof(wxlCanObj_methods)/sizeof(wxLuaBindMethod) - 1;


// ---------------------------------------------------------------------------
// Bind class wxlCanObjRect
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxlCanObjRect'
int wxluatype_wxlCanObjRect = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxlCanObjRect_constructor[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxlCanObjRect_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlCanObjRect_constructor[1] = {{ wxLua_wxlCanObjRect_constructor, WXLUAMETHOD_CONSTRUCTOR, 4, 4, s_wxluatypeArray_wxLua_wxlCanObjRect_constructor }};
//     wxlCanObjRect(  double x, double y, double w, double h );
static int LUACALL wxLua_wxlCanObjRect_constructor(lua_State *L)
{
    // double h
    double h = (double)wxlua_getnumbertype(L, 4);
    // double w
    double w = (double)wxlua_getnumbertype(L, 3);
    // double y
    double y = (double)wxlua_getnumbertype(L, 2);
    // double x
    double x = (double)wxlua_getnumbertype(L, 1);
    // call constructor
    wxlCanObjRect* returns = new wxlCanObjRect(x, y, w, h);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxlCanObjRect);

    return 1;
}



void wxLua_wxlCanObjRect_delete_function(void** p)
{
    wxlCanObjRect* o = (wxlCanObjRect*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxlCanObjRect_methods[] = {
    { "wxlCanObjRect", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxlCanObjRect_constructor, 1, NULL },
    { 0, 0, 0, 0 },
};

int wxlCanObjRect_methodCount = sizeof(wxlCanObjRect_methods)/sizeof(wxLuaBindMethod) - 1;


// ---------------------------------------------------------------------------
// Bind class wxlCanObjCircle
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxlCanObjCircle'
int wxluatype_wxlCanObjCircle = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxlCanObjCircle_constructor[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxlCanObjCircle_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlCanObjCircle_constructor[1] = {{ wxLua_wxlCanObjCircle_constructor, WXLUAMETHOD_CONSTRUCTOR, 3, 3, s_wxluatypeArray_wxLua_wxlCanObjCircle_constructor }};
//     wxlCanObjCircle( double x, double y, double r );
static int LUACALL wxLua_wxlCanObjCircle_constructor(lua_State *L)
{
    // double r
    double r = (double)wxlua_getnumbertype(L, 3);
    // double y
    double y = (double)wxlua_getnumbertype(L, 2);
    // double x
    double x = (double)wxlua_getnumbertype(L, 1);
    // call constructor
    wxlCanObjCircle* returns = new wxlCanObjCircle(x, y, r);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxlCanObjCircle);

    return 1;
}



void wxLua_wxlCanObjCircle_delete_function(void** p)
{
    wxlCanObjCircle* o = (wxlCanObjCircle*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxlCanObjCircle_methods[] = {
    { "wxlCanObjCircle", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxlCanObjCircle_constructor, 1, NULL },
    { 0, 0, 0, 0 },
};

int wxlCanObjCircle_methodCount = sizeof(wxlCanObjCircle_methods)/sizeof(wxLuaBindMethod) - 1;


// ---------------------------------------------------------------------------
// Bind class wxlCanObjScript
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxlCanObjScript'
int wxluatype_wxlCanObjScript = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxlCanObjScript_constructor[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxlCanObjScript_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlCanObjScript_constructor[1] = {{ wxLua_wxlCanObjScript_constructor, WXLUAMETHOD_CONSTRUCTOR, 3, 3, s_wxluatypeArray_wxLua_wxlCanObjScript_constructor }};
//     wxlCanObjScript( double x, double y, const wxString& name );
static int LUACALL wxLua_wxlCanObjScript_constructor(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 3);
    // double y
    double y = (double)wxlua_getnumbertype(L, 2);
    // double x
    double x = (double)wxlua_getnumbertype(L, 1);
    // call constructor
    wxlCanObjScript* returns = new wxlCanObjScript(x, y, name);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxlCanObjScript);

    return 1;
}



void wxLua_wxlCanObjScript_delete_function(void** p)
{
    wxlCanObjScript* o = (wxlCanObjScript*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxlCanObjScript_methods[] = {
    { "wxlCanObjScript", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxlCanObjScript_constructor, 1, NULL },
    { 0, 0, 0, 0 },
};

int wxlCanObjScript_methodCount = sizeof(wxlCanObjScript_methods)/sizeof(wxLuaBindMethod) - 1;


// ---------------------------------------------------------------------------
// Bind class wxlCanObjAddScript
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxlCanObjAddScript'
int wxluatype_wxlCanObjAddScript = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxlCanObjAddScript_SetScript[] = { &wxluatype_wxlCanObjAddScript, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxlCanObjAddScript_SetScript(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlCanObjAddScript_SetScript[1] = {{ wxLua_wxlCanObjAddScript_SetScript, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxlCanObjAddScript_SetScript }};
//     void SetScript( const wxString& script );
static int LUACALL wxLua_wxlCanObjAddScript_SetScript(lua_State *L)
{
    // const wxString script
    const wxString script = wxlua_getwxStringtype(L, 2);
    // get this
    wxlCanObjAddScript * self = (wxlCanObjAddScript *)wxluaT_getuserdatatype(L, 1, wxluatype_wxlCanObjAddScript);
    // call SetScript
    self->SetScript(script);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxlCanObjAddScript_constructor[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxlCanObjAddScript_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlCanObjAddScript_constructor[1] = {{ wxLua_wxlCanObjAddScript_constructor, WXLUAMETHOD_CONSTRUCTOR, 3, 3, s_wxluatypeArray_wxLua_wxlCanObjAddScript_constructor }};
//     wxlCanObjAddScript( double x, double y,  const wxString& script );
static int LUACALL wxLua_wxlCanObjAddScript_constructor(lua_State *L)
{
    // const wxString script
    const wxString script = wxlua_getwxStringtype(L, 3);
    // double y
    double y = (double)wxlua_getnumbertype(L, 2);
    // double x
    double x = (double)wxlua_getnumbertype(L, 1);
    // call constructor
    wxlCanObjAddScript* returns = new wxlCanObjAddScript(x, y, script);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxlCanObjAddScript);

    return 1;
}



void wxLua_wxlCanObjAddScript_delete_function(void** p)
{
    wxlCanObjAddScript* o = (wxlCanObjAddScript*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxlCanObjAddScript_methods[] = {
    { "SetScript", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxlCanObjAddScript_SetScript, 1, NULL },
    { "wxlCanObjAddScript", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxlCanObjAddScript_constructor, 1, NULL },
    { 0, 0, 0, 0 },
};

int wxlCanObjAddScript_methodCount = sizeof(wxlCanObjAddScript_methods)/sizeof(wxLuaBindMethod) - 1;


// ---------------------------------------------------------------------------
// Bind class wxlCan
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxlCan'
int wxluatype_wxlCan = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxlCan_AddObject[] = { &wxluatype_wxlCan, &wxluatype_wxlCanObj, NULL };
static int LUACALL wxLua_wxlCan_AddObject(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlCan_AddObject[1] = {{ wxLua_wxlCan_AddObject, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxlCan_AddObject }};
//     void AddObject( wxlCanObj *canobj );
static int LUACALL wxLua_wxlCan_AddObject(lua_State *L)
{
    // wxlCanObj canobj
    wxlCanObj * canobj = (wxlCanObj *)wxluaT_getuserdatatype(L, 2, wxluatype_wxlCanObj);
    // get this
    wxlCan * self = (wxlCan *)wxluaT_getuserdatatype(L, 1, wxluatype_wxlCan);
    // call AddObject
    self->AddObject(canobj);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxlCan_GetCmdh[] = { &wxluatype_wxlCan, NULL };
static int LUACALL wxLua_wxlCan_GetCmdh(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlCan_GetCmdh[1] = {{ wxLua_wxlCan_GetCmdh, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxlCan_GetCmdh }};
//     wxlLuaCanCmd* GetCmdh( );
static int LUACALL wxLua_wxlCan_GetCmdh(lua_State *L)
{
    // get this
    wxlCan * self = (wxlCan *)wxluaT_getuserdatatype(L, 1, wxluatype_wxlCan);
    // call GetCmdh
    wxlLuaCanCmd* returns = (wxlLuaCanCmd*)self->GetCmdh();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxlLuaCanCmd);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxlCan_GetYaxis[] = { &wxluatype_wxlCan, NULL };
static int LUACALL wxLua_wxlCan_GetYaxis(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlCan_GetYaxis[1] = {{ wxLua_wxlCan_GetYaxis, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxlCan_GetYaxis }};
//     bool GetYaxis( );
static int LUACALL wxLua_wxlCan_GetYaxis(lua_State *L)
{
    // get this
    wxlCan * self = (wxlCan *)wxluaT_getuserdatatype(L, 1, wxluatype_wxlCan);
    // call GetYaxis
    bool returns = (self->GetYaxis());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if wxLUA_USE_wxPointSizeRect
static wxLuaArgType s_wxluatypeArray_wxLua_wxlCan_constructor[] = { &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_wxPoint, &wxluatype_wxSize, NULL };
static int LUACALL wxLua_wxlCan_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlCan_constructor[1] = {{ wxLua_wxlCan_constructor, WXLUAMETHOD_CONSTRUCTOR, 1, 4, s_wxluatypeArray_wxLua_wxlCan_constructor }};
//     wxlCan( wxWindow* parent, wxWindowID id = -1, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize );
static int LUACALL wxLua_wxlCan_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 4 ? (const wxSize *)wxluaT_getuserdatatype(L, 4, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 3 ? (const wxPoint *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPoint) : &wxDefaultPosition);
    // wxWindowID id = -1
    wxWindowID id = (argCount >= 2 ? (wxWindowID)wxlua_getnumbertype(L, 2) : -1);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call constructor
    wxlCan* returns = new wxlCan(parent, id, *pos, *size);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxlCan);

    return 1;
}

#endif // wxLUA_USE_wxPointSizeRect



void wxLua_wxlCan_delete_function(void** p)
{
    wxlCan* o = (wxlCan*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxlCan_methods[] = {
    { "AddObject", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxlCan_AddObject, 1, NULL },
    { "GetCmdh", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxlCan_GetCmdh, 1, NULL },
    { "GetYaxis", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxlCan_GetYaxis, 1, NULL },

#if wxLUA_USE_wxPointSizeRect
    { "wxlCan", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxlCan_constructor, 1, NULL },
#endif // wxLUA_USE_wxPointSizeRect

    { 0, 0, 0, 0 },
};

int wxlCan_methodCount = sizeof(wxlCan_methods)/sizeof(wxLuaBindMethod) - 1;


// ---------------------------------------------------------------------------
// Bind class wxlLuaCanCmd
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxlLuaCanCmd'
int wxluatype_wxlLuaCanCmd = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxlLuaCanCmd_MoveObject[] = { &wxluatype_wxlLuaCanCmd, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxlLuaCanCmd_MoveObject(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlLuaCanCmd_MoveObject[1] = {{ wxLua_wxlLuaCanCmd_MoveObject, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxlLuaCanCmd_MoveObject }};
//     void MoveObject( int index, double x, double y );
static int LUACALL wxLua_wxlLuaCanCmd_MoveObject(lua_State *L)
{
    // double y
    double y = (double)wxlua_getnumbertype(L, 4);
    // double x
    double x = (double)wxlua_getnumbertype(L, 3);
    // int index
    int index = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxlLuaCanCmd * self = (wxlLuaCanCmd *)wxluaT_getuserdatatype(L, 1, wxluatype_wxlLuaCanCmd);
    // call MoveObject
    self->MoveObject(index, x, y);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxlLuaCanCmd_constructor[] = { &wxluatype_wxlCan, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxlLuaCanCmd_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxlLuaCanCmd_constructor[1] = {{ wxLua_wxlLuaCanCmd_constructor, WXLUAMETHOD_CONSTRUCTOR, 1, 2, s_wxluatypeArray_wxLua_wxlLuaCanCmd_constructor }};
//     wxlLuaCanCmd( wxlCan* canvas, int maxCommands = -1 );
static int LUACALL wxLua_wxlLuaCanCmd_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int maxCommands = -1
    int maxCommands = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : -1);
    // wxlCan canvas
    wxlCan * canvas = (wxlCan *)wxluaT_getuserdatatype(L, 1, wxluatype_wxlCan);
    // call constructor
    wxlLuaCanCmd* returns = new wxlLuaCanCmd(canvas, maxCommands);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxlLuaCanCmd);

    return 1;
}



void wxLua_wxlLuaCanCmd_delete_function(void** p)
{
    wxlLuaCanCmd* o = (wxlLuaCanCmd*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxlLuaCanCmd_methods[] = {
    { "MoveObject", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxlLuaCanCmd_MoveObject, 1, NULL },
    { "wxlLuaCanCmd", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxlLuaCanCmd_constructor, 1, NULL },
    { 0, 0, 0, 0 },
};

int wxlLuaCanCmd_methodCount = sizeof(wxlLuaCanCmd_methods)/sizeof(wxLuaBindMethod) - 1;




// ---------------------------------------------------------------------------
// ./wxluacan_bind.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------


// ---------------------------------------------------------------------------
// wxLuaGetEventList_wxluacan() is called to register events
// ---------------------------------------------------------------------------

wxLuaBindEvent* wxLuaGetEventList_wxluacan(size_t &count)
{
    static wxLuaBindEvent eventList[] =
    {

        { 0, 0, 0 },
    };
    count = sizeof(eventList)/sizeof(wxLuaBindEvent) - 1;
    return eventList;
}

// ---------------------------------------------------------------------------
// wxLuaGetDefineList_wxluacan() is called to register #define and enum
// ---------------------------------------------------------------------------

wxLuaBindNumber* wxLuaGetDefineList_wxluacan(size_t &count)
{
    static wxLuaBindNumber numberList[] =
    {

        { 0, 0 },
    };
    count = sizeof(numberList)/sizeof(wxLuaBindNumber) - 1;
    return numberList;
}

// ---------------------------------------------------------------------------

// wxLuaGetStringList_wxluacan() is called to register #define_string
// ---------------------------------------------------------------------------

wxLuaBindString* wxLuaGetStringList_wxluacan(size_t &count)
{
    static wxLuaBindString stringList[] =
    {

        { 0, 0 },
    };
    count = sizeof(stringList)/sizeof(wxLuaBindString) - 1;
    return stringList;
}

// ---------------------------------------------------------------------------
// wxLuaGetObjectList_wxluacan() is called to register object and pointer bindings
// ---------------------------------------------------------------------------

wxLuaBindObject* wxLuaGetObjectList_wxluacan(size_t &count)
{
    static wxLuaBindObject objectList[] =
    {

        { 0, 0, 0, 0 },
    };
    count = sizeof(objectList)/sizeof(wxLuaBindObject) - 1;
    return objectList;
}

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxluacan() is called to register global functions
// ---------------------------------------------------------------------------

// wxlCan* GetCan( );
static int LUACALL wxLua_function_GetCan(lua_State *L)
{
    // call GetCan
    wxlCan* returns = (wxlCan*)GetCan();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxlCan);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_GetCan[1] = {{ wxLua_function_GetCan, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// wxlLuaCanCmd* GetCmdhMain( );
static int LUACALL wxLua_function_GetCmdhMain(lua_State *L)
{
    // call GetCmdhMain
    wxlLuaCanCmd* returns = (wxlLuaCanCmd*)GetCmdhMain();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxlLuaCanCmd);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_GetCmdhMain[1] = {{ wxLua_function_GetCmdhMain, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxluacan() is called to register global functions
// ---------------------------------------------------------------------------

wxLuaBindMethod* wxLuaGetFunctionList_wxluacan(size_t &count)
{
    static wxLuaBindMethod functionList[] =
    {
        { "GetCan", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_GetCan, 1, NULL },
        { "GetCmdhMain", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_GetCmdhMain, 1, NULL },

        { 0, 0, 0, 0 }, 
    };
    count = sizeof(functionList)/sizeof(wxLuaBindMethod) - 1;
    return functionList;
}



// ---------------------------------------------------------------------------
// wxLuaGetClassList_wxluacan() is called to register classes
// ---------------------------------------------------------------------------

static const char* wxluaclassname_wxCommandProcessor = "wxCommandProcessor";
static const char* wxluaclassname_wxObject = "wxObject";
static const char* wxluaclassname_wxScrolledWindow = "wxScrolledWindow";
static const char* wxluaclassname_wxlCan = "wxlCan";
static const char* wxluaclassname_wxlCanObj = "wxlCanObj";
static const char* wxluaclassname_wxlCanObjAddScript = "wxlCanObjAddScript";
static const char* wxluaclassname_wxlCanObjCircle = "wxlCanObjCircle";
static const char* wxluaclassname_wxlCanObjRect = "wxlCanObjRect";
static const char* wxluaclassname_wxlCanObjScript = "wxlCanObjScript";
static const char* wxluaclassname_wxlLuaCanCmd = "wxlLuaCanCmd";

static const char* wxluabaseclassnames_wxlCan[] = { wxluaclassname_wxScrolledWindow, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxlCan[] = { NULL };
static const char* wxluabaseclassnames_wxlCanObj[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxlCanObj[] = { NULL };
static const char* wxluabaseclassnames_wxlCanObjAddScript[] = { wxluaclassname_wxlCanObj, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxlCanObjAddScript[] = { NULL };
static const char* wxluabaseclassnames_wxlCanObjCircle[] = { wxluaclassname_wxlCanObj, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxlCanObjCircle[] = { NULL };
static const char* wxluabaseclassnames_wxlCanObjRect[] = { wxluaclassname_wxlCanObj, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxlCanObjRect[] = { NULL };
static const char* wxluabaseclassnames_wxlCanObjScript[] = { wxluaclassname_wxlCanObj, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxlCanObjScript[] = { NULL };
static const char* wxluabaseclassnames_wxlLuaCanCmd[] = { wxluaclassname_wxCommandProcessor, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxlLuaCanCmd[] = { NULL };
// ---------------------------------------------------------------------------
// Lua Tag Method Values and Tables for each Class
// ---------------------------------------------------------------------------

extern wxLuaBindMethod wxlCan_methods[];
extern int wxlCan_methodCount;
extern void wxLua_wxlCan_delete_function(void** p);
extern wxLuaBindMethod wxlCanObj_methods[];
extern int wxlCanObj_methodCount;
extern void wxLua_wxlCanObj_delete_function(void** p);
extern wxLuaBindMethod wxlCanObjAddScript_methods[];
extern int wxlCanObjAddScript_methodCount;
extern void wxLua_wxlCanObjAddScript_delete_function(void** p);
extern wxLuaBindMethod wxlCanObjCircle_methods[];
extern int wxlCanObjCircle_methodCount;
extern void wxLua_wxlCanObjCircle_delete_function(void** p);
extern wxLuaBindMethod wxlCanObjRect_methods[];
extern int wxlCanObjRect_methodCount;
extern void wxLua_wxlCanObjRect_delete_function(void** p);
extern wxLuaBindMethod wxlCanObjScript_methods[];
extern int wxlCanObjScript_methodCount;
extern void wxLua_wxlCanObjScript_delete_function(void** p);
extern wxLuaBindMethod wxlLuaCanCmd_methods[];
extern int wxlLuaCanCmd_methodCount;
extern void wxLua_wxlLuaCanCmd_delete_function(void** p);




wxLuaBindClass* wxLuaGetClassList_wxluacan(size_t &count)
{
    static wxLuaBindClass classList[] =
    {
        { wxluaclassname_wxlCan, wxlCan_methods, wxlCan_methodCount, CLASSINFO(wxlCan), &wxluatype_wxlCan, wxluabaseclassnames_wxlCan, wxluabaseclassbinds_wxlCan, NULL, NULL, NULL, 0, &wxLua_wxlCan_delete_function, }, 
        { wxluaclassname_wxlCanObj, wxlCanObj_methods, wxlCanObj_methodCount, CLASSINFO(wxlCanObj), &wxluatype_wxlCanObj, wxluabaseclassnames_wxlCanObj, wxluabaseclassbinds_wxlCanObj, NULL, NULL, NULL, 0, &wxLua_wxlCanObj_delete_function, }, 
        { wxluaclassname_wxlCanObjAddScript, wxlCanObjAddScript_methods, wxlCanObjAddScript_methodCount, CLASSINFO(wxlCanObjAddScript), &wxluatype_wxlCanObjAddScript, wxluabaseclassnames_wxlCanObjAddScript, wxluabaseclassbinds_wxlCanObjAddScript, NULL, NULL, NULL, 0, &wxLua_wxlCanObjAddScript_delete_function, }, 
        { wxluaclassname_wxlCanObjCircle, wxlCanObjCircle_methods, wxlCanObjCircle_methodCount, CLASSINFO(wxlCanObjCircle), &wxluatype_wxlCanObjCircle, wxluabaseclassnames_wxlCanObjCircle, wxluabaseclassbinds_wxlCanObjCircle, NULL, NULL, NULL, 0, &wxLua_wxlCanObjCircle_delete_function, }, 
        { wxluaclassname_wxlCanObjRect, wxlCanObjRect_methods, wxlCanObjRect_methodCount, CLASSINFO(wxlCanObjRect), &wxluatype_wxlCanObjRect, wxluabaseclassnames_wxlCanObjRect, wxluabaseclassbinds_wxlCanObjRect, NULL, NULL, NULL, 0, &wxLua_wxlCanObjRect_delete_function, }, 
        { wxluaclassname_wxlCanObjScript, wxlCanObjScript_methods, wxlCanObjScript_methodCount, CLASSINFO(wxlCanObjScript), &wxluatype_wxlCanObjScript, wxluabaseclassnames_wxlCanObjScript, wxluabaseclassbinds_wxlCanObjScript, NULL, NULL, NULL, 0, &wxLua_wxlCanObjScript_delete_function, }, 
        { wxluaclassname_wxlLuaCanCmd, wxlLuaCanCmd_methods, wxlLuaCanCmd_methodCount, CLASSINFO(wxlLuaCanCmd), &wxluatype_wxlLuaCanCmd, wxluabaseclassnames_wxlLuaCanCmd, wxluabaseclassbinds_wxlLuaCanCmd, NULL, NULL, NULL, 0, &wxLua_wxlLuaCanCmd_delete_function, }, 

        { 0, 0, 0, 0, 0, 0, 0 }, 
    };
    count = sizeof(classList)/sizeof(wxLuaBindClass) - 1;

    return classList;
}

// ---------------------------------------------------------------------------
// wxLuaBinding_wxluacan() - the binding class
// ---------------------------------------------------------------------------

IMPLEMENT_DYNAMIC_CLASS(wxLuaBinding_wxluacan, wxLuaBinding)

wxLuaBinding_wxluacan::wxLuaBinding_wxluacan() : wxLuaBinding()
{
    m_bindingName   = wxT("wxluacan");
    m_nameSpace     = wxT("wxluacan");
    m_classArray    = wxLuaGetClassList_wxluacan(m_classCount);
    m_numberArray   = wxLuaGetDefineList_wxluacan(m_numberCount);
    m_stringArray   = wxLuaGetStringList_wxluacan(m_stringCount);
    m_eventArray    = wxLuaGetEventList_wxluacan(m_eventCount);
    m_objectArray   = wxLuaGetObjectList_wxluacan(m_objectCount);
    m_functionArray = wxLuaGetFunctionList_wxluacan(m_functionCount);
    InitBinding();
}



// ---------------------------------------------------------------------------

wxLuaBinding* wxLuaBinding_wxluacan_init()
{
    static wxLuaBinding_wxluacan m_binding;

    if (wxLuaBinding::GetBindingArray().Index(&m_binding) == wxNOT_FOUND)
        wxLuaBinding::GetBindingArray().Add(&m_binding);

    return &m_binding;
}


