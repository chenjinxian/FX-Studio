# Download instructions
{
	actions screenoutput Download:apr:clone {
		cd "@(@($(1:P):P):P)"
		git clone git://github.com/xolox/lua-apr.git
	}

	actions screenoutput Download:apr {
		cd "$(SOURCE_DIR:P)"
		del $(URL:BS)
		rem curl -s -O $(URL)
		wget $(URL)
		unzip $(URL:BS)
		ren $(ZIP_DIR) $(SOURCE_DIR:BS)
		del $(URL:BS)
	}

	rule Download-apr TARGET : URL : ZIP_DIR {
		TARGET = $(SUBDIR)/$(TARGET) ;
		SOURCE_DIR on $(TARGET) = $(TARGET) ;
		URL on $(TARGET) = $(URL) ;
		ZIP_DIR on $(TARGET) = $(ZIP_DIR) ;
		Depends download:apr : $(TARGET) : $(SUBDIR)/.git/config ;
		Download:apr $(TARGET) ;
		#Depends clean:download:apr : $(TARGET) ;
	}

	Depends download:apr : $(SUBDIR)/.git/config ;
	Download:apr:clone $(SUBDIR)/.git/config ;
	CleanTree clean:download:apr : $(SUBDIR) ;
	Download-apr apr : http://apache.mirrors.pair.com//apr/apr-1.5.0-win32-src.zip : apr-1.5.0 ;
	Download-apr apr-iconv : http://apache.mirrors.pair.com//apr/apr-iconv-1.2.1-win32-src-r2.zip : apr-iconv-1.2.1 ;
	Download-apr apr-util : http://apache.mirrors.pair.com//apr/apr-util-1.5.3-win32-src.zip : apr-util-1.5.3 ;

	NotFile download:apr ;
	Depends download : download:apr ;
	Depends clean:download : clean:download:apr ;
	NotFile clean:download:apr ;
	Always clean:download:apr ;
}

